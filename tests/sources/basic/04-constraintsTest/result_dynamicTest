#!/bin/bash

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_log} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
 
  #----------------------------------------------------------------------------------
  # Compute result status
  dynamic_test_result=$(cat ${runtime_log} | grep -m 1 -o -e "Pending.\{0,29\}" | cut -c 18-)
  dynamic_test_expected="coreElementDynamic1"

  #Report result status
  if [ "$dynamic_test_result" != "$dynamic_test_expected" ]; then
    echo "[ERROR] Dynamic available resources are not correctly managed." | tee -a ${output_file}
    echo "GOT: $dynamic_test_result" | tee -a ${output_file}
    echo "EXPECTED: $dynamic_test_expected" | tee -a ${output_file}
    exit 1
  fi
  
  exit 0
  
