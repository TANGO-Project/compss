#!/bin/bash -e

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  base_app_dir=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_log} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Define log files
  expected="${target_log_folder}/java_dataLocality.complexTest_expected.out"
  got="${target_log_folder}/java_dataLocality.complexTest_got.out"

  #Parse log files
  ${base_app_dir}/result_getAvailableExpected $runtime_log > $expected
  ${base_app_dir}/result_getSubmittedGot $runtime_log > $got
  
  #Compute result
  resultTest=$(grep -v -x -f $got $expected)

  #----------------------------------------------------------------------------------
  # Report result status
  if [ -z "$resultTest" ]; then
     echo "ERROR: Task schedule do not respect score values." | tee -a ${output_file}
     echo "Check logs/java_dataLocality.complexTest_expected.out and logs/java_dataLocality.complexTest_got.out" | tee -a ${output_file}
     echo "$resultTest" | tee -a ${output_file}
     exit 1
  fi
  
  exit 0
 
