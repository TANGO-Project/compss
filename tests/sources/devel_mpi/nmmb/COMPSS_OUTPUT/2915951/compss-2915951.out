-------- Launch arguments --------
Master:                    s03r2b62
Workers:                    s06r1b51 s06r2b76 s07r1b56 s10r1b81
Tasks per Node:            16
Gpus per Node:             0
Network:                   -ib0
Worker in Master Tasks:    0
Worker in Master Memory:   28
Master Port:               43638
Master WD:                 .
Worker WD:                 /scratch/tmp
Master JVM Opts:           
Workers JVM Opts:          -Xms24800m,-Xmx24800m,-Xmn1600m
Worker in Master JVM Opts: 
Library Path:              /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
Classpath:                 /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar
Pythonpath:                /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
Appdir:			   /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
Lang:                      java
COMM:                      integratedtoolkit.nio.master.NIOAdaptor
Prolog:                    
Epilog:                    
Storage conf:              null
Task execution:            compss
To COMPSs:                  --log_level=debug --summary --graph=true --tracing=false --classpath=/home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar nmmb.Nmmb /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./nmmb_compss.properties
-----------------------------------
 
Master will run in s03r2b62
List of workers:  s06r1b51 s06r2b76 s07r1b56 s10r1b81
Generation of resources and project file finished
Project.xml:   /scratch/tmp/project_mn_1489505112.xml
Resources.xml: /scratch/tmp/resources_1489505112.xml
---- Executing Prolog actions ----
------ Launching application ------
CMD Worker 1 launcher: blaunch  s06r1b51 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/persistent_worker_starter.sh             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             3             -Xms24800m -Xmx24800m -Xmn1600m             true             16             5             5             s06r1b51-ib0             43001             43638             b663fb84-ce0f-4725-8974-1ed5db6a4d72             java             /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r1b51-ib0             /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             0             null             1             null             compss 	    0
CMD Worker 2 launcher: blaunch  s06r2b76 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/persistent_worker_starter.sh             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             3             -Xms24800m -Xmx24800m -Xmn1600m             true             16             5             5             s06r2b76-ib0             43001             43638             b663fb84-ce0f-4725-8974-1ed5db6a4d72             java             /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r2b76-ib0             /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             0             null             2             null             compss 	    0
CMD Worker 3 launcher: blaunch  s07r1b56 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/persistent_worker_starter.sh             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             3             -Xms24800m -Xmx24800m -Xmn1600m             true             16             5             5             s07r1b56-ib0             43001             43638             b663fb84-ce0f-4725-8974-1ed5db6a4d72             java             /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s07r1b56-ib0             /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             0             null             3             null             compss 	    0
CMD Worker 4 launcher: blaunch  s10r1b81 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/persistent_worker_starter.sh             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             3             -Xms24800m -Xmx24800m -Xmn1600m             true             16             5             5             s10r1b81-ib0             43001             43638             b663fb84-ce0f-4725-8974-1ed5db6a4d72             java             /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s10r1b81-ib0             /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar             /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.             0             null             4             null             compss 	    0
PERSISTENT_WORKER.sh
- HostName:          s06r2b76-ib0
- WorkerPort:        43001
- WorkingDir:        /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r2b76-ib0
- InstallDir:        /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../
- NumThreads:        16
- Gpus/node:         0
- Amount of sockets: 2
- Socket string:     0-7/8-15
- JVM Opts:           -Xms24800m -Xmx24800m -Xmn1600m
- AppUUID:           b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Lang:              java
- AppDir:            /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- libPath:           /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Classpath:         /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar
- Pythonpath:        /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Tracing:           0
- ExtraeFile:        null
Calling NIOWorker
Cmd: java        -Xms24800m -Xmx24800m -Xmn1600m       -XX:+PerfDisableSharedMem       -XX:-UsePerfData       -XX:+UseG1GC       -XX:+UseThreadPriorities       -XX:ThreadPriorityPolicy=42       -Dlog4j.configurationFile=/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/configuration/log/COMPSsWorker-log4j.debug       -classpath /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/compss-engine.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/../../../../adaptors/nio/worker/compss-adaptors-nio-worker.jar       integratedtoolkit.nio.worker.NIOWorker /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar 3 -Xms24800m -Xmx24800m -Xmn1600m true 16 5 5 s06r2b76-ib0 43001 43638 b663fb84-ce0f-4725-8974-1ed5db6a4d72 java /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r2b76-ib0 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../ /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. 0 null 2 null compss 0
PERSISTENT_WORKER.sh
PERSISTENT_WORKER.sh
- HostName:          s06r1b51-ib0
- WorkerPort:        43001
- WorkingDir:        /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r1b51-ib0
- InstallDir:        /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../
- NumThreads:        16
- Gpus/node:         0
- Amount of sockets: 2
- Socket string:     0-7/8-15
- JVM Opts:           -Xms24800m -Xmx24800m -Xmn1600m
- AppUUID:           b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Lang:              java
- AppDir:            /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- libPath:           /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Classpath:         /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar
- Pythonpath:        /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Tracing:           0
- ExtraeFile:        null
Calling NIOWorker
Cmd: java        -Xms24800m -Xmx24800m -Xmn1600m       -XX:+PerfDisableSharedMem       -XX:-UsePerfData       -XX:+UseG1GC       -XX:+UseThreadPriorities       -XX:ThreadPriorityPolicy=42       -Dlog4j.configurationFile=/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/configuration/log/COMPSsWorker-log4j.debug       -classpath /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/compss-engine.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/../../../../adaptors/nio/worker/compss-adaptors-nio-worker.jar       integratedtoolkit.nio.worker.NIOWorker /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar 3 -Xms24800m -Xmx24800m -Xmn1600m true 16 5 5 s06r1b51-ib0 43001 43638 b663fb84-ce0f-4725-8974-1ed5db6a4d72 java /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r1b51-ib0 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../ /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. 0 null 1 null compss 0
- HostName:          s10r1b81-ib0
- WorkerPort:        43001
- WorkingDir:        /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s10r1b81-ib0
- InstallDir:        /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../
- NumThreads:        16
- Gpus/node:         0
- Amount of sockets: 2
- Socket string:     0-7/8-15
- JVM Opts:           -Xms24800m -Xmx24800m -Xmn1600m
- AppUUID:           b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Lang:              java
- AppDir:            /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- libPath:           /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Classpath:         /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar
- Pythonpath:        /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Tracing:           0
- ExtraeFile:        null
Calling NIOWorker
Cmd: java        -Xms24800m -Xmx24800m -Xmn1600m       -XX:+PerfDisableSharedMem       -XX:-UsePerfData       -XX:+UseG1GC       -XX:+UseThreadPriorities       -XX:ThreadPriorityPolicy=42       -Dlog4j.configurationFile=/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/configuration/log/COMPSsWorker-log4j.debug       -classpath /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/compss-engine.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/../../../../adaptors/nio/worker/compss-adaptors-nio-worker.jar       integratedtoolkit.nio.worker.NIOWorker /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar 3 -Xms24800m -Xmx24800m -Xmn1600m true 16 5 5 s10r1b81-ib0 43001 43638 b663fb84-ce0f-4725-8974-1ed5db6a4d72 java /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s10r1b81-ib0 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../ /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. 0 null 4 null compss 0
PERSISTENT_WORKER.sh
- HostName:          s07r1b56-ib0
- WorkerPort:        43001
- WorkingDir:        /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s07r1b56-ib0
- InstallDir:        /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../
- NumThreads:        16
- Gpus/node:         0
- Amount of sockets: 2
- Socket string:     0-7/8-15
- JVM Opts:           -Xms24800m -Xmx24800m -Xmn1600m
- AppUUID:           b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Lang:              java
- AppDir:            /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- libPath:           /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Classpath:         /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar
- Pythonpath:        /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.
- Tracing:           0
- ExtraeFile:        null
Calling NIOWorker
Cmd: java        -Xms24800m -Xmx24800m -Xmn1600m       -XX:+PerfDisableSharedMem       -XX:-UsePerfData       -XX:+UseG1GC       -XX:+UseThreadPriorities       -XX:ThreadPriorityPolicy=42       -Dlog4j.configurationFile=/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/configuration/log/COMPSsWorker-log4j.debug       -classpath /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/compss-engine.jar:/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/system/adaptors/nio/../../../../adaptors/nio/worker/compss-adaptors-nio-worker.jar       integratedtoolkit.nio.worker.NIOWorker /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar 3 -Xms24800m -Xmx24800m -Xmn1600m true 16 5 5 s07r1b56-ib0 43001 43638 b663fb84-ce0f-4725-8974-1ed5db6a4d72 java /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s07r1b56-ib0 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../../ /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/. 0 null 3 null compss 0
CMD Master: blaunch  s03r2b62 /gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/../../..//Runtime/scripts/user/runcompss             --project=/scratch/tmp/project_mn_1489505112.xml             --resources=/scratch/tmp/resources_1489505112.xml             --uuid=b663fb84-ce0f-4725-8974-1ed5db6a4d72             --specific_log_dir=/home/bsc19/bsc19533/.COMPSs/2915951/             --master_name=s03r2b62-ib0             --master_port=43638             --jvm_master_opts=             --jvm_workers_opts=-Xms24800m,-Xmx24800m,-Xmn1600m  --log_level=debug --summary --graph=true --tracing=false --classpath=/home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar nmmb.Nmmb /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./nmmb_compss.properties
Waiting for application completion
[  INFO] Using default execution type: compss
[  INFO] Using default language: java
[  INFO] Relative Classpath resolved: /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar:

----------------- Executing nmmb.Nmmb --------------------------

[(2726)    API]  -  Deploying COMPSs Runtime v2.0.rc1702 (build 20170314-1331.r2850)
[(2728)    API]  -  Starting COMPSs Runtime v2.0.rc1702 (build 20170314-1331.r2850)
[(2728)    API]  -  Initializing components
[(3333)    API]  -  Ready to process tasks
[(3336)   Main]  -  Starting NMMB application
[(3337)   Main]  -  Loading NMMB Configuration file /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./nmmb_compss.properties
[(3371)   Main]  -  Configuration file loaded
[(3371)   Main]  -  Setting execution variables...
[(3377)   Main]  -  
[(3377)   Main]  -  Number of processors 64
[(3377)   Main]  -  Model grid size - IM / JM / LM: 257 / 181 / 24
[(3377)   Main]  -  Extended domain - IM / JM / LM: 259 / 183 / 24
[(3377)   Main]  -  
[(3380)   Main]  -  Execution variables set
[(3380)   Main]  -  Preparing execution...
[(3380)   Main]  -  Clean output folder : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/
[(4179)   Main]  -  Clean output folder : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/output/
[(4330)   Main]  -  Clean output folder : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output
[(4343)   Main]  -  Create output folder : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/
[(4376)   Main]  -  Create output folder : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/output/
[(4481)   Main]  -  Symbolic link for PREPROC output folder
[(4481)   Main]  -     - From: /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/output/
[(4481)   Main]  -     - To:   /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output
[(4486)   Main]  -  Execution environment prepared
[(4486)  Fixed]  -  Enter fixed process
[(4486)  Fixed]  -     - INCLUDE PATH : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/
[(4486)  Fixed]  -  Delete previous: /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/modelgrid.inc
[(4492)  Fixed]  -  Cannot erase previous modelgrid because it doesn't exist.
[(4492)  Fixed]  -  Delete previous: /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/lmimjm.inc
[(4492)  Fixed]  -  Cannot erase previous lmimjm because it doesn't exist.
[(4493) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/TLMD/0.0/ -e s/TPHD/0.0/ -e s/WBDN/-180.0/ -e s/SBDN/-90.0/ -e s/DLMN/1.40625/ -e s/DPHN/1.0/ -e s/III/257/ -e s/JJJ/181/ -e s/IBDY/259/ -e s/JBDY/183/ -e s/PTOP/100.0/ -e s/KKK/24/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/modelgrid_rrtm.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/modelgrid.inc
[(4497) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(4504) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4504) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(4504) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4504) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(4505) BashCMDExecutor]  -  !
[(4505) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4505) BashCMDExecutor]  -  !***  modelgrid.inc -  START
[(4505) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4505) BashCMDExecutor]  -  !
[(4505) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4505) BashCMDExecutor]  -  !***  model grid domain boundaries
[(4505) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4505) BashCMDExecutor]  -  !
[(4505) BashCMDExecutor]  -  real(kind=4),parameter :: tlm0d=0.0 &                             !<-- center point longitudinal (E/W)
[(4505) BashCMDExecutor]  -                           ,tph0d=0.0 &                             !<-- center point latitudinal (S/N)
[(4505) BashCMDExecutor]  -                           ,wbd=-180.0 &                               !<-- western boundary (from center point)
[(4505) BashCMDExecutor]  -                           ,sbd=-90.0 &                               !<-- southern boundary (from center point)
[(4505) BashCMDExecutor]  -                           ,pt=100.0    &                               !<-- pressure at top of atmosphere
[(4505) BashCMDExecutor]  -                           ,ptsgm=30000. &                           !<-- pressure sigma at toa
[(4505) BashCMDExecutor]  -                           ,dlmd=1.40625 &                              !<-- longitudinal grid resolution
[(4505) BashCMDExecutor]  -                           ,dphd=1.0                                !<-- latitudinal grid resolution
[(4505) BashCMDExecutor]  -  !
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  !***  model grid domain coordinates
[(4506) BashCMDExecutor]  -  !***  IMI,JMI,LM MUST AGREE WITH IM,JM,LM IN CONFIGFILE_GLOBAL
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  !
[(4506) BashCMDExecutor]  -  integer(kind=4),parameter :: imi=257 &                             !<-- longitudinal mesh size
[(4506) BashCMDExecutor]  -                              ,jmi=181 &                             !<-- latitudinal mesh size
[(4506) BashCMDExecutor]  -                              ,im=259,jm=183 &                     !<-- mesh size with boundaries
[(4506) BashCMDExecutor]  -                              ,lm=24 &                              !<-- horizontal model layers
[(4506) BashCMDExecutor]  -  !
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  !***  additional grid parameters
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  !
[(4506) BashCMDExecutor]  -                              ,lnsh=1 &
[(4506) BashCMDExecutor]  -                              ,lnsv=lnsh &
[(4506) BashCMDExecutor]  -                              ,kms=4 &
[(4506) BashCMDExecutor]  -                              ,ksnos=1 &
[(4506) BashCMDExecutor]  -                              ,nosnos=kms-ksnos &
[(4506) BashCMDExecutor]  -                              ,nwets=4
[(4506) BashCMDExecutor]  -  !
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  !***  modelgrid.inc - END
[(4506) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4506) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4506) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(4507) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(4507) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/TLMD/0.0/ -e s/TPHD/0.0/ -e s/WBDN/-180.0/ -e s/SBDN/-90.0/ -e s/DLMN/1.40625/ -e s/DPHN/1.0/ -e s/III/257/ -e s/JJJ/181/ -e s/IBDY/259/ -e s/JBDY/183/ -e s/PTOP/100.0/ -e s/KKK/24/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/lmimjm_rrtm.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/include/lmimjm.inc
[(4508) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(4514) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4514) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(4514) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4514) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(4515) BashCMDExecutor]  -  !
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !***  lmimjm.inc - START
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !***  model grid domain boundaries 
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !
[(4515) BashCMDExecutor]  -        parameter
[(4515) BashCMDExecutor]  -       &(tlm0d=0.0,tph0d=0.0
[(4515) BashCMDExecutor]  -       &,wbd=-180.0,sbd=-90.0
[(4515) BashCMDExecutor]  -       &,pt=100.0,ptsgm=30000.
[(4515) BashCMDExecutor]  -       &,dlmd=1.40625,dphd=1.0)
[(4515) BashCMDExecutor]  -  !
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !***  model grid domain coordinates
[(4515) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4515) BashCMDExecutor]  -  !
[(4515) BashCMDExecutor]  -        parameter
[(4516) BashCMDExecutor]  -       &(imi=257,jmi=181
[(4516) BashCMDExecutor]  -       &,im=259,jm=183,lm=24)
[(4516) BashCMDExecutor]  -  !
[(4516) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4516) BashCMDExecutor]  -  !***  additional grid parameters
[(4516) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4516) BashCMDExecutor]  -  !
[(4516) BashCMDExecutor]  -        parameter
[(4516) BashCMDExecutor]  -       &(lnsh=1,lnsv=lnsh
[(4516) BashCMDExecutor]  -       &,kms=4,ksnos=1,nosnos=kms-ksnos,nwets=4)
[(4516) BashCMDExecutor]  -  !
[(4516) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4516) BashCMDExecutor]  -  !***  lmimjm.inc - END
[(4516) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(4516) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(4516) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(4516) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(4517)  Fixed]  -  
[(4517)  Fixed]  -  --- Building fixed executables -----------------------------
[(4517)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4517)    API]  -  There are 15 parameters
[(4518)    API]  -    Parameter 1 has type STRING_T
[(4518)    API]  -    Parameter 2 has type STRING_T
[(4518)    API]  -    Parameter 3 has type STRING_T
[(4518)    API]  -    Parameter 4 has type STRING_T
[(4518)    API]  -    Parameter 5 has type STRING_T
[(4519)    API]  -    Parameter 6 has type STRING_T
[(4519)    API]  -    Parameter 7 has type STRING_T
[(4519)    API]  -    Parameter 8 has type STRING_T
[(4519)    API]  -    Parameter 9 has type STRING_T
[(4519)    API]  -    Parameter 10 has type STRING_T
[(4519)    API]  -    Parameter 11 has type STRING_T
[(4519)    API]  -    Parameter 12 has type STRING_T
[(4519)    API]  -    Parameter 13 has type STRING_T
[(4519)    API]  -    Parameter 14 has type FILE_T
[(4523)    API]  -    Parameter 15 has type OBJECT_T
[(4525)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4526)    API]  -  There are 15 parameters
[(4526)    API]  -    Parameter 1 has type STRING_T
[(4526)    API]  -    Parameter 2 has type STRING_T
[(4526)    API]  -    Parameter 3 has type STRING_T
[(4526)    API]  -    Parameter 4 has type STRING_T
[(4526)    API]  -    Parameter 5 has type STRING_T
[(4526)    API]  -    Parameter 6 has type STRING_T
[(4526)    API]  -    Parameter 7 has type STRING_T
[(4526)    API]  -    Parameter 8 has type STRING_T
[(4526)    API]  -    Parameter 9 has type STRING_T
[(4526)    API]  -    Parameter 10 has type STRING_T
[(4526)    API]  -    Parameter 11 has type STRING_T
[(4526)    API]  -    Parameter 12 has type STRING_T
[(4526)    API]  -    Parameter 13 has type STRING_T
[(4527)    API]  -    Parameter 14 has type FILE_T
[(4528)    API]  -    Parameter 15 has type OBJECT_T
[(4529)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4529)    API]  -  There are 15 parameters
[(4529)    API]  -    Parameter 1 has type STRING_T
[(4529)    API]  -    Parameter 2 has type STRING_T
[(4529)    API]  -    Parameter 3 has type STRING_T
[(4529)    API]  -    Parameter 4 has type STRING_T
[(4529)    API]  -    Parameter 5 has type STRING_T
[(4529)    API]  -    Parameter 6 has type STRING_T
[(4529)    API]  -    Parameter 7 has type STRING_T
[(4529)    API]  -    Parameter 8 has type STRING_T
[(4529)    API]  -    Parameter 9 has type STRING_T
[(4529)    API]  -    Parameter 10 has type STRING_T
[(4530)    API]  -    Parameter 11 has type STRING_T
[(4530)    API]  -    Parameter 12 has type STRING_T
[(4530)    API]  -    Parameter 13 has type STRING_T
[(4530)    API]  -    Parameter 14 has type FILE_T
[(4531)    API]  -    Parameter 15 has type OBJECT_T
[(4532)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4532)    API]  -  There are 15 parameters
[(4532)    API]  -    Parameter 1 has type STRING_T
[(4532)    API]  -    Parameter 2 has type STRING_T
[(4532)    API]  -    Parameter 3 has type STRING_T
[(4532)    API]  -    Parameter 4 has type STRING_T
[(4532)    API]  -    Parameter 5 has type STRING_T
[(4532)    API]  -    Parameter 6 has type STRING_T
[(4532)    API]  -    Parameter 7 has type STRING_T
[(4532)    API]  -    Parameter 8 has type STRING_T
[(4532)    API]  -    Parameter 9 has type STRING_T
[(4532)    API]  -    Parameter 10 has type STRING_T
[(4532)    API]  -    Parameter 11 has type STRING_T
[(4532)    API]  -    Parameter 12 has type STRING_T
[(4533)    API]  -    Parameter 13 has type STRING_T
[(4533)    API]  -    Parameter 14 has type FILE_T
[(4534)    API]  -    Parameter 15 has type OBJECT_T
[(4535)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4535)    API]  -  There are 15 parameters
[(4535)    API]  -    Parameter 1 has type STRING_T
[(4535)    API]  -    Parameter 2 has type STRING_T
[(4535)    API]  -    Parameter 3 has type STRING_T
[(4535)    API]  -    Parameter 4 has type STRING_T
[(4535)    API]  -    Parameter 5 has type STRING_T
[(4535)    API]  -    Parameter 6 has type STRING_T
[(4535)    API]  -    Parameter 7 has type STRING_T
[(4535)    API]  -    Parameter 8 has type STRING_T
[(4535)    API]  -    Parameter 9 has type STRING_T
[(4536)    API]  -    Parameter 10 has type STRING_T
[(4536)    API]  -    Parameter 11 has type STRING_T
[(4536)    API]  -    Parameter 12 has type STRING_T
[(4536)    API]  -    Parameter 13 has type STRING_T
[(4536)    API]  -    Parameter 14 has type FILE_T
[(4538)    API]  -    Parameter 15 has type OBJECT_T
[(4538)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4538)    API]  -  There are 15 parameters
[(4538)    API]  -    Parameter 1 has type STRING_T
[(4538)    API]  -    Parameter 2 has type STRING_T
[(4538)    API]  -    Parameter 3 has type STRING_T
[(4538)    API]  -    Parameter 4 has type STRING_T
[(4539)    API]  -    Parameter 5 has type STRING_T
[(4539)    API]  -    Parameter 6 has type STRING_T
[(4539)    API]  -    Parameter 7 has type STRING_T
[(4539)    API]  -    Parameter 8 has type STRING_T
[(4539)    API]  -    Parameter 9 has type STRING_T
[(4539)    API]  -    Parameter 10 has type STRING_T
[(4539)    API]  -    Parameter 11 has type STRING_T
[(4539)    API]  -    Parameter 12 has type STRING_T
[(4539)    API]  -    Parameter 13 has type STRING_T
[(4539)    API]  -    Parameter 14 has type FILE_T
[(4541)    API]  -    Parameter 15 has type OBJECT_T
[(4541)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4541)    API]  -  There are 15 parameters
[(4541)    API]  -    Parameter 1 has type STRING_T
[(4541)    API]  -    Parameter 2 has type STRING_T
[(4541)    API]  -    Parameter 3 has type STRING_T
[(4541)    API]  -    Parameter 4 has type STRING_T
[(4541)    API]  -    Parameter 5 has type STRING_T
[(4542)    API]  -    Parameter 6 has type STRING_T
[(4542)    API]  -    Parameter 7 has type STRING_T
[(4542)    API]  -    Parameter 8 has type STRING_T
[(4542)    API]  -    Parameter 9 has type STRING_T
[(4542)    API]  -    Parameter 10 has type STRING_T
[(4542)    API]  -    Parameter 11 has type STRING_T
[(4542)    API]  -    Parameter 12 has type STRING_T
[(4542)    API]  -    Parameter 13 has type STRING_T
[(4542)    API]  -    Parameter 14 has type FILE_T
[(4543)    API]  -    Parameter 15 has type OBJECT_T
[(4544)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4544)    API]  -  There are 15 parameters
[(4544)    API]  -    Parameter 1 has type STRING_T
[(4544)    API]  -    Parameter 2 has type STRING_T
[(4544)    API]  -    Parameter 3 has type STRING_T
[(4544)    API]  -    Parameter 4 has type STRING_T
[(4544)    API]  -    Parameter 5 has type STRING_T
[(4544)    API]  -    Parameter 6 has type STRING_T
[(4544)    API]  -    Parameter 7 has type STRING_T
[(4545)    API]  -    Parameter 8 has type STRING_T
[(4545)    API]  -    Parameter 9 has type STRING_T
[(4545)    API]  -    Parameter 10 has type STRING_T
[(4545)    API]  -    Parameter 11 has type STRING_T
[(4545)    API]  -    Parameter 12 has type STRING_T
[(4545)    API]  -    Parameter 13 has type STRING_T
[(4545)    API]  -    Parameter 14 has type FILE_T
[(4547)    API]  -    Parameter 15 has type OBJECT_T
[(4547)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4547)    API]  -  There are 15 parameters
[(4547)    API]  -    Parameter 1 has type STRING_T
[(4547)    API]  -    Parameter 2 has type STRING_T
[(4547)    API]  -    Parameter 3 has type STRING_T
[(4547)    API]  -    Parameter 4 has type STRING_T
[(4547)    API]  -    Parameter 5 has type STRING_T
[(4547)    API]  -    Parameter 6 has type STRING_T
[(4548)    API]  -    Parameter 7 has type STRING_T
[(4548)    API]  -    Parameter 8 has type STRING_T
[(4548)    API]  -    Parameter 9 has type STRING_T
[(4548)    API]  -    Parameter 10 has type STRING_T
[(4548)    API]  -    Parameter 11 has type STRING_T
[(4548)    API]  -    Parameter 12 has type STRING_T
[(4548)    API]  -    Parameter 13 has type STRING_T
[(4548)    API]  -    Parameter 14 has type FILE_T
[(4550)    API]  -    Parameter 15 has type OBJECT_T
[(4550)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4550)    API]  -  There are 15 parameters
[(4550)    API]  -    Parameter 1 has type STRING_T
[(4550)    API]  -    Parameter 2 has type STRING_T
[(4550)    API]  -    Parameter 3 has type STRING_T
[(4550)    API]  -    Parameter 4 has type STRING_T
[(4550)    API]  -    Parameter 5 has type STRING_T
[(4550)    API]  -    Parameter 6 has type STRING_T
[(4551)    API]  -    Parameter 7 has type STRING_T
[(4551)    API]  -    Parameter 8 has type STRING_T
[(4551)    API]  -    Parameter 9 has type STRING_T
[(4551)    API]  -    Parameter 10 has type STRING_T
[(4551)    API]  -    Parameter 11 has type STRING_T
[(4551)    API]  -    Parameter 12 has type STRING_T
[(4551)    API]  -    Parameter 13 has type STRING_T
[(4551)    API]  -    Parameter 14 has type FILE_T
[(4552)    API]  -    Parameter 15 has type OBJECT_T
[(4553)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4553)    API]  -  There are 15 parameters
[(4553)    API]  -    Parameter 1 has type STRING_T
[(4553)    API]  -    Parameter 2 has type STRING_T
[(4553)    API]  -    Parameter 3 has type STRING_T
[(4553)    API]  -    Parameter 4 has type STRING_T
[(4553)    API]  -    Parameter 5 has type STRING_T
[(4553)    API]  -    Parameter 6 has type STRING_T
[(4553)    API]  -    Parameter 7 has type STRING_T
[(4553)    API]  -    Parameter 8 has type STRING_T
[(4553)    API]  -    Parameter 9 has type STRING_T
[(4553)    API]  -    Parameter 10 has type STRING_T
[(4554)    API]  -    Parameter 11 has type STRING_T
[(4554)    API]  -    Parameter 12 has type STRING_T
[(4554)    API]  -    Parameter 13 has type STRING_T
[(4554)    API]  -    Parameter 14 has type FILE_T
[(4555)    API]  -    Parameter 15 has type OBJECT_T
[(4556)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4556)    API]  -  There are 15 parameters
[(4556)    API]  -    Parameter 1 has type STRING_T
[(4556)    API]  -    Parameter 2 has type STRING_T
[(4556)    API]  -    Parameter 3 has type STRING_T
[(4556)    API]  -    Parameter 4 has type STRING_T
[(4556)    API]  -    Parameter 5 has type STRING_T
[(4556)    API]  -    Parameter 6 has type STRING_T
[(4556)    API]  -    Parameter 7 has type STRING_T
[(4556)    API]  -    Parameter 8 has type STRING_T
[(4556)    API]  -    Parameter 9 has type STRING_T
[(4556)    API]  -    Parameter 10 has type STRING_T
[(4556)    API]  -    Parameter 11 has type STRING_T
[(4556)    API]  -    Parameter 12 has type STRING_T
[(4556)    API]  -    Parameter 13 has type STRING_T
[(4556)    API]  -    Parameter 14 has type FILE_T
[(4558)    API]  -    Parameter 15 has type OBJECT_T
[(4558)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4559)    API]  -  There are 15 parameters
[(4559)    API]  -    Parameter 1 has type STRING_T
[(4560)    API]  -    Parameter 2 has type STRING_T
[(4560)    API]  -    Parameter 3 has type STRING_T
[(4560)    API]  -    Parameter 4 has type STRING_T
[(4560)    API]  -    Parameter 5 has type STRING_T
[(4560)    API]  -    Parameter 6 has type STRING_T
[(4560)    API]  -    Parameter 7 has type STRING_T
[(4560)    API]  -    Parameter 8 has type STRING_T
[(4560)    API]  -    Parameter 9 has type STRING_T
[(4560)    API]  -    Parameter 10 has type STRING_T
[(4560)    API]  -    Parameter 11 has type STRING_T
[(4560)    API]  -    Parameter 12 has type STRING_T
[(4560)    API]  -    Parameter 13 has type STRING_T
[(4560)    API]  -    Parameter 14 has type FILE_T
[(4561)    API]  -    Parameter 15 has type OBJECT_T
[(4562)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4562)    API]  -  There are 15 parameters
[(4562)    API]  -    Parameter 1 has type STRING_T
[(4562)    API]  -    Parameter 2 has type STRING_T
[(4562)    API]  -    Parameter 3 has type STRING_T
[(4562)    API]  -    Parameter 4 has type STRING_T
[(4562)    API]  -    Parameter 5 has type STRING_T
[(4562)    API]  -    Parameter 6 has type STRING_T
[(4562)    API]  -    Parameter 7 has type STRING_T
[(4562)    API]  -    Parameter 8 has type STRING_T
[(4562)    API]  -    Parameter 9 has type STRING_T
[(4562)    API]  -    Parameter 10 has type STRING_T
[(4562)    API]  -    Parameter 11 has type STRING_T
[(4562)    API]  -    Parameter 12 has type STRING_T
[(4562)    API]  -    Parameter 13 has type STRING_T
[(4562)    API]  -    Parameter 14 has type FILE_T
[(4563)    API]  -    Parameter 15 has type OBJECT_T
[(4564)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(4564)    API]  -  There are 15 parameters
[(4564)    API]  -    Parameter 1 has type STRING_T
[(4564)    API]  -    Parameter 2 has type STRING_T
[(4564)    API]  -    Parameter 3 has type STRING_T
[(4564)    API]  -    Parameter 4 has type STRING_T
[(4564)    API]  -    Parameter 5 has type STRING_T
[(4564)    API]  -    Parameter 6 has type STRING_T
[(4564)    API]  -    Parameter 7 has type STRING_T
[(4564)    API]  -    Parameter 8 has type STRING_T
[(4564)    API]  -    Parameter 9 has type STRING_T
[(4564)    API]  -    Parameter 10 has type STRING_T
[(4564)    API]  -    Parameter 11 has type STRING_T
[(4564)    API]  -    Parameter 12 has type STRING_T
[(4564)    API]  -    Parameter 13 has type STRING_T
[(4564)    API]  -    Parameter 14 has type FILE_T
[(4566)    API]  -    Parameter 15 has type OBJECT_T
[(4566)    API]  -  Getting object with hash code -2147483648
[(8585)    API]  -  Object obtained 0
[(8585)  Fixed]  -  Compilation of 0 binary ended with status 0
[(8586)    API]  -  Getting object with hash code -2147483648
[(8586)    API]  -  Getting object with hash code -2147483647
[(10486)    API]  -  Object obtained 0
[(10486)  Fixed]  -  Compilation of 1 binary ended with status 0
[(10486)    API]  -  Getting object with hash code -2147483647
[(10486)    API]  -  Getting object with hash code -2147483646
[(10493)    API]  -  Object obtained 0
[(10493)  Fixed]  -  Compilation of 2 binary ended with status 0
[(10493)    API]  -  Getting object with hash code -2147483646
[(10494)    API]  -  Getting object with hash code -2147483645
[(10501)    API]  -  Object obtained 0
[(10501)  Fixed]  -  Compilation of 3 binary ended with status 0
[(10501)    API]  -  Getting object with hash code -2147483645
[(10501)    API]  -  Getting object with hash code -2147483644
[(10508)    API]  -  Object obtained 0
[(10508)  Fixed]  -  Compilation of 4 binary ended with status 0
[(10508)    API]  -  Getting object with hash code -2147483644
[(10508)    API]  -  Getting object with hash code -2147483643
[(10515)    API]  -  Object obtained 0
[(10515)  Fixed]  -  Compilation of 5 binary ended with status 0
[(10516)    API]  -  Getting object with hash code -2147483643
[(10516)    API]  -  Getting object with hash code -2147483642
[(10522)    API]  -  Object obtained 0
[(10522)  Fixed]  -  Compilation of 6 binary ended with status 0
[(10522)    API]  -  Getting object with hash code -2147483642
[(10522)    API]  -  Getting object with hash code -2147483641
[(10529)    API]  -  Object obtained 0
[(10529)  Fixed]  -  Compilation of 7 binary ended with status 0
[(10530)    API]  -  Getting object with hash code -2147483641
[(10530)    API]  -  Getting object with hash code -2147483640
[(10537)    API]  -  Object obtained 0
[(10537)  Fixed]  -  Compilation of 8 binary ended with status 0
[(10537)    API]  -  Getting object with hash code -2147483640
[(10537)    API]  -  Getting object with hash code -2147483639
[(10543)    API]  -  Object obtained 0
[(10543)  Fixed]  -  Compilation of 9 binary ended with status 0
[(10544)    API]  -  Getting object with hash code -2147483639
[(10544)    API]  -  Getting object with hash code -2147483638
[(10551)    API]  -  Object obtained 0
[(10551)  Fixed]  -  Compilation of 10 binary ended with status 0
[(10551)    API]  -  Getting object with hash code -2147483638
[(10551)    API]  -  Getting object with hash code -2147483637
[(10557)    API]  -  Object obtained 0
[(10558)  Fixed]  -  Compilation of 11 binary ended with status 0
[(10558)    API]  -  Getting object with hash code -2147483637
[(10558)    API]  -  Getting object with hash code -2147483636
[(10564)    API]  -  Object obtained 0
[(10564)  Fixed]  -  Compilation of 12 binary ended with status 0
[(10564)    API]  -  Getting object with hash code -2147483636
[(10565)    API]  -  Getting object with hash code -2147483635
[(10571)    API]  -  Object obtained 0
[(10571)  Fixed]  -  Compilation of 13 binary ended with status 0
[(10571)    API]  -  Getting object with hash code -2147483635
[(10572)    API]  -  Getting object with hash code -2147483634
[(10579)    API]  -  Object obtained 0
[(10579)  Fixed]  -  Compilation of 14 binary ended with status 0
[(10579)    API]  -  Getting object with hash code -2147483634
[(10579)  Fixed]  -  
[(10579)  Fixed]  -  --- Finished building fixed executables --------------------
[(10579)  Fixed]  -  
[(10579)  Fixed]  -  ========= BEGIN ============================================
[(10579)  Fixed]  -  
[(10579)  Fixed]  -  --- Generate DEM height and sea mask files -----------------
[(10579)    API]  -  Creating task from method smmount in binary.BINARY
[(10579)    API]  -  There are 4 parameters
[(10579)    API]  -    Parameter 1 has type STRING_T
[(10579)    API]  -    Parameter 2 has type FILE_T
[(10580)    API]  -    Parameter 3 has type FILE_T
[(10580)    API]  -    Parameter 4 has type OBJECT_T
[(10581)  Fixed]  -  
[(10581)  Fixed]  -  --- Generate landuse file ----------------------------------
[(10581)    API]  -  Creating task from method landuse in binary.BINARY
[(10581)    API]  -  There are 4 parameters
[(10581)    API]  -    Parameter 1 has type STRING_T
[(10581)    API]  -    Parameter 2 has type FILE_T
[(10582)    API]  -    Parameter 3 has type FILE_T
[(10582)    API]  -    Parameter 4 has type OBJECT_T
[(10582)  Fixed]  -  
[(10582)  Fixed]  -  --- Generate landusenew file -------------------------------
[(10583)    API]  -  Creating task from method landusenew in binary.BINARY
[(10583)    API]  -  There are 4 parameters
[(10583)    API]  -    Parameter 1 has type STRING_T
[(10583)    API]  -    Parameter 2 has type FILE_T
[(10583)    API]  -    Parameter 3 has type FILE_T
[(10584)    API]  -    Parameter 4 has type OBJECT_T
[(10584)  Fixed]  -  
[(10584)  Fixed]  -  --- Generate mountains -------------------------------------
[(10584)    API]  -  Creating task from method topo in binary.BINARY
[(10584)    API]  -  There are 3 parameters
[(10584)    API]  -    Parameter 1 has type STRING_T
[(10584)    API]  -    Parameter 2 has type FILE_T
[(10584)    API]  -    Parameter 3 has type OBJECT_T
[(10584)  Fixed]  -  
[(10584)  Fixed]  -  --- Generate standard deviation of topography height -------
[(10585)    API]  -  Creating task from method stdh in binary.BINARY
[(10585)    API]  -  There are 5 parameters
[(10585)    API]  -    Parameter 1 has type FILE_T
[(10585)    API]  -    Parameter 2 has type FILE_T
[(10585)    API]  -    Parameter 3 has type STRING_T
[(10585)    API]  -    Parameter 4 has type FILE_T
[(10585)    API]  -    Parameter 5 has type OBJECT_T
[(10585)  Fixed]  -  
[(10585)  Fixed]  -  --- Generate envelope mountains ----------------------------
[(10585)    API]  -  Creating task from method envelope in binary.BINARY
[(10586)    API]  -  There are 4 parameters
[(10586)    API]  -    Parameter 1 has type FILE_T
[(10586)    API]  -    Parameter 2 has type FILE_T
[(10586)    API]  -    Parameter 3 has type FILE_T
[(10586)    API]  -    Parameter 4 has type OBJECT_T
[(10586)  Fixed]  -  
[(10586)  Fixed]  -  --- Generate top soil type file ----------------------------
[(10586)    API]  -  Creating task from method topsoiltype in binary.BINARY
[(10586)    API]  -  There are 4 parameters
[(10587)    API]  -    Parameter 1 has type FILE_T
[(10587)    API]  -    Parameter 2 has type STRING_T
[(10587)    API]  -    Parameter 3 has type FILE_T
[(10587)    API]  -    Parameter 4 has type OBJECT_T
[(10587)  Fixed]  -  
[(10587)  Fixed]  -  --- Generate bottom soil type file -------------------------
[(10588)    API]  -  Creating task from method botsoiltype in binary.BINARY
[(10588)    API]  -  There are 4 parameters
[(10588)    API]  -    Parameter 1 has type FILE_T
[(10588)    API]  -    Parameter 2 has type STRING_T
[(10588)    API]  -    Parameter 3 has type FILE_T
[(10588)    API]  -    Parameter 4 has type OBJECT_T
[(10588)  Fixed]  -  
[(10588)  Fixed]  -  --- Generate sea mask and reprocess mountains --------------
[(10588)    API]  -  Creating task from method toposeamask in binary.BINARY
[(10588)    API]  -  There are 7 parameters
[(10588)    API]  -    Parameter 1 has type FILE_T
[(10589)    API]  -    Parameter 2 has type FILE_T
[(10589)    API]  -    Parameter 3 has type FILE_T
[(10589)    API]  -    Parameter 4 has type FILE_T
[(10589)    API]  -    Parameter 5 has type FILE_T
[(10590)    API]  -    Parameter 6 has type FILE_T
[(10590)    API]  -    Parameter 7 has type OBJECT_T
[(10590)  Fixed]  -  
[(10590)  Fixed]  -  --- Reprocess standard deviation of topography height ------
[(10590)    API]  -  Creating task from method stdhtopo in binary.BINARY
[(10590)    API]  -  There are 3 parameters
[(10590)    API]  -    Parameter 1 has type FILE_T
[(10590)    API]  -    Parameter 2 has type FILE_T
[(10590)    API]  -    Parameter 3 has type OBJECT_T
[(10590)  Fixed]  -  
[(10590)  Fixed]  -  --- Generate deep soil temperature -------------------------
[(10590)    API]  -  Creating task from method deeptemperature in binary.BINARY
[(10590)    API]  -  There are 4 parameters
[(10590)    API]  -    Parameter 1 has type FILE_T
[(10591)    API]  -    Parameter 2 has type STRING_T
[(10591)    API]  -    Parameter 3 has type FILE_T
[(10591)    API]  -    Parameter 4 has type OBJECT_T
[(10591)  Fixed]  -  
[(10591)  Fixed]  -  --- Generate maximum snow albedo ---------------------------
[(10591)    API]  -  Creating task from method snowalbedo in binary.BINARY
[(10591)    API]  -  There are 3 parameters
[(10591)    API]  -    Parameter 1 has type STRING_T
[(10591)    API]  -    Parameter 2 has type FILE_T
[(10592)    API]  -    Parameter 3 has type OBJECT_T
[(10592)  Fixed]  -  
[(10592)  Fixed]  -  --- Generate vertical coordinate ---------------------------
[(10592)    API]  -  Creating task from method vcgenerator in binary.BINARY
[(10592)    API]  -  There are 2 parameters
[(10592)    API]  -    Parameter 1 has type FILE_T
[(10592)    API]  -    Parameter 2 has type OBJECT_T
[(10593)  Fixed]  -  
[(10593)  Fixed]  -  --- Generate highres roughness length for africa and asia --
[(10593)    API]  -  Creating task from method roughness in binary.BINARY
[(10593)    API]  -  There are 3 parameters
[(10593)    API]  -    Parameter 1 has type STRING_T
[(10593)    API]  -    Parameter 2 has type FILE_T
[(10593)    API]  -    Parameter 3 has type OBJECT_T
[(10593)  Fixed]  -  
[(10594)  Fixed]  -  --- Generate co2 files -------------------------------------
[(10594)    API]  -  Creating task from method gfdlco2 in binary.BINARY
[(10594)    API]  -  There are 4 parameters
[(10594)    API]  -    Parameter 1 has type FILE_T
[(10594)    API]  -    Parameter 2 has type STRING_T
[(10594)    API]  -    Parameter 3 has type FILE_T
[(10595)    API]  -    Parameter 4 has type OBJECT_T
[(10595)  Fixed]  -  
[(10595)  Fixed]  -  --- Generate lookup tables for aerosol scavenging collection efficiencies 
[(10595)    API]  -  Creating task from method run_aerosol in binary.BINARY
[(10595)    API]  -  There are 8 parameters
[(10595)    API]  -    Parameter 1 has type FILE_T
[(10596)    API]  -    Parameter 2 has type FILE_T
[(10596)    API]  -    Parameter 3 has type FILE_T
[(10597)    API]  -    Parameter 4 has type FILE_T
[(10597)    API]  -    Parameter 5 has type FILE_T
[(10598)    API]  -    Parameter 6 has type FILE_T
[(10598)    API]  -    Parameter 7 has type FILE_T
[(10599)    API]  -    Parameter 8 has type OBJECT_T
[(10599)    API]  -  Getting object with hash code -2147483633
[(48368)    API]  -  Object obtained 0
[(48369)  Fixed]  -  Execution of 0 binary ended with status 0
[(48369)    API]  -  Getting object with hash code -2147483633
[(48370)    API]  -  Getting object with hash code -2147483632
[(48380)    API]  -  Object obtained 0
[(48380)  Fixed]  -  Execution of 1 binary ended with status 0
[(48380)    API]  -  Getting object with hash code -2147483632
[(48381)    API]  -  Getting object with hash code -2147483631
[(69937)    API]  -  Object obtained 0
[(69937)  Fixed]  -  Execution of 2 binary ended with status 0
[(69937)    API]  -  Getting object with hash code -2147483631
[(69937)    API]  -  Getting object with hash code -2147483630
[(69943)    API]  -  Object obtained 0
[(69943)  Fixed]  -  Execution of 3 binary ended with status 0
[(69943)    API]  -  Getting object with hash code -2147483630
[(69944)    API]  -  Getting object with hash code -2147483629
[(79475)    API]  -  Object obtained 0
[(79475)  Fixed]  -  Execution of 4 binary ended with status 0
[(79475)    API]  -  Getting object with hash code -2147483629
[(79476)    API]  -  Getting object with hash code -2147483628
[(79507)    API]  -  Object obtained 0
[(79507)  Fixed]  -  Execution of 5 binary ended with status 0
[(79507)    API]  -  Getting object with hash code -2147483628
[(79508)    API]  -  Getting object with hash code -2147483627
[(79521)    API]  -  Object obtained 0
[(79521)  Fixed]  -  Execution of 6 binary ended with status 0
[(79521)    API]  -  Getting object with hash code -2147483627
[(79522)    API]  -  Getting object with hash code -2147483626
[(79527)    API]  -  Object obtained 0
[(79527)  Fixed]  -  Execution of 7 binary ended with status 0
[(79527)    API]  -  Getting object with hash code -2147483626
[(79528)    API]  -  Getting object with hash code -2147483625
[(79576)    API]  -  Object obtained 0
[(79576)  Fixed]  -  Execution of 8 binary ended with status 0
[(79576)    API]  -  Getting object with hash code -2147483625
[(79577)    API]  -  Getting object with hash code -2147483624
[(79598)    API]  -  Object obtained 0
[(79598)  Fixed]  -  Execution of 9 binary ended with status 0
[(79598)    API]  -  Getting object with hash code -2147483624
[(79599)    API]  -  Getting object with hash code -2147483623
[(79609)    API]  -  Object obtained 0
[(79609)  Fixed]  -  Execution of 10 binary ended with status 0
[(79610)    API]  -  Getting object with hash code -2147483623
[(79610)    API]  -  Getting object with hash code -2147483622
[(79615)    API]  -  Object obtained 0
[(79615)  Fixed]  -  Execution of 11 binary ended with status 0
[(79615)    API]  -  Getting object with hash code -2147483622
[(79616)    API]  -  Getting object with hash code -2147483621
[(79621)    API]  -  Object obtained 0
[(79621)  Fixed]  -  Execution of 12 binary ended with status 0
[(79621)    API]  -  Getting object with hash code -2147483621
[(79621)    API]  -  Getting object with hash code -2147483620
[(79626)    API]  -  Object obtained 0
[(79626)  Fixed]  -  Execution of 13 binary ended with status 0
[(79626)    API]  -  Getting object with hash code -2147483620
[(79626)    API]  -  Getting object with hash code -2147483619
[(79632)    API]  -  Object obtained 0
[(79632)  Fixed]  -  Execution of 14 binary ended with status 0
[(79632)    API]  -  Getting object with hash code -2147483619
[(79632)    API]  -  Getting object with hash code -2147483618
[(79637)    API]  -  Object obtained 0
[(79637)  Fixed]  -  Execution of 15 binary ended with status 0
[(79637)    API]  -  Getting object with hash code -2147483618
[(79638)  Fixed]  -  
[(79638)  Fixed]  -  --- Clean up executables -----------------------------------
[(79643)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/botsoiltype.x
[(79643)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/botsoiltype.x
[(79646)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/deeptemperature.x
[(79646)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/deeptemperature.x
[(79648)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/envelope.x
[(79648)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/envelope.x
[(79650)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/landuse.x
[(79650)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/landuse.x
[(79652)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/landusenew.x
[(79652)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/landusenew.x
[(79653)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/smmount.x
[(79653)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/smmount.x
[(79655)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/roughness.x
[(79655)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/roughness.x
[(79657)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/stdh.x
[(79657)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/stdh.x
[(79658)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/stdhtopo.x
[(79658)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/stdhtopo.x
[(79660)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/snowalbedo.x
[(79660)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/snowalbedo.x
[(79662)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/topo.x
[(79662)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/topo.x
[(79664)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/toposeamask.x
[(79664)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/toposeamask.x
[(79666)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/topsoiltype.x
[(79666)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/topsoiltype.x
[(79667)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/vcgenerator.x
[(79667)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/vcgenerator.x
[(79669)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/gfdlco2.x
[(79669)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/FIXED/gfdlco2.x
[(79669)  Fixed]  -  
[(79669)  Fixed]  -  ========= END ==============================================
[(79669)  Fixed]  -  Fixed process finished
[(79671)   Main]  -  20140901 simulation started
[(79671)   Main]  -  Cannot create folder output case : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/ because it already exists. Skipping
[(79674)   Main]  -  Cannot create folder output : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/2014090100/ because it already exists. Skipping
[(79674) Variable]  -  Enter variable process
[(79674) Variable]  -  Cannot erase previous sst2dvar_grb_0.5 because it doesn't exist.
[(79674) Variable]  -  Cannot erase previous fcst because it doesn't exist.
[(79674) Variable]  -  Cannot erase previous llstmp because it doesn't exist.
[(79674) Variable]  -  Cannot erase previous llsmst because it doesn't exist.
[(79674) Variable]  -  Cannot erase previous llgsno because it doesn't exist.
[(79674) Variable]  -  Cannot erase previous llgcic because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous llgsst because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous llspl.000 because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous llgsst05 because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous albedo because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous albase because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous vegfrac because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous z0base because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous z0 because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous ustar because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous sst05 because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous dzsoil because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous tskin because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous sst because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous snow because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous snowheight because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous cice because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous seamaskcorr because it doesn't exist.
[(79675) Variable]  -  Cannot erase previous landusecorr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous landusenewcorr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous topsoiltypecorr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous vegfraccorr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous z0corr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous z0basecorr because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous emissivity because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous canopywater because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous frozenprecratio because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous smst because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous sh2o because it doesn't exist.
[(79676) Variable]  -  Cannot erase previous stmp because it doesn't exist.
[(79679) Variable]  -  Cannot erase previous sstgrb because it doesn't exist.
[(79681) Variable]  -  Cannot erase previous llgrid.inc because it doesn't exist.
[(79681) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/LLL/24/ -e s/HH/00/ -e s/UPBD/6/ -e s/YYYYMMDD/140901/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/llgrid_rrtm_FNL.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/llgrid.inc
[(79689) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(79697) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  llgrid.inc - for wrf/gfs input grid - START
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  input grid boundaries
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -        parameter
[(79698) BashCMDExecutor]  -       &(bowest=0.,bosout=-90.,boeast=359.,bonort=90.                      !<-- gdas.ONEDEG / gfs.ONEDEG.inputdata
[(79698) BashCMDExecutor]  -       &,delon=1.,delat=1.)                                                !<-- gdas.ONEDEG / gfs.ONEDEG.inputdata
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  input grid coordinates
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -        parameter
[(79698) BashCMDExecutor]  -       &(imll=(boeast-bowest)/delon+1,jmll=(bonort-bosout)/delat+1         !<-- gdas.ONEDEG / gfs.ONEDEG / wafs.0P5DEG.inputdata
[(79698) BashCMDExecutor]  -       &,lmll=26)	                                                         !<-- gdas.ONEDEG / gfs.ONEDEG / wafs.0P5DEG.inputdata
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  REGIONAL - update boundary
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -        parameter
[(79698) BashCMDExecutor]  -       &(tboco=6                                                        !<-- update every 3 hours
[(79698) BashCMDExecutor]  -       &,nhours=24)                                                       !<-- length of forecast
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  input grid dimension
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -        parameter
[(79698) BashCMDExecutor]  -       &(nx=360,ny=181,nz=26,nsfc=12,ns=21)                                !<-- gdas.ONEDEG / gfs.ONEDEG.inputdata
[(79698) BashCMDExecutor]  -  !
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  !***  llgrid.inc - END
[(79698) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79698) BashCMDExecutor]  -  
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(79698) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(79698) Variable]  -  Cannot erase previous link /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/gfs.t00z.pgrbf00 because it doesn't exist.
[(79699) Variable]  -  Softlink from : /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/gfs.t00z.pgrbf00 to /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/DATA/INITIAL/fnl_20140901_00_00
[(79699) Variable]  -  Delete previous: /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/modelgrid.inc
[(79699) Variable]  -  Cannot erase previous modelgrid because it doesn't exist.
[(79699) Variable]  -  Delete previous: /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/lmimjm.inc
[(79699) Variable]  -  Cannot erase previous lmimjm because it doesn't exist.
[(79699) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/TLMD/0.0/ -e s/TPHD/0.0/ -e s/WBDN/-180.0/ -e s/SBDN/-90.0/ -e s/DLMN/1.40625/ -e s/DPHN/1.0/ -e s/III/257/ -e s/JJJ/181/ -e s/IBDY/259/ -e s/JBDY/183/ -e s/PTOP/100.0/ -e s/KKK/24/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/modelgrid_rrtm.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/modelgrid.inc
[(79700) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(79706) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79706) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(79706) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79706) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !***  modelgrid.inc -  START
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !***  model grid domain boundaries
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  real(kind=4),parameter :: tlm0d=0.0 &                             !<-- center point longitudinal (E/W)
[(79706) BashCMDExecutor]  -                           ,tph0d=0.0 &                             !<-- center point latitudinal (S/N)
[(79706) BashCMDExecutor]  -                           ,wbd=-180.0 &                               !<-- western boundary (from center point)
[(79706) BashCMDExecutor]  -                           ,sbd=-90.0 &                               !<-- southern boundary (from center point)
[(79706) BashCMDExecutor]  -                           ,pt=100.0    &                               !<-- pressure at top of atmosphere
[(79706) BashCMDExecutor]  -                           ,ptsgm=30000. &                           !<-- pressure sigma at toa
[(79706) BashCMDExecutor]  -                           ,dlmd=1.40625 &                              !<-- longitudinal grid resolution
[(79706) BashCMDExecutor]  -                           ,dphd=1.0                                !<-- latitudinal grid resolution
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !***  model grid domain coordinates
[(79706) BashCMDExecutor]  -  !***  IMI,JMI,LM MUST AGREE WITH IM,JM,LM IN CONFIGFILE_GLOBAL
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  integer(kind=4),parameter :: imi=257 &                             !<-- longitudinal mesh size
[(79706) BashCMDExecutor]  -                              ,jmi=181 &                             !<-- latitudinal mesh size
[(79706) BashCMDExecutor]  -                              ,im=259,jm=183 &                     !<-- mesh size with boundaries
[(79706) BashCMDExecutor]  -                              ,lm=24 &                              !<-- horizontal model layers
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !***  additional grid parameters
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -                              ,lnsh=1 &
[(79706) BashCMDExecutor]  -                              ,lnsv=lnsh &
[(79706) BashCMDExecutor]  -                              ,kms=4 &
[(79706) BashCMDExecutor]  -                              ,ksnos=1 &
[(79706) BashCMDExecutor]  -                              ,nosnos=kms-ksnos &
[(79706) BashCMDExecutor]  -                              ,nwets=4
[(79706) BashCMDExecutor]  -  !
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  !***  modelgrid.inc - END
[(79706) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79706) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79707) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(79707) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(79707) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/TLMD/0.0/ -e s/TPHD/0.0/ -e s/WBDN/-180.0/ -e s/SBDN/-90.0/ -e s/DLMN/1.40625/ -e s/DPHN/1.0/ -e s/III/257/ -e s/JJJ/181/ -e s/IBDY/259/ -e s/JBDY/183/ -e s/PTOP/100.0/ -e s/KKK/24/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/lmimjm_rrtm.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/include/lmimjm.inc
[(79708) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(79713) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79713) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(79713) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79713) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !***  lmimjm.inc - START
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !***  model grid domain boundaries 
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -        parameter
[(79713) BashCMDExecutor]  -       &(tlm0d=0.0,tph0d=0.0
[(79713) BashCMDExecutor]  -       &,wbd=-180.0,sbd=-90.0
[(79713) BashCMDExecutor]  -       &,pt=100.0,ptsgm=30000.
[(79713) BashCMDExecutor]  -       &,dlmd=1.40625,dphd=1.0)
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !***  model grid domain coordinates
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -        parameter
[(79713) BashCMDExecutor]  -       &(imi=257,jmi=181
[(79713) BashCMDExecutor]  -       &,im=259,jm=183,lm=24)
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !***  additional grid parameters
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -        parameter
[(79713) BashCMDExecutor]  -       &(lnsh=1,lnsv=lnsh
[(79713) BashCMDExecutor]  -       &,kms=4,ksnos=1,nosnos=kms-ksnos,nwets=4)
[(79713) BashCMDExecutor]  -  !
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79713) BashCMDExecutor]  -  !***  lmimjm.inc - END
[(79713) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(79714) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(79714) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(79714) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(79714) Variable]  -  
[(79714) Variable]  -  --- Building variable executables --------------------------
[(79714)    API]  -  Creating task from method fortranCompileObject in binary.BINARY
[(79714)    API]  -  There are 18 parameters
[(79714)    API]  -    Parameter 1 has type STRING_T
[(79714)    API]  -    Parameter 2 has type STRING_T
[(79714)    API]  -    Parameter 3 has type STRING_T
[(79714)    API]  -    Parameter 4 has type STRING_T
[(79714)    API]  -    Parameter 5 has type STRING_T
[(79714)    API]  -    Parameter 6 has type STRING_T
[(79714)    API]  -    Parameter 7 has type STRING_T
[(79714)    API]  -    Parameter 8 has type STRING_T
[(79714)    API]  -    Parameter 9 has type STRING_T
[(79714)    API]  -    Parameter 10 has type STRING_T
[(79714)    API]  -    Parameter 11 has type STRING_T
[(79714)    API]  -    Parameter 12 has type STRING_T
[(79714)    API]  -    Parameter 13 has type STRING_T
[(79714)    API]  -    Parameter 14 has type STRING_T
[(79714)    API]  -    Parameter 15 has type FILE_T
[(79714)    API]  -    Parameter 16 has type STRING_T
[(79714)    API]  -    Parameter 17 has type STRING_T
[(79714)    API]  -    Parameter 18 has type OBJECT_T
[(79714)    API]  -  Getting object with hash code -2147483617
[(81320)    API]  -  Object obtained 0
[(81320) Variable]  -  Compilation of 0 dependant binary ended with status 0
[(81320)    API]  -  Getting object with hash code -2147483617
[(81320)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81320)    API]  -  There are 15 parameters
[(81320)    API]  -    Parameter 1 has type STRING_T
[(81320)    API]  -    Parameter 2 has type STRING_T
[(81320)    API]  -    Parameter 3 has type STRING_T
[(81320)    API]  -    Parameter 4 has type STRING_T
[(81321)    API]  -    Parameter 5 has type STRING_T
[(81321)    API]  -    Parameter 6 has type STRING_T
[(81321)    API]  -    Parameter 7 has type STRING_T
[(81321)    API]  -    Parameter 8 has type STRING_T
[(81321)    API]  -    Parameter 9 has type STRING_T
[(81321)    API]  -    Parameter 10 has type STRING_T
[(81321)    API]  -    Parameter 11 has type STRING_T
[(81321)    API]  -    Parameter 12 has type STRING_T
[(81321)    API]  -    Parameter 13 has type STRING_T
[(81321)    API]  -    Parameter 14 has type FILE_T
[(81326)    API]  -    Parameter 15 has type OBJECT_T
[(81326)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81326)    API]  -  There are 15 parameters
[(81326)    API]  -    Parameter 1 has type STRING_T
[(81326)    API]  -    Parameter 2 has type STRING_T
[(81326)    API]  -    Parameter 3 has type STRING_T
[(81326)    API]  -    Parameter 4 has type STRING_T
[(81326)    API]  -    Parameter 5 has type STRING_T
[(81326)    API]  -    Parameter 6 has type STRING_T
[(81326)    API]  -    Parameter 7 has type STRING_T
[(81326)    API]  -    Parameter 8 has type STRING_T
[(81326)    API]  -    Parameter 9 has type STRING_T
[(81326)    API]  -    Parameter 10 has type STRING_T
[(81326)    API]  -    Parameter 11 has type STRING_T
[(81326)    API]  -    Parameter 12 has type STRING_T
[(81326)    API]  -    Parameter 13 has type STRING_T
[(81326)    API]  -    Parameter 14 has type FILE_T
[(81328)    API]  -    Parameter 15 has type OBJECT_T
[(81328)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81328)    API]  -  There are 15 parameters
[(81328)    API]  -    Parameter 1 has type STRING_T
[(81328)    API]  -    Parameter 2 has type STRING_T
[(81328)    API]  -    Parameter 3 has type STRING_T
[(81328)    API]  -    Parameter 4 has type STRING_T
[(81328)    API]  -    Parameter 5 has type STRING_T
[(81328)    API]  -    Parameter 6 has type STRING_T
[(81328)    API]  -    Parameter 7 has type STRING_T
[(81328)    API]  -    Parameter 8 has type STRING_T
[(81328)    API]  -    Parameter 9 has type STRING_T
[(81328)    API]  -    Parameter 10 has type STRING_T
[(81328)    API]  -    Parameter 11 has type STRING_T
[(81328)    API]  -    Parameter 12 has type STRING_T
[(81328)    API]  -    Parameter 13 has type STRING_T
[(81328)    API]  -    Parameter 14 has type FILE_T
[(81329)    API]  -    Parameter 15 has type OBJECT_T
[(81329)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81329)    API]  -  There are 15 parameters
[(81329)    API]  -    Parameter 1 has type STRING_T
[(81329)    API]  -    Parameter 2 has type STRING_T
[(81329)    API]  -    Parameter 3 has type STRING_T
[(81329)    API]  -    Parameter 4 has type STRING_T
[(81329)    API]  -    Parameter 5 has type STRING_T
[(81329)    API]  -    Parameter 6 has type STRING_T
[(81329)    API]  -    Parameter 7 has type STRING_T
[(81329)    API]  -    Parameter 8 has type STRING_T
[(81329)    API]  -    Parameter 9 has type STRING_T
[(81329)    API]  -    Parameter 10 has type STRING_T
[(81329)    API]  -    Parameter 11 has type STRING_T
[(81329)    API]  -    Parameter 12 has type STRING_T
[(81329)    API]  -    Parameter 13 has type STRING_T
[(81329)    API]  -    Parameter 14 has type FILE_T
[(81331)    API]  -    Parameter 15 has type OBJECT_T
[(81331)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81331)    API]  -  There are 15 parameters
[(81331)    API]  -    Parameter 1 has type STRING_T
[(81331)    API]  -    Parameter 2 has type STRING_T
[(81331)    API]  -    Parameter 3 has type STRING_T
[(81331)    API]  -    Parameter 4 has type STRING_T
[(81331)    API]  -    Parameter 5 has type STRING_T
[(81331)    API]  -    Parameter 6 has type STRING_T
[(81331)    API]  -    Parameter 7 has type STRING_T
[(81331)    API]  -    Parameter 8 has type STRING_T
[(81331)    API]  -    Parameter 9 has type STRING_T
[(81331)    API]  -    Parameter 10 has type STRING_T
[(81331)    API]  -    Parameter 11 has type STRING_T
[(81331)    API]  -    Parameter 12 has type STRING_T
[(81331)    API]  -    Parameter 13 has type STRING_T
[(81331)    API]  -    Parameter 14 has type FILE_T
[(81332)    API]  -    Parameter 15 has type OBJECT_T
[(81333)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81333)    API]  -  There are 15 parameters
[(81333)    API]  -    Parameter 1 has type STRING_T
[(81333)    API]  -    Parameter 2 has type STRING_T
[(81333)    API]  -    Parameter 3 has type STRING_T
[(81333)    API]  -    Parameter 4 has type STRING_T
[(81333)    API]  -    Parameter 5 has type STRING_T
[(81333)    API]  -    Parameter 6 has type STRING_T
[(81333)    API]  -    Parameter 7 has type STRING_T
[(81333)    API]  -    Parameter 8 has type STRING_T
[(81333)    API]  -    Parameter 9 has type STRING_T
[(81333)    API]  -    Parameter 10 has type STRING_T
[(81333)    API]  -    Parameter 11 has type STRING_T
[(81333)    API]  -    Parameter 12 has type STRING_T
[(81333)    API]  -    Parameter 13 has type STRING_T
[(81333)    API]  -    Parameter 14 has type FILE_T
[(81334)    API]  -    Parameter 15 has type OBJECT_T
[(81334)    API]  -  Creating task from method fortranCompiler in binary.BINARY
[(81334)    API]  -  There are 15 parameters
[(81334)    API]  -    Parameter 1 has type STRING_T
[(81334)    API]  -    Parameter 2 has type STRING_T
[(81334)    API]  -    Parameter 3 has type STRING_T
[(81334)    API]  -    Parameter 4 has type STRING_T
[(81334)    API]  -    Parameter 5 has type STRING_T
[(81334)    API]  -    Parameter 6 has type STRING_T
[(81334)    API]  -    Parameter 7 has type STRING_T
[(81334)    API]  -    Parameter 8 has type STRING_T
[(81334)    API]  -    Parameter 9 has type STRING_T
[(81334)    API]  -    Parameter 10 has type STRING_T
[(81334)    API]  -    Parameter 11 has type STRING_T
[(81334)    API]  -    Parameter 12 has type STRING_T
[(81334)    API]  -    Parameter 13 has type STRING_T
[(81334)    API]  -    Parameter 14 has type FILE_T
[(81336)    API]  -    Parameter 15 has type OBJECT_T
[(81336)    API]  -  Creating task from method gfortranCompiler in binary.BINARY
[(81336)    API]  -  There are 5 parameters
[(81336)    API]  -    Parameter 1 has type STRING_T
[(81336)    API]  -    Parameter 2 has type FILE_T
[(81337)    API]  -    Parameter 3 has type STRING_T
[(81337)    API]  -    Parameter 4 has type STRING_T
[(81337)    API]  -    Parameter 5 has type OBJECT_T
[(81338)    API]  -  Creating task from method fortranCompilerWithW3 in binary.BINARY
[(81338)    API]  -  There are 19 parameters
[(81338)    API]  -    Parameter 1 has type STRING_T
[(81338)    API]  -    Parameter 2 has type STRING_T
[(81338)    API]  -    Parameter 3 has type STRING_T
[(81338)    API]  -    Parameter 4 has type STRING_T
[(81338)    API]  -    Parameter 5 has type STRING_T
[(81338)    API]  -    Parameter 6 has type STRING_T
[(81338)    API]  -    Parameter 7 has type STRING_T
[(81338)    API]  -    Parameter 8 has type STRING_T
[(81338)    API]  -    Parameter 9 has type STRING_T
[(81338)    API]  -    Parameter 10 has type STRING_T
[(81338)    API]  -    Parameter 11 has type STRING_T
[(81338)    API]  -    Parameter 12 has type STRING_T
[(81338)    API]  -    Parameter 13 has type STRING_T
[(81338)    API]  -    Parameter 14 has type FILE_T
[(81339)    API]  -    Parameter 15 has type STRING_T
[(81339)    API]  -    Parameter 16 has type STRING_T
[(81339)    API]  -    Parameter 17 has type STRING_T
[(81339)    API]  -    Parameter 18 has type STRING_T
[(81339)    API]  -    Parameter 19 has type OBJECT_T
[(81339)    API]  -  Creating task from method fortranCompileWithObject in binary.BINARY
[(81339)    API]  -  There are 16 parameters
[(81339)    API]  -    Parameter 1 has type STRING_T
[(81339)    API]  -    Parameter 2 has type STRING_T
[(81339)    API]  -    Parameter 3 has type STRING_T
[(81339)    API]  -    Parameter 4 has type STRING_T
[(81339)    API]  -    Parameter 5 has type STRING_T
[(81339)    API]  -    Parameter 6 has type STRING_T
[(81339)    API]  -    Parameter 7 has type STRING_T
[(81339)    API]  -    Parameter 8 has type STRING_T
[(81339)    API]  -    Parameter 9 has type STRING_T
[(81339)    API]  -    Parameter 10 has type STRING_T
[(81339)    API]  -    Parameter 11 has type STRING_T
[(81339)    API]  -    Parameter 12 has type STRING_T
[(81339)    API]  -    Parameter 13 has type STRING_T
[(81339)    API]  -    Parameter 14 has type STRING_T
[(81339)    API]  -    Parameter 15 has type FILE_T
[(81339)    API]  -    Parameter 16 has type OBJECT_T
[(81339)    API]  -  Getting object with hash code -2147483616
[(82315)    API]  -  Object obtained 0
[(82315) Variable]  -  Compilation of 0 binary ended with status 0
[(82315)    API]  -  Getting object with hash code -2147483616
[(82315)    API]  -  Getting object with hash code -2147483615
[(85132)    API]  -  Object obtained 0
[(85132) Variable]  -  Compilation of 1 binary ended with status 0
[(85132)    API]  -  Getting object with hash code -2147483615
[(85132)    API]  -  Getting object with hash code -2147483614
[(85138)    API]  -  Object obtained 0
[(85138) Variable]  -  Compilation of 2 binary ended with status 0
[(85139)    API]  -  Getting object with hash code -2147483614
[(85139)    API]  -  Getting object with hash code -2147483613
[(85145)    API]  -  Object obtained 0
[(85145) Variable]  -  Compilation of 3 binary ended with status 0
[(85145)    API]  -  Getting object with hash code -2147483613
[(85146)    API]  -  Getting object with hash code -2147483612
[(85152)    API]  -  Object obtained 0
[(85152) Variable]  -  Compilation of 4 binary ended with status 0
[(85152)    API]  -  Getting object with hash code -2147483612
[(85152)    API]  -  Getting object with hash code -2147483611
[(85857)    API]  -  Object obtained 0
[(85857) Variable]  -  Compilation of 5 binary ended with status 0
[(85857)    API]  -  Getting object with hash code -2147483611
[(85857)    API]  -  Getting object with hash code -2147483610
[(85863)    API]  -  Object obtained 0
[(85863) Variable]  -  Compilation of 6 binary ended with status 0
[(85863)    API]  -  Getting object with hash code -2147483610
[(85863)    API]  -  Getting object with hash code -2147483609
[(85870)    API]  -  Object obtained 0
[(85870) Variable]  -  Compilation of 7 binary ended with status 0
[(85870)    API]  -  Getting object with hash code -2147483609
[(85870)    API]  -  Getting object with hash code -2147483608
[(85875)    API]  -  Object obtained 0
[(85876) Variable]  -  Compilation of 8 binary ended with status 0
[(85876)    API]  -  Getting object with hash code -2147483608
[(85876)    API]  -  Getting object with hash code -2147483607
[(85881)    API]  -  Object obtained 0
[(85881) Variable]  -  Compilation of 9 binary ended with status 0
[(85881)    API]  -  Getting object with hash code -2147483607
[(85882) Variable]  -  
[(85882) Variable]  -  --- Finished building variable executables -----------------
[(85882) Variable]  -  
[(85882) Variable]  -  ========= BEGIN ============================================
[(85883) Variable]  -  
[(85883) Variable]  -  --- degrib gfs global data ---------------------------------
[(85884)    API]  -  Creating task from method degribgfs_generic_05 in binary.BINARY
[(85884)    API]  -  There are 19 parameters
[(85884)    API]  -    Parameter 1 has type FILE_T
[(85884)    API]  -    Parameter 2 has type FILE_T
[(85884)    API]  -    Parameter 3 has type FILE_T
[(85885)    API]  -    Parameter 4 has type FILE_T
[(85885)    API]  -    Parameter 5 has type FILE_T
[(85886)    API]  -    Parameter 6 has type FILE_T
[(85886)    API]  -    Parameter 7 has type FILE_T
[(85886)    API]  -    Parameter 8 has type FILE_T
[(85887)    API]  -    Parameter 9 has type FILE_T
[(85887)    API]  -    Parameter 10 has type FILE_T
[(85888)    API]  -    Parameter 11 has type FILE_T
[(85888)    API]  -    Parameter 12 has type FILE_T
[(85888)    API]  -    Parameter 13 has type FILE_T
[(85889)    API]  -    Parameter 14 has type FILE_T
[(85889)    API]  -    Parameter 15 has type FILE_T
[(85890)    API]  -    Parameter 16 has type FILE_T
[(85890)    API]  -    Parameter 17 has type FILE_T
[(85890)    API]  -    Parameter 18 has type FILE_T
[(85891)    API]  -    Parameter 19 has type OBJECT_T
[(85891) Variable]  -  
[(85891) Variable]  -  --- GFS 2 Model --------------------------------------------
[(85891)    API]  -  Creating task from method gfs2model_rrtm in binary.BINARY
[(85891)    API]  -  There are 20 parameters
[(85891)    API]  -    Parameter 1 has type FILE_T
[(85891)    API]  -    Parameter 2 has type FILE_T
[(85891)    API]  -    Parameter 3 has type FILE_T
[(85891)    API]  -    Parameter 4 has type FILE_T
[(85891)    API]  -    Parameter 5 has type FILE_T
[(85891)    API]  -    Parameter 6 has type FILE_T
[(85892)    API]  -    Parameter 7 has type FILE_T
[(85892)    API]  -    Parameter 8 has type FILE_T
[(85892)    API]  -    Parameter 9 has type FILE_T
[(85892)    API]  -    Parameter 10 has type FILE_T
[(85892)    API]  -    Parameter 11 has type FILE_T
[(85892)    API]  -    Parameter 12 has type FILE_T
[(85892)    API]  -    Parameter 13 has type FILE_T
[(85892)    API]  -    Parameter 14 has type FILE_T
[(85892)    API]  -    Parameter 15 has type FILE_T
[(85892)    API]  -    Parameter 16 has type FILE_T
[(85893)    API]  -    Parameter 17 has type FILE_T
[(85893)    API]  -    Parameter 18 has type FILE_T
[(85893)    API]  -    Parameter 19 has type FILE_T
[(85893)    API]  -    Parameter 20 has type OBJECT_T
[(85893) Variable]  -  
[(85893) Variable]  -  --- INC RRTM -----------------------------------------------
[(85893)    API]  -  Creating task from method inc_rrtm in binary.BINARY
[(85893)    API]  -  There are 3 parameters
[(85893)    API]  -    Parameter 1 has type FILE_T
[(85893)    API]  -    Parameter 2 has type STRING_T
[(85893)    API]  -    Parameter 3 has type OBJECT_T
[(85893) Variable]  -  
[(85893) Variable]  -  --- CNV RRTM -----------------------------------------------
[(85893)    API]  -  Creating task from method cnv_rrtm in binary.BINARY
[(85893)    API]  -  There are 8 parameters
[(85894)    API]  -    Parameter 1 has type FILE_T
[(85894)    API]  -    Parameter 2 has type FILE_T
[(85894)    API]  -    Parameter 3 has type FILE_T
[(85894)    API]  -    Parameter 4 has type FILE_T
[(85895)    API]  -    Parameter 5 has type FILE_T
[(85895)    API]  -    Parameter 6 has type FILE_T
[(85896)    API]  -    Parameter 7 has type FILE_T
[(85896)    API]  -    Parameter 8 has type OBJECT_T
[(85896) Variable]  -  
[(85896) Variable]  -  --- Degrib 0.5 deg sst -------------------------------------
[(85896)    API]  -  Creating task from method degribsst in binary.BINARY
[(85896)    API]  -  There are 3 parameters
[(85896)    API]  -    Parameter 1 has type FILE_T
[(85897)    API]  -    Parameter 2 has type STRING_T
[(85897)    API]  -    Parameter 3 has type OBJECT_T
[(85897) Variable]  -  
[(85897) Variable]  -  --- Prepare climatological albedo --------------------------
[(85897)    API]  -  Creating task from method albedo in binary.BINARY
[(85897)    API]  -  There are 6 parameters
[(85897)    API]  -    Parameter 1 has type FILE_T
[(85897)    API]  -    Parameter 2 has type FILE_T
[(85897)    API]  -    Parameter 3 has type FILE_T
[(85898)    API]  -    Parameter 4 has type FILE_T
[(85898)    API]  -    Parameter 5 has type STRING_T
[(85898)    API]  -    Parameter 6 has type OBJECT_T
[(85898) Variable]  -  
[(85898) Variable]  -  --- Prepare rrtm climatological albedos --------------------
[(85898)    API]  -  Creating task from method albedorrtm in binary.BINARY
[(85898)    API]  -  There are 5 parameters
[(85898)    API]  -    Parameter 1 has type FILE_T
[(85898)    API]  -    Parameter 2 has type FILE_T
[(85898)    API]  -    Parameter 3 has type FILE_T
[(85899)    API]  -    Parameter 4 has type STRING_T
[(85899)    API]  -    Parameter 5 has type OBJECT_T
[(85899) Variable]  -  
[(85899) Variable]  -  --- Prepare climatological vegetation fraction -------------
[(85899)    API]  -  Creating task from method vegfrac in binary.BINARY
[(85899)    API]  -  There are 5 parameters
[(85899)    API]  -    Parameter 1 has type FILE_T
[(85899)    API]  -    Parameter 2 has type FILE_T
[(85899)    API]  -    Parameter 3 has type FILE_T
[(85900)    API]  -    Parameter 4 has type STRING_T
[(85900)    API]  -    Parameter 5 has type OBJECT_T
[(85900) Variable]  -  
[(85900) Variable]  -  --- Prepare z0 and initial ustar ---------------------------
[(85900)    API]  -  Creating task from method z0vegfrac in binary.BINARY
[(85900)    API]  -  There are 10 parameters
[(85900)    API]  -    Parameter 1 has type FILE_T
[(85900)    API]  -    Parameter 2 has type FILE_T
[(85900)    API]  -    Parameter 3 has type FILE_T
[(85901)    API]  -    Parameter 4 has type FILE_T
[(85901)    API]  -    Parameter 5 has type FILE_T
[(85901)    API]  -    Parameter 6 has type FILE_T
[(85901)    API]  -    Parameter 7 has type FILE_T
[(85902)    API]  -    Parameter 8 has type FILE_T
[(85902)    API]  -    Parameter 9 has type FILE_T
[(85903)    API]  -    Parameter 10 has type OBJECT_T
[(85903) Variable]  -  
[(85903) Variable]  -  --- Interpolate to model grid and execute allprep (fcst) ---
[(85903)    API]  -  Creating task from method allprep in binary.BINARY
[(85903)    API]  -  There are 48 parameters
[(85903)    API]  -    Parameter 1 has type FILE_T
[(85903)    API]  -    Parameter 2 has type FILE_T
[(85903)    API]  -    Parameter 3 has type FILE_T
[(85903)    API]  -    Parameter 4 has type FILE_T
[(85903)    API]  -    Parameter 5 has type FILE_T
[(85904)    API]  -    Parameter 6 has type FILE_T
[(85904)    API]  -    Parameter 7 has type FILE_T
[(85904)    API]  -    Parameter 8 has type FILE_T
[(85904)    API]  -    Parameter 9 has type FILE_T
[(85905)    API]  -    Parameter 10 has type FILE_T
[(85905)    API]  -    Parameter 11 has type FILE_T
[(85905)    API]  -    Parameter 12 has type FILE_T
[(85905)    API]  -    Parameter 13 has type FILE_T
[(85905)    API]  -    Parameter 14 has type FILE_T
[(85905)    API]  -    Parameter 15 has type FILE_T
[(85906)    API]  -    Parameter 16 has type FILE_T
[(85906)    API]  -    Parameter 17 has type FILE_T
[(85906)    API]  -    Parameter 18 has type FILE_T
[(85906)    API]  -    Parameter 19 has type FILE_T
[(85906)    API]  -    Parameter 20 has type FILE_T
[(85906)    API]  -    Parameter 21 has type FILE_T
[(85906)    API]  -    Parameter 22 has type FILE_T
[(85907)    API]  -    Parameter 23 has type FILE_T
[(85907)    API]  -    Parameter 24 has type FILE_T
[(85908)    API]  -    Parameter 25 has type FILE_T
[(85908)    API]  -    Parameter 26 has type FILE_T
[(85908)    API]  -    Parameter 27 has type FILE_T
[(85909)    API]  -    Parameter 28 has type FILE_T
[(85909)    API]  -    Parameter 29 has type FILE_T
[(85910)    API]  -    Parameter 30 has type FILE_T
[(85910)    API]  -    Parameter 31 has type FILE_T
[(85910)    API]  -    Parameter 32 has type FILE_T
[(85911)    API]  -    Parameter 33 has type FILE_T
[(85911)    API]  -    Parameter 34 has type FILE_T
[(85912)    API]  -    Parameter 35 has type FILE_T
[(85912)    API]  -    Parameter 36 has type FILE_T
[(85912)    API]  -    Parameter 37 has type FILE_T
[(85913)    API]  -    Parameter 38 has type FILE_T
[(85913)    API]  -    Parameter 39 has type FILE_T
[(85914)    API]  -    Parameter 40 has type FILE_T
[(85914)    API]  -    Parameter 41 has type FILE_T
[(85914)    API]  -    Parameter 42 has type FILE_T
[(85915)    API]  -    Parameter 43 has type FILE_T
[(85915)    API]  -    Parameter 44 has type FILE_T
[(85915)    API]  -    Parameter 45 has type STRING_T
[(85915)    API]  -    Parameter 46 has type STRING_T
[(85915)    API]  -    Parameter 47 has type STRING_T
[(85915)    API]  -    Parameter 48 has type OBJECT_T
[(85915) Variable]  -  
[(85915) Variable]  -  --- Prepare the dust related variable (soildust) -----------
[(85915)    API]  -  Creating task from method readpaulsource in binary.BINARY
[(85915)    API]  -  There are 5 parameters
[(85915)    API]  -    Parameter 1 has type FILE_T
[(85915)    API]  -    Parameter 2 has type FILE_T
[(85916)    API]  -    Parameter 3 has type FILE_T
[(85916)    API]  -    Parameter 4 has type STRING_T
[(85916)    API]  -    Parameter 5 has type OBJECT_T
[(85916) Variable]  -  
[(85916) Variable]  -  --- Dust Start ---------------------------------------------
[(85916)    API]  -  Creating task from method dust_start in binary.BINARY
[(85916)    API]  -  There are 15 parameters
[(85916)    API]  -    Parameter 1 has type FILE_T
[(85916)    API]  -    Parameter 2 has type FILE_T
[(85917)    API]  -    Parameter 3 has type FILE_T
[(85917)    API]  -    Parameter 4 has type FILE_T
[(85917)    API]  -    Parameter 5 has type FILE_T
[(85917)    API]  -    Parameter 6 has type FILE_T
[(85917)    API]  -    Parameter 7 has type FILE_T
[(85918)    API]  -    Parameter 8 has type FILE_T
[(85918)    API]  -    Parameter 9 has type FILE_T
[(85918)    API]  -    Parameter 10 has type FILE_T
[(85918)    API]  -    Parameter 11 has type FILE_T
[(85918)    API]  -    Parameter 12 has type FILE_T
[(85918)    API]  -    Parameter 13 has type FILE_T
[(85918)    API]  -    Parameter 14 has type FILE_T
[(85919)    API]  -    Parameter 15 has type OBJECT_T
[(85919)    API]  -  Getting object with hash code -2147483606
[(96442)    API]  -  Object obtained 0
[(96442) Variable]  -  Execution of 0 binary ended with status 0
[(96442)    API]  -  Getting object with hash code -2147483606
[(96442)    API]  -  Getting object with hash code -2147483605
[(96812)    API]  -  Object obtained 0
[(96812) Variable]  -  Execution of 1 binary ended with status 0
[(96812)    API]  -  Getting object with hash code -2147483605
[(96813)    API]  -  Getting object with hash code -2147483604
[(96835)    API]  -  Object obtained 0
[(96835) Variable]  -  Execution of 2 binary ended with status 0
[(96835)    API]  -  Getting object with hash code -2147483604
[(96835)    API]  -  Getting object with hash code -2147483603
[(97120)    API]  -  Object obtained 0
[(97120) Variable]  -  Execution of 3 binary ended with status 0
[(97120)    API]  -  Getting object with hash code -2147483603
[(97121)    API]  -  Getting object with hash code -2147483602
[(97130)    API]  -  Object obtained 0
[(97130) Variable]  -  Execution of 4 binary ended with status 0
[(97131)    API]  -  Getting object with hash code -2147483602
[(97131)    API]  -  Getting object with hash code -2147483601
[(97553)    API]  -  Object obtained 0
[(97553) Variable]  -  Execution of 5 binary ended with status 0
[(97553)    API]  -  Getting object with hash code -2147483601
[(97553)    API]  -  Getting object with hash code -2147483600
[(97563)    API]  -  Object obtained 0
[(97563) Variable]  -  Execution of 6 binary ended with status 0
[(97563)    API]  -  Getting object with hash code -2147483600
[(97563)    API]  -  Getting object with hash code -2147483599
[(97575)    API]  -  Object obtained 0
[(97575) Variable]  -  Execution of 7 binary ended with status 0
[(97575)    API]  -  Getting object with hash code -2147483599
[(97575)    API]  -  Getting object with hash code -2147483598
[(97598)    API]  -  Object obtained 0
[(97598) Variable]  -  Execution of 8 binary ended with status 0
[(97598)    API]  -  Getting object with hash code -2147483598
[(97599)    API]  -  Getting object with hash code -2147483597
[(98250)    API]  -  Object obtained 0
[(98250) Variable]  -  Execution of 9 binary ended with status 0
[(98250)    API]  -  Getting object with hash code -2147483597
[(98251)    API]  -  Getting object with hash code -2147483596
[(98261)    API]  -  Object obtained 0
[(98261) Variable]  -  Execution of 10 binary ended with status 0
[(98261)    API]  -  Getting object with hash code -2147483596
[(98261)    API]  -  Getting object with hash code -2147483595
[(98328)    API]  -  Object obtained 0
[(98328) Variable]  -  Execution of 11 binary ended with status 0
[(98328)    API]  -  Getting object with hash code -2147483595
[(98328) Variable]  -  
[(98328) Variable]  -  ========= END ==============================================
[(98328) Variable]  -  
[(98328) Variable]  -  --- Clean up executables -----------------------------------
[(98333)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/albedo.x
[(98333)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/albedo.x
[(98334)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/albedorrtm1deg.x
[(98334)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/albedorrtm1deg.x
[(98335)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/vegfrac.x
[(98335)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/vegfrac.x
[(98336)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/z0vegustar.x
[(98337)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/z0vegustar.x
[(98337)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/cnv_rrtm.x
[(98337)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/cnv_rrtm.x
[(98338)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/dust_start.x
[(98338)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/dust_start.x
[(98339)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/inc_rrtm.x
[(98339)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/inc_rrtm.x
[(98342)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/gfs2model_rrtm.x
[(98342)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/gfs2model_rrtm.x
[(98344)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/degribsst.x
[(98344)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/degribsst.x
[(98346)    API]  -  Access to delete file /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/allprep_rrtm.x
[(98346)    API]  -  Deleting File /.statelite/tmpfs/gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/VARIABLE/allprep_rrtm.x
[(98354) Variable]  -  Variable process finished
[(98355) UmoModel]  -  Enter UMO Model process
[(98355) UmoModel]  -  Cannot erase previous isop.dat because it doesn't exist.
[(98355) UmoModel]  -  Cannot erase previous meteo-data.dat because it doesn't exist.
[(98355) UmoModel]  -  Cannot erase previous chemic-reg because it doesn't exist.
[(98355) UmoModel]  -  Cannot erase previous main_input_filename because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous main_input_filename2 because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous GWD.bin because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous configure_file because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous co2_trans because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous ETAMPNEW_AERO because it doesn't exist.
[(98356) UmoModel]  -  Cannot erase previous ETAMPNEW_DATA because it doesn't exist.
[(98362) UmoModel]  -  Cannot copy file from /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/chemic-reg to /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/chemic-reg. Skipping...
[(98362) UmoModel]  -  Cannot copy file from /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/GWD.bin to /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/GWD.bin. Skipping...
[(98362)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/fcst in mode INOUT
[(99455)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d155v3_1489505121008.IT
[(99493)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/soildust in mode INOUT
[(99706)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d160v3_1489505121008.IT
[(99713)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh00 in mode INOUT
[(99732)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d63v3_1489505121008.IT
[(99734)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh50 in mode INOUT
[(99751)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d64v3_1489505121008.IT
[(99752)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh70 in mode INOUT
[(99781)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d65v3_1489505121008.IT
[(99783)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh80 in mode INOUT
[(99798)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d66v3_1489505121008.IT
[(99800)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh90 in mode INOUT
[(99817)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d67v3_1489505121008.IT
[(99818)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh95 in mode INOUT
[(99834)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d68v3_1489505121008.IT
[(99836)    API]  -  Opening file /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/lookup_aerosol2.dat.rh99 in mode INOUT
[(99852)    API]  -  File target Location: /.statelite/tmpfs/gpfs/home/bsc19/bsc19533/.COMPSs/2915951/tmpFiles/d69v3_1489505121008.IT
[(99854) UmoModel]  -  Cannot copy from CHEMIC because source doesn't exist. Skipping...
[(99854) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/III/257/ -e s/JJJ/181/ -e s/KKK/24/ -e s/TPHD/0.0/ -e s/TLMD/0.0/ -e s/WBD/-180.0/ -e s/SBD/-90.0/ -e s/INPES/6/ -e s/JNPES/10/ -e s/WRTSK/4/ -e s/DTINT/180/ -e s/YYYY/2014/ -e s/MM/09/ -e s/DD/01/ -e s/HH/00/ -e s/LLL/24/ -e s/STT/180/ -e s/DOM/true/ -e s/EEEE/false/ -e s/BBBB/0.768/ -e s/NRADS/20/ -e s/NRADL/20/ -e s/CCCC/0/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/JOB/configfile_rrtm_chem.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/configure_file
[(99855) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(99867) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(99867) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(99867) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(99867) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(99868) BashCMDExecutor]  -  #######################
[(99868) BashCMDExecutor]  -  ####  Model Core  #####
[(99868) BashCMDExecutor]  -  #######################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  core: nmm                   # Introduce ourselves to the NEMS
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  #####  Grid Specifications  #####
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  im:  257                    # I gridpoints
[(99868) BashCMDExecutor]  -  jm:  181                    # J gridpoints
[(99868) BashCMDExecutor]  -  lm:  24                    # Number of atmospheric layers
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  tph0d:   0.0               # Central geographic latitude of grid (degrees)
[(99868) BashCMDExecutor]  -  tlm0d:   0.0               # Central geographic longitude of grid (degrees, positive east)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  wbd:  -180.0                   # Grid's western boundary (rotated degrees)
[(99868) BashCMDExecutor]  -  sbd:  -90.0                   # Grid's southern boundary (rotated degrees)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ################################
[(99868) BashCMDExecutor]  -  #####  Grid Decomposition  #####
[(99868) BashCMDExecutor]  -  ################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  inpes:  6               # Number of compute tasks in the I direction
[(99868) BashCMDExecutor]  -  jnpes:  10               # Number of compute tasks in the J direction
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  ####  Specify the I/O tasks  ####
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  quilting:              true    # Do you want asynchronous quilting/history writes?
[(99868) BashCMDExecutor]  -  read_groups:           0
[(99868) BashCMDExecutor]  -  read_tasks_per_group:  0
[(99868) BashCMDExecutor]  -  write_groups:          1
[(99868) BashCMDExecutor]  -  write_tasks_per_group: 4
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ############################################
[(99868) BashCMDExecutor]  -  #####  Fundamental Timestep (seconds)  #####
[(99868) BashCMDExecutor]  -  ############################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  dt_int: 180               # Integer seconds
[(99868) BashCMDExecutor]  -  dt_num: 0                   # Numerator of fractional second
[(99868) BashCMDExecutor]  -  dt_den: 1                   # Denominator of fractional second
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  filt_dt_int: 180          # Filter integer seconds
[(99868) BashCMDExecutor]  -  filt_dt_num: 0              # Filter numerator of fractional sec
[(99868) BashCMDExecutor]  -  filt_dt_den: 1              # Filter denominator of fractional sec
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  #####  Forecast Start Time  #####
[(99868) BashCMDExecutor]  -  #################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  start_year:   2014
[(99868) BashCMDExecutor]  -  start_month:  09
[(99868) BashCMDExecutor]  -  start_day:    01
[(99868) BashCMDExecutor]  -  start_hour:   00
[(99868) BashCMDExecutor]  -  start_minute: 0
[(99868) BashCMDExecutor]  -  start_second: 0
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  tstart:       0.            # The starting forecast hour
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #############################################################
[(99868) BashCMDExecutor]  -  #####  Forecast Length / Restarting / Output Frequency  #####
[(99868) BashCMDExecutor]  -  #############################################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  nhours_fcst:      24       # Length of the forecast (hours)
[(99868) BashCMDExecutor]  -  minutes_history:  180       # Frequency of history output (minutes)
[(99868) BashCMDExecutor]  -  nhours_dfini:       0
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  restart:          false     # True--> A restarted run
[(99868) BashCMDExecutor]  -  minutes_restart:  720       # Frequency of restart output (minutes)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  avg_max_length: 3600        # Time in seconds when averaged fields are reset
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  rst_out_00:          false  # True--> Write 00h history in restarted run
[(99868) BashCMDExecutor]  -  write_last_restart:  true   # True--> Write last restart file
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  freerun:             true   # True--> Original
[(99868) BashCMDExecutor]  -                              # False--> 5X divergence dumping in NDAS forec.
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ###########################
[(99868) BashCMDExecutor]  -  #####  General Modes  #####
[(99868) BashCMDExecutor]  -  ###########################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  global:    true              # True--> Global ; False--> Regional
[(99868) BashCMDExecutor]  -  hydro:     false            # True--> Hydrostatic ;  False--> Nonhydrostatic
[(99868) BashCMDExecutor]  -  adiabatic: false            # True--> Adiabatic ;  False--> Diabatic
[(99868) BashCMDExecutor]  -  oper:      false
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ####################
[(99868) BashCMDExecutor]  -  ##### Ensemble #####
[(99868) BashCMDExecutor]  -  ####################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ENS_SPS:      false
[(99868) BashCMDExecutor]  -  RUN_CONTINUE: false
[(99868) BashCMDExecutor]  -  total_member: 1
[(99868) BashCMDExecutor]  -  PE_MEMBER01:    0
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  ######################
[(99868) BashCMDExecutor]  -  #####  Dynamics  #####
[(99868) BashCMDExecutor]  -  ######################
[(99868) BashCMDExecutor]  -   
[(99868) BashCMDExecutor]  -  secadv:  true               # True--> 2nd order advection ; False--> 4th order advection
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  smag2:   0.2                # Smagorinsky constant for 2nd order diffusion
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  codamp:  9.0                # Divergence damping constant
[(99868) BashCMDExecutor]  -  wcor:    0.2                # Divergence correction factor
[(99868) BashCMDExecutor]  -   
[(99868) BashCMDExecutor]  -  idtad:   2                  # Number of adjustment timesteps between passive advection calls
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  advect_tracers:  true       # Will tracers be advected?
[(99868) BashCMDExecutor]  -  idtadt:  2                  # Number of adjustment timesteps between tracer advection calls (normally 1)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  num_tracers_met:   4        # Number of specified meterological "tracer" scalars (e.g., water)
[(99868) BashCMDExecutor]  -  #num_tracers_chem:  8        # Number of specified chem/aerosol "tracer" scalars
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  lnsh:  1                    # Number of boundary blending rows for H points
[(99868) BashCMDExecutor]  -  lnsv:  1                    # Number of boundary blending rows for V points
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #BSCCTM1
[(99868) BashCMDExecutor]  -  ###CPEREZ1
[(99868) BashCMDExecutor]  -  #####################################################
[(99868) BashCMDExecutor]  -  ##### Aerosol - chem species and number of bins #####
[(99868) BashCMDExecutor]  -  #####################################################
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  num_tracers_chem:  8       # Number of specified chem/aerosol "tracer" scalars
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #AEROSOLS (true if >1, false if =0)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  num_ash:   0                 # Number of volcanic ash bins
[(99868) BashCMDExecutor]  -  num_dust:  8                 # Number of dust transport bins  (only 8 works - 4 also planned) - if num_dust:0 --> don't run dust
[(99868) BashCMDExecutor]  -  num_salt:  0                 # Number of sea salt tranport bins (not active - 4 and 8)
[(99868) BashCMDExecutor]  -  num_om:    0                 # Number of organic matter transport bins (not active - 2? - hydrophobic/hydrophilic)
[(99868) BashCMDExecutor]  -  num_bc:    0                 # Number of black carbon transport bins (not active - 2? - hydrophobic/hydrophilic)
[(99868) BashCMDExecutor]  -  num_so4:   0                 # Number of sulphate transport bins (not active - 2? - SO4 aerosol)
[(99868) BashCMDExecutor]  -  num_aero_uci: 0              # Number of secondary aerosols bins
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  bc_aero: false               # Do we have aerosol BC for parent domain on regional runs
[(99868) BashCMDExecutor]  -  #GAS CHEMISTRY MECHANISM
[(99868) BashCMDExecutor]  -  #OJORBA1
[(99868) BashCMDExecutor]  -  chem_mech: 0                 # 0 no gas chemistry 
[(99868) BashCMDExecutor]  -                               # 1 CB-IV chemical mechanism frmo KPP
[(99868) BashCMDExecutor]  -                               # 2 CBM05 chemical mechanism from KPP
[(99868) BashCMDExecutor]  -                               # 22 CBM05 chemical mech. with EBI-solver from CMAQ
[(99868) BashCMDExecutor]  -                               # 4 gas tracer
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  chem_ste: 0                  # 0 no stratosphere ozone
[(99868) BashCMDExecutor]  -                               # 1 Cariollev2.9 linear Strt. ozone model
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  chem_ic: 0                # 0 initialize from ideal conditions
[(99868) BashCMDExecutor]  -                               # 1 initialize from a previous run
[(99868) BashCMDExecutor]  -                               # 2 initialize from inca chem data
[(99868) BashCMDExecutor]  -                               # 3 initialize from global nmmb-ctm run
[(99868) BashCMDExecutor]  -                               # 4 initialize from a previous run of different resolution
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  num_bc_chem: 8               # Number of chemical species in BC for parent domain on regional runs
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  nemis:        4              # Number of dynamics timesteps between reads to emission files
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  nphot:       20              # Number of dynamics timesteps between recompute photolysis rates
[(99868) BashCMDExecutor]  -  #OJORBA1
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  idtad_chem:    2             # Number of adjustment timesteps between aerosol/chem advection calls
[(99868) BashCMDExecutor]  -  ngas:          4             # Number of dynamics timesteps between calls to gas-phase chemistry
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  #CPEREZ3
[(99868) BashCMDExecutor]  -  dcal:   0.768                 # Dust emission calibration factor
[(99868) BashCMDExecutor]  -                               # 0.3*2.*0.8*1.6 !Paper Perez et al. (2011) Global 1ºx1.4º
[(99868) BashCMDExecutor]  -                               # 0.15*1.7   !analysis initial data 0.25x0.25x40
[(99868) BashCMDExecutor]  -                               # 0.3  !Reanalysis 2 - GLDAS  0.5x0.5x40 vert regional
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  couple_dust:    false         # True--> dust from history file; False--> no initial dust
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  num_veg:   99               # Number of landuse types (see vegtypes in dust_start.f)
[(99868) BashCMDExecutor]  -  
[(99868) BashCMDExecutor]  -  nhrs_spinup:  0              # hours of spin-up
[(99869) BashCMDExecutor]  -  #CPEREZ3
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  ###################################################
[(99869) BashCMDExecutor]  -  ##### Aerosol/chem species processes ##############
[(99869) BashCMDExecutor]  -  ##### for model testing ########################### 
[(99869) BashCMDExecutor]  -  ##### true or false for the different processes ###
[(99869) BashCMDExecutor]  -  ###################################################
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  diff_chem:     true         # Lateral diffusion for chem/aerosol species
[(99869) BashCMDExecutor]  -  adv_chem:      true         # Horizontal and vertical advection for chem/aerosol species 
[(99869) BashCMDExecutor]  -  sedim:         false        # Aerosol sedimentation (CPEREZ4: in vertical advection dynamics_grid_comp)
[(99869) BashCMDExecutor]  -  incloud_conv:  true         # Aerosol In-cloud scavenging from convective clouds
[(99869) BashCMDExecutor]  -  bcloud_conv:   true         # Aerosol below-cloud scavenging from convective clouds
[(99869) BashCMDExecutor]  -  incloud_strt:  true         # Aerosol in-cloud scavenging from stratiform clouds
[(99869) BashCMDExecutor]  -  bcloud_strt:   true         # Aerosol below-cloud scavenging from stratiform clouds 
[(99869) BashCMDExecutor]  -  conv_trans:    true         # Convective adjustment of aerosol/chem arrays
[(99869) BashCMDExecutor]  -  vdiff_chem:    true         # vertical diffusion
[(99869) BashCMDExecutor]  -  dry_dep:       true         # Aerosol dry deposition
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  #CPEREZ4
[(99869) BashCMDExecutor]  -  newsedim:      true         # new aerosol sedimentation in physics_grid_comp
[(99869) BashCMDExecutor]  -  nsedim:        4            #adjustment steps between new sedimentation calls
[(99869) BashCMDExecutor]  -  #CPEREZ4
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  #OJORBA1
[(99869) BashCMDExecutor]  -  lchemon:       true         # Turn on gas-phase chemistry
[(99869) BashCMDExecutor]  -  lemis:         true         # Gas-phase emissions
[(99869) BashCMDExecutor]  -  lemiline:      false        # Online computation of biogenic emissions
[(99869) BashCMDExecutor]  -  lcnst:         0            # Constant emissions 0. variable 1. constant
[(99869) BashCMDExecutor]  -  #lnewemiss:     true         # .false. Emissions from wrfchem .true. emissions from mozart
[(99869) BashCMDExecutor]  -  lnewemiss:     4            # 0 Emissions from wrfchem
[(99869) BashCMDExecutor]  -                              # 1 Emissions from mozart (Emmons et al.,2010)
[(99869) BashCMDExecutor]  -                              # 2 Emissions from ACCMIP (Lamarque et al.,2010)
[(99869) BashCMDExecutor]  -                              # 3 Emissions from AQMEII-Phase 2 EU
[(99869) BashCMDExecutor]  -                              # 4 Emissions from Fukushima
[(99869) BashCMDExecutor]  -  lbiomod:       2            # If online biog emiss 1. simple scheme 2. megan scheme
[(99869) BashCMDExecutor]  -  lconvemi:      1.           # Factor for anthr. emissions input to model
[(99869) BashCMDExecutor]  -  lnum_lay_emiss: 6           # Num. vert. layers in emission file 1. mozart 6. poet
[(99869) BashCMDExecutor]  -  lnum_emiss_vert: 1          # Difusion of 1st emission layer in n first layers
[(99869) BashCMDExecutor]  -  lphot:         false        # Gas-phase photolysis
[(99869) BashCMDExecutor]  -  ldrydep:       false        # Gas-phase dry deposition
[(99869) BashCMDExecutor]  -  lcldchem:      false        # Gas-phase cloud chemistry
[(99869) BashCMDExecutor]  -  lrescld:       false        # Grid-scale cloud chemistry
[(99869) BashCMDExecutor]  -  lconvcld:      false        # Subgrid-scale cloud chemistry
[(99869) BashCMDExecutor]  -  lchem:         false        # Gas-phase chemical mechanism
[(99869) BashCMDExecutor]  -  #OJORBA1
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  ###########################################################
[(99869) BashCMDExecutor]  -  ##### Aerosol/chem species radiation interaction ##########
[(99869) BashCMDExecutor]  -  ##### Only works with RRTM new (rrtmn - see below)#########
[(99869) BashCMDExecutor]  -  ###########################################################
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  iaer:   11            # flag for aerosols scheme selection (all options work for N12B)
[(99869) BashCMDExecutor]  -                        #    - 3-digit aerosol flag (volc,lw,sw)     
[(99869) BashCMDExecutor]  -                        #    =  0: turn all aeros effects off (sw,lw,volc)                   !
[(99869) BashCMDExecutor]  -                        #    =  1: use clim tropspheric aerosol for sw only                  !
[(99869) BashCMDExecutor]  -                        #    = 10: use clim tropspheric aerosol for lw only                  !
[(99869) BashCMDExecutor]  -                        #    = 11: use clim tropspheric aerosol for both sw and lw  (def. NCEP)
[(99869) BashCMDExecutor]  -                        #    =100: volc aerosol only for both sw and lw                      !
[(99869) BashCMDExecutor]  -                        #    =101: volc and clim trops aerosol for sw only                   !
[(99869) BashCMDExecutor]  -                        #    =110: volc and clim trops aerosol for lw only                   !
[(99869) BashCMDExecutor]  -                        #    =111: volc and clim trops aerosol for both sw and lw            !
[(99869) BashCMDExecutor]  -                        #    =  2: gocart/BSC-Dust tropspheric aerosol for sw only           !
[(99869) BashCMDExecutor]  -                        #    = 20: gocart/BSC-Dust tropspheric aerosol for lw only           !
[(99869) BashCMDExecutor]  -                        #    = 22: gocart/BSC-Dust tropspheric aerosol for both sw and lw    !
[(99869) BashCMDExecutor]  -                        #    =102: volc and gocart trops aerosol for sw only                 !
[(99869) BashCMDExecutor]  -                        #    =120: volc and gocart trops aerosol for lw only                 !
[(99869) BashCMDExecutor]  -                        #    =122: volc and gocart trops aerosol for both sw and lw          !
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  fhdust: 100000.       # = 0 dust determined from gocart clim
[(99869) BashCMDExecutor]  -                        # > 0. and <99999. dust determined from nmmb fcst and gocart clim
[(99869) BashCMDExecutor]  -                        # >99999. dust determined from fcst
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  fhsalt: 0.            # not active yet
[(99869) BashCMDExecutor]  -  fhom:   0.            # not active yet
[(99869) BashCMDExecutor]  -  fhbc:   0.            # not active yet
[(99869) BashCMDExecutor]  -  fhso4:  0.            # not active yet
[(99869) BashCMDExecutor]  -  fhash:  0.            # not active yet
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  ###CPEREZ1
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  #BSCCTM1
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  ######################################
[(99869) BashCMDExecutor]  -  #####  Digital Filtering Options  ####
[(99869) BashCMDExecutor]  -  ######################################
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  filter_method: 0            # 0--->none ; 1--->DFL ; 2---> 01FI ; 3--->TDFI
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  nsecs_dfl: 1800             # HALF foward filter window (s)          (DFL)
[(99869) BashCMDExecutor]  -  nsecs_bckddfi: 1800         # HALF backward integration duration (s) (01FI)
[(99869) BashCMDExecutor]  -  nsecs_fwdddfi: 3600         # HALF foward filter window (s)          (01FI)
[(99869) BashCMDExecutor]  -  nsecs_bcktdfi: 3600         # HALF backward filter window (s)        (TDFI)
[(99869) BashCMDExecutor]  -  nsecs_fwdtdfi: 3600         # HALF forward filter window (s)         (TDFI)
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  #############################
[(99869) BashCMDExecutor]  -  #####  Global Summations ####
[(99869) BashCMDExecutor]  -  #############################
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  use_allreduce:  false       # False--> use mpi send/recv for global sums
[(99869) BashCMDExecutor]  -                              # True--> use mpi_allreduce for global sums
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  read_global_sums:  false    # Read in global summations or not
[(99869) BashCMDExecutor]  -  write_global_sums: false    # Write out global summations or not
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  
[(99869) BashCMDExecutor]  -  #####################################
[(99869) BashCMDExecutor]  -  ###  Precipitation Assimilation  ####
[(99869) BashCMDExecutor]  -  #####################################
[(99869) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  pcpflg:  false                # True--> assimilation on ; False--> assimilation off
[(99870) BashCMDExecutor]  -  pcphr: 6
[(99870) BashCMDExecutor]  -  write_prec_adj: false         # True--> create baseline prec. files ; False--> regular run
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ############################
[(99870) BashCMDExecutor]  -  ###  Gravity Wave Drag  ####
[(99870) BashCMDExecutor]  -  ############################
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  gwdflg:  false              # True--> GWD on ; False--> GWD off
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  cleffamp:   1.00            # tunable parameter, depends on resolution
[(99870) BashCMDExecutor]  -  sigfac:     0.00            # tunable parameter
[(99870) BashCMDExecutor]  -  factop:     0.50            # de-acceleration limiter
[(99870) BashCMDExecutor]  -  rlolev:   500.00            # critical pressure level (check units)
[(99870) BashCMDExecutor]  -  dpmin:      5.00            # minimum thickness of the reference layer (check units)
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ####################################
[(99870) BashCMDExecutor]  -  #####  Physics Scheme Options  #####
[(99870) BashCMDExecutor]  -  ####################################
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  shortwave: rrtm             # Radiation schemes
[(99870) BashCMDExecutor]  -  longwave:  rrtm
[(99870) BashCMDExecutor]  -                                  # gfdl--> GFDL (shortwave and longwave)
[(99870) BashCMDExecutor]  -                                  # gsfc--> Goddard shortwave
[(99870) BashCMDExecutor]  -                                  # dudh--> Dudhia shortwave
[(99870) BashCMDExecutor]  -                                  # rrtm--> RRTM (shortwave and longwave)
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  co2tf:  1                       # co2tf--> Read (0) or generate internally (1)
[(99870) BashCMDExecutor]  -                                  #          the GFDL CO2 transmission functions
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  convection:  bmj            # Convection scheme
[(99870) BashCMDExecutor]  -                                  # bmj    --> Betts-Miller-Janjic
[(99870) BashCMDExecutor]  -                                  # bmj_dev--> BMJ (development)
[(99870) BashCMDExecutor]  -                                  #  kf    --> Kain-Fritsch
[(99870) BashCMDExecutor]  -                                  # sas    --> Simplified Arakawa-Schubert
[(99870) BashCMDExecutor]  -                                  #  gd    --> Grell-Devenyi
[(99870) BashCMDExecutor]  -                                  # none   --> No convection
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  microphysics:  fer          # Microphysics scheme
[(99870) BashCMDExecutor]  -                                  # fer--> Ferrier
[(99870) BashCMDExecutor]  -                                  # fer_hires--> Ferrier operational
[(99870) BashCMDExecutor]  -                                  # kes--> Kessler
[(99870) BashCMDExecutor]  -                                  # lin--> Lin
[(99870) BashCMDExecutor]  -                                  # tho--> Thompson
[(99870) BashCMDExecutor]  -                                  # wsm3--> WSM3
[(99870) BashCMDExecutor]  -                                  # gfs--> GFS microphy
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  spec_adv:  .false.          # Individual cloud species advected
[(99870) BashCMDExecutor]  -  lmprate:   .false.          # Storage array for MP source/sink terms
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  turbulence:  myj            # Turbulence schemes
[(99870) BashCMDExecutor]  -                                  # myj--> Mellor-Yamada-Janjic
[(99870) BashCMDExecutor]  -                                  # gfs--> GFS PBL
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  sfc_layer:  myj             # Surface layer schemes
[(99870) BashCMDExecutor]  -                                  # myj--> Mellor-Yamada-Jamnjic
[(99870) BashCMDExecutor]  -                                  # mm5--> 095 sfc layer
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  land_surface:  liss         # Land surface schemes
[(99870) BashCMDExecutor]  -                                  # noah--> NOAH scheme
[(99870) BashCMDExecutor]  -                                  # liss--> Janjic LSM
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ucmcall: 0                  # Use (1) or do not use (0) the Urban Canopy Model
[(99870) BashCMDExecutor]  -  igbp: 0                     # Use (1) or do not use (0) IGBP types
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #---------------------------------
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  gfs:  false                 # Select entire GFS physics suite
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ########################################
[(99870) BashCMDExecutor]  -  #####  Shallow Convection Switches  ####
[(99870) BashCMDExecutor]  -  ########################################
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  fres:     1.00               # resolution factor for dsp's (default)
[(99870) BashCMDExecutor]  -  fr:       1.00               # land factor for dsp's (dafault)
[(99870) BashCMDExecutor]  -  fsl:      0.85               # reduction factor for "slow" dsp's over land (dafault)
[(99870) BashCMDExecutor]  -  fss:      0.85               # reduction factor for "slow" dsp's over water (dafault)
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  #fres:     0.80               # resolution factor for dsp's
[(99870) BashCMDExecutor]  -  #fr:       1.00               # land factor for dsp's
[(99870) BashCMDExecutor]  -  #fsl:      0.85               # reduction factor for "slow" dsp's over land
[(99870) BashCMDExecutor]  -  #fss:      0.85               # reduction factor for "slow" dsp's over water
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  entrain:    .false.         # Entrainment
[(99870) BashCMDExecutor]  -  newall:     .true.          # New cloud used at all shallow points
[(99870) BashCMDExecutor]  -  newswap:    .true.          # New clouds at swap shallow points
[(99870) BashCMDExecutor]  -  newupup:    .true.          # New cloud used for both heat and moisture up shallow pts.
[(99870) BashCMDExecutor]  -  nodeep:     .false.         # All deep convection diverted to shallow swap algorythm
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ###############################
[(99870) BashCMDExecutor]  -  #####  Physics Timesteps  #####
[(99870) BashCMDExecutor]  -  ###############################
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nrads:     20               # Number of dynamics timesteps between calls to shortwave
[(99870) BashCMDExecutor]  -  nradl:     20               # Number of dynamics timesteps  between calls to longwave
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nphs:       4               # Number of dynamics timesteps between calls to landsurface and turbulence
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nprecip:    8               # Number of dynamics timesteps between calls to convection and microphysics
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ####
[(99870) BashCMDExecutor]  -  #### NOTE:  User must set nhrs_udef to .TRUE. and set the emptying frequencies (nhrs_*) to the desired values
[(99870) BashCMDExecutor]  -  ####        or else all accumulations will automatically be emptied hourly.
[(99870) BashCMDExecutor]  -  ####
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nhrs_udef:  true            # User defined when fluxes are emptied.
[(99870) BashCMDExecutor]  -                              # False--> Auto ; True--> User defined:
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nhrs_prec:  3               # Frequency in hours between times when precip arrays are emptied
[(99870) BashCMDExecutor]  -  nhrs_heat: 12               # Frequency in hours between times when heating arrays are emptied
[(99870) BashCMDExecutor]  -  nhrs_clod: 12               # Frequency in hours between times when cloud arrays are emptied
[(99870) BashCMDExecutor]  -  nhrs_rdlw:  3               # Frequency in hours between times when LW radiation arrays are emptied
[(99870) BashCMDExecutor]  -  nhrs_rdsw:  3               # Frequency in hours between times when SW radiation arrays are emptied
[(99870) BashCMDExecutor]  -  nhrs_srfc: 12               # Frequency in hours between times when sfc evap/flux arrays are emptied
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  ################################################
[(99870) BashCMDExecutor]  -  ####  Write History/Restart Specifications  ####
[(99870) BashCMDExecutor]  -  ################################################
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  nemsio_input: false
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  write_hst_bin:       true   # True--> Write history files in binary format
[(99870) BashCMDExecutor]  -  write_hst_nemsio:    false   # True--> Write history files in NEMSIO format
[(99870) BashCMDExecutor]  -  write_rst_bin:       false   # True--> Write restart files in binary format
[(99870) BashCMDExecutor]  -  write_rst_nemsio:    false   # True--> Write restart files in NEMSIO format
[(99870) BashCMDExecutor]  -  
[(99870) BashCMDExecutor]  -  write_nemsioctl:     false   # True--> Yes write ctl for nemsio run history files
[(99871) BashCMDExecutor]  -  write_donefileflag:  false 
[(99871) BashCMDExecutor]  -  write_fsyncflag:     false   # True--> Yes write fsync
[(99871) BashCMDExecutor]  -  write_dopost:        false   # True--> Yes run post on quilt
[(99871) BashCMDExecutor]  -  post_gribversion:   'grib1' # grib version for post output
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  io_hst_unit:          -999
[(99871) BashCMDExecutor]  -  io_rst_unit:          -999
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  #-------------------------------------------------
[(99871) BashCMDExecutor]  -  # If IO_FILE == 'DEFERRED', use hst/rst_name_base
[(99871) BashCMDExecutor]  -  # as the first part of the history/restart
[(99871) BashCMDExecutor]  -  # file names.
[(99871) BashCMDExecutor]  -  #-------------------------------------------------
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  io_hst_file:     'DEFERRED'
[(99871) BashCMDExecutor]  -  io_rst_file:     'DEFERRED'
[(99871) BashCMDExecutor]  -  hst_name_base:   'nmmb_hst'
[(99871) BashCMDExecutor]  -  rst_name_base:   'nmmb_rst'
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  io_status:       'REPLACE'
[(99871) BashCMDExecutor]  -  io_access:       'SEQUENTIAL'
[(99871) BashCMDExecutor]  -  io_form:         'UNFORMATTED'
[(99871) BashCMDExecutor]  -  io_recl:         100
[(99871) BashCMDExecutor]  -  io_position:     ' '
[(99871) BashCMDExecutor]  -  io_action:       'WRITE'
[(99871) BashCMDExecutor]  -  io_delim:        ' '
[(99871) BashCMDExecutor]  -  io_pad:          ' '
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  ###########################
[(99871) BashCMDExecutor]  -  #####  Printouts      #####
[(99871) BashCMDExecutor]  -  ###########################
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  print_all:     true         # Print all statements to err file
[(99871) BashCMDExecutor]  -  print_diag:    true         # Print diagnostics (CALL FIELD_STATS)
[(99871) BashCMDExecutor]  -  print_esmf:    false        # Print ESMF return signals
[(99871) BashCMDExecutor]  -  print_output:  false         # Print info on records written into history/restart file
[(99871) BashCMDExecutor]  -  print_timing:  true         # Print timing info (CPU time)
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  ##################################
[(99871) BashCMDExecutor]  -  ####  Nesting Specifications  ####
[(99871) BashCMDExecutor]  -  ##################################
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  num_domains_total: 1         # The total number of domains in this run (only needed in domain #1's configure file)
[(99871) BashCMDExecutor]  -  my_domain_id: 1              # The ID number of this domain (uppermost domain must have ID=1)
[(99871) BashCMDExecutor]  -  my_parent_id: -999           # The ID number of this domain's parent
[(99871) BashCMDExecutor]  -  n_children:  0               # How many child domains does this domain have?
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  my_domain_moves:  false      # Does my domain move?
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  nest_mode:  1-way            # 1-way or 2-way interaction
[(99871) BashCMDExecutor]  -  generation:  1               # For 2-way only, which generation is this domain in?
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  ### If this domain is not a nest then the remaining variables
[(99871) BashCMDExecutor]  -  ### in 'Nesting Specifications' are ignored.
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  i_parent_start:  175         # Nest southwest corner at this parent I
[(99871) BashCMDExecutor]  -  j_parent_start:  127         # Nest southwest corner at this parent J
[(99871) BashCMDExecutor]  -  parent_child_space_ratio: 3  # Ratio of parent grid increment to nests's
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  input_ready:  false          # Nest has pre-generated input file
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  #######################
[(99871) BashCMDExecutor]  -  ####  Timing Info  ####
[(99871) BashCMDExecutor]  -  #######################
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  nhours_clocktime:   1        # Frequency in hours between clocktime diagnostic prints.
[(99871) BashCMDExecutor]  -  npe_print:          1        # The MPI task that will provide the clocktimes.
[(99871) BashCMDExecutor]  -  
[(99871) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(99871) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(99871) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(102361) UmoModel]  -  
[(102361) UmoModel]  -  ========= BEGIN ============================================
[(102361) UmoModel]  -  
[(102361) UmoModel]  -  --- Executing nmmb_esmf.x UMO-NMMb-DUST-RRTM model ---------
[(102361)    API]  -  Creating task from method nems in mpi.MPI
[(102361)    API]  -  There are 3 parameters
[(102361)    API]  -    Parameter 1 has type FILE_T
[(102362)    API]  -    Parameter 2 has type FILE_T
[(102362)    API]  -    Parameter 3 has type OBJECT_T
[(102362)    API]  -  Getting object with hash code -2147483594
[(406668)    API]  -  Object obtained 0
[(406668) UmoModel]  -  Execution of mpirun NEMS ended with status 0
[(406668)    API]  -  Getting object with hash code -2147483594
[(406669) UmoModel]  -  
[(406669) UmoModel]  -  --- Finished Executing nmmb_esmf.x UMO-NMMb-DUST-RRTM model 
[(408102) UmoModel]  -  Cannot copy /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/CURRENT_RUN/nmm_rrtm.out file to /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/2014090100/nmm_rrtm.out
[(408114) UmoModel]  -  Cannot copy /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/PREPROC/output/boundary_ecmwf.nc file to /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/2014090100/boundary_ecmwf.nc
[(408179) UmoModel]  -  
[(408179) UmoModel]  -  ========= END ==============================================
[(408179) UmoModel]  -  UMO Model process finished
[(408179)   Post]  -  Postproc_carbono process for DAY: 20140901
[(408184) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/QQQ/24/ -e s/SSS/00/ -e s/TTT/3/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/POSTPROC/new_postall.f.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/POSTPROC/new_postall.f
[(408187) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(408203) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408203) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(408203) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408203) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(408204) BashCMDExecutor]  -  ! *** V.IMP...READ the "readme_postall_files" (text file) for imp info on this program.
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! *** Only the 'kount' variable needs to be changed to read the desired nmm_b_history.ttt files ***
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! IN  Sigma units....64 layers...with GLAT/GLON, LEV, Time computed here..Original program postall.f ...this one created by Malcolm to write to netcdf
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! To compile in MN:  xlf postall_global.f -L/gpfs/apps/NETCDF/64/lib -lnetcdf -lm -I/gpfs/apps/NETCDF/64/include -o postall_global.exe
[(408204) BashCMDExecutor]  -  ! To compile in VAPOR:  xlf postall_global_sigm_v200812_tracers.f -L/usrx/local/netcdf.3.5.0/lib -lnetcdf -lm -I/usrx/local/netcdf.3.5.0/include/ -o postall_global.exe
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! Modificado por Sara Basart hasta el 4 de Junio de 2012
[(408204) BashCMDExecutor]  -  ! Modificado por Francesc Martinez desde el 4 de Junio de 2012
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        PROGRAM postall_netcdf_pressure
[(408204) BashCMDExecutor]  -  !     Sueño irrealizable:
[(408204) BashCMDExecutor]  -  !      implicit none
[(408204) BashCMDExecutor]  -        INCLUDE 'netcdf.inc'
[(408204) BashCMDExecutor]  -        include './lmimjm.inc'
[(408204) BashCMDExecutor]  -  !      INCLUDE '/usrx/local/netcdf.3.5.0/include/netcdf.inc'
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !        call do_extraction(289, 211, 24)
[(408204) BashCMDExecutor]  -  !      end
[(408204) BashCMDExecutor]  -  !
[(408204) BashCMDExecutor]  -  !      subroutine do_extraction(im, jm, lm)
[(408204) BashCMDExecutor]  -  !      integer im, jm, lm
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !----------For Netcdf File Declaration of Dimensions-------------------------
[(408204) BashCMDExecutor]  -  !Declaracion de variables:
[(408204) BashCMDExecutor]  -        integer LATDIM_ID, LONGDIM_ID, LEVDIM_ID, TIMDIM_ID  !,
[(408204) BashCMDExecutor]  -  !     &        NWETSDIM_ID, NAERODIM_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !--------Declaration of Coordinate variables-------------------------
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer LATVAR_ID, LONGVAR_ID, LEVVAR_ID, TIMVAR_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! S'ha de reordenar la definicio de variables_ID en funcio del tipus d'output
[(408204) BashCMDExecutor]  -  ! Ara mateix es una mica caos....
[(408204) BashCMDExecutor]  -  !----------4-Dimensional Netcdf variables with (im,jm,lsm,time)-------------
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer HSL_ID, TSL_ID, QSL_ID, USL_ID, VSL_ID
[(408204) BashCMDExecutor]  -       &        CWSL_ID, Q2SL_ID, WSL_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer DUST_CONC_ID, T2_ID, MAXT2_ID, MINT2_ID, PS_ID, 
[(408204) BashCMDExecutor]  -       &        PSHLTR_ID, DUST_SCONC_ID, DUST_SCONC02_ID,
[(408204) BashCMDExecutor]  -       &        DUST_SCONC10_ID, DUST_PM10_SCONC10_ID, 
[(408204) BashCMDExecutor]  -       &        DUST_PM25_SCONC10_ID, DUST_EXT_550_SFC_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !----------4-Dimensional Netcdf variables with (nwets,im,jm,time)-----------
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer TG_ID, WG_ID, AERO_ACPREC_ID, AERO_CUPREC_ID,
[(408204) BashCMDExecutor]  -       &        DUST_WETDEP_ACPREC_ID, DUST_WETDEP_CUPREC_ID,
[(408204) BashCMDExecutor]  -       &        AERO_CUPREC_TOT_ID, AERO_DEPDRY_ID, AERO_DLOAD_ID,
[(408204) BashCMDExecutor]  -       &        DUST_EXT_550_ID, DUST_DRYDEP_ID, DUST_LOAD_ID,
[(408204) BashCMDExecutor]  -       &        EMI_DUST_ID, DUST_EMI_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !----------3-Dimensional Netcdf variables (im,jm,time)---------------------
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer SLP_ID, FIS_ID, PD_ID, THS_ID, QS_ID, PINTS_ID,
[(408204) BashCMDExecutor]  -       &        SNO_ID, ROF_ID, USTAR_ID, AKHS_ID, AKMS_ID,
[(408204) BashCMDExecutor]  -       &        ACPREC_ID, CUPREC_ID, U10_ID, V10_ID, TH10_ID,
[(408204) BashCMDExecutor]  -       &        Q10_ID, TH02_ID, Q02_ID, SLWD_ID, SSW_ID, THZ0_ID,
[(408204) BashCMDExecutor]  -       &        QZ0_ID, Z0_ID, SM_ID, SICE_ID, SST_ID, INSOIL_ID,
[(408204) BashCMDExecutor]  -       &        INVEG_ID, VEGFRC_ID, ALBEDO_ID, EPSR_ID, ACFRCV_ID,
[(408204) BashCMDExecutor]  -       &        ACFRST_ID, ALBASE, ALWIN_ID, ALWOUT_ID, ALWTOA_ID,
[(408204) BashCMDExecutor]  -       &        ASWIN_ID, ASWOUT_ID, ASWTOA_ID, BGROFF_ID, CFRACH_ID,
[(408204) BashCMDExecutor]  -       &        CFRACL_ID, CFRACM_ID, CLDEFI_ID, CMC_ID, CNVBOT_ID,
[(408204) BashCMDExecutor]  -       &        CNVTOP_ID, CPRATE_ID, CUPPT_ID, CZEN_ID, CZMEAN_ID,
[(408204) BashCMDExecutor]  -       &        MXSNAL_ID, RADOT_ID, RLWIN_ID, RLWTOA_ID, RSWIN_ID,
[(408204) BashCMDExecutor]  -       &        RSWINC_ID, RSWOUT_ID, SFCLHX_ID, SFCSHX_ID, SIGT4_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! GLAT/GLON are the geographic lat/lon where GLAT(i)=sbd+(i-1)*dphd & GLON(i)=wbd+(i-1)*dlmd, here 'i' is the array index. For lat, i=1 to jm ; for lon, i=1 to im
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        real    GLAT(im,jm), GLON(im,jm), LAT(im,jm), LON(im,jm),
[(408204) BashCMDExecutor]  -       &        VLAT(im,jm), VLON(im,jm), south_north(jm), west_east(im)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer GLATVAR_ID,GLONVAR_ID, PDTOP_ID
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer NCID, STATUS, DIMID_1(4), DIMID_2(3), DIMID_3(4), 
[(408204) BashCMDExecutor]  -       &        DIMID_4(1), DIMID_5(1), DIMID_6(1), DIMID_7(1),
[(408204) BashCMDExecutor]  -       &        DIMID_8(2), DIMID_9(2), DIMID_10(4)
[(408204) BashCMDExecutor]  -        integer time_step
[(408204) BashCMDExecutor]  -        parameter (kps=8)
[(408204) BashCMDExecutor]  -        character varname
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        CHARACTER*28 global_title
[(408204) BashCMDExecutor]  -        CHARACTER*9  global_title2
[(408204) BashCMDExecutor]  -        CHARACTER*19 global_title1
[(408204) BashCMDExecutor]  -        CHARACTER*2  gt1, gt2, gt4, gt5
[(408204) BashCMDExecutor]  -        CHARACTER*1  gt6, gt7
[(408204) BashCMDExecutor]  -        CHARACTER*4  gt3
[(408204) BashCMDExecutor]  -        CHARACTER*250 file_name_out,temp_path
[(408204) BashCMDExecutor]  -        CHARACTER*250 path_in, path_out, binary_name, output_name
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer start(4), count(4)
[(408204) BashCMDExecutor]  -        integer bin, b_im, b_jm, b_lm
[(408204) BashCMDExecutor]  -        integer start_3(3),  count_3(3),  start_w(4),    count_w(4),
[(408204) BashCMDExecutor]  -       &        start_sl(4), count_sl(4), start_aero(4), count_aero(4)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        integer dust_load_bin_ids(kps), dust_wetdep_acprec_bin_ids(kps),
[(408204) BashCMDExecutor]  -       &        dust_wetdep_cuprec_bin_ids(kps), dust_drydep_bin_ids(kps),
[(408204) BashCMDExecutor]  -       &        dust_emi_bin_ids(kps), dust_sconc_bin_ids(kps),
[(408204) BashCMDExecutor]  -       &        dust_aod550_bin_ids(kps)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! attribute vectors
[(408204) BashCMDExecutor]  -        real    fill_value
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  ! ******** END OF NETCDF VARIABLES/DIMENSIONS DECLARATION *****************
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !     ******************************************************************
[(408204) BashCMDExecutor]  -  !     *                                                                *
[(408204) BashCMDExecutor]  -  !     *  this is the program for writing in hybrid system              *
[(408204) BashCMDExecutor]  -  !     *                                                                *
[(408204) BashCMDExecutor]  -  !     *  programers - z. janjic, d. jovic, s. nickovic                 *
[(408204) BashCMDExecutor]  -  !     *  february 1981 - march 1998                                    *
[(408204) BashCMDExecutor]  -  !     *                                                                *
[(408204) BashCMDExecutor]  -  !     ******************************************************************
[(408204) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408204) BashCMDExecutor]  -        parameter (lsm=17)
[(408204) BashCMDExecutor]  -        parameter (iwest=0, ieast=0, jnorth=0, jsouth=0)
[(408204) BashCMDExecutor]  -        parameter (imb=im-iwest-ieast, jmb=jm-jnorth-jsouth)
[(408204) BashCMDExecutor]  -        integer   dims_3d(3), dims_w(3), dims_bin(3)
[(408204) BashCMDExecutor]  -        integer   pres(lsm), time_value(1)           ! LEV (lm) is defined here as 1 to 64
[(408204) BashCMDExecutor]  -        integer   rev_pres(lsm-2)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408204) BashCMDExecutor]  -        parameter ( nsmud = 10, lp2 = lm + 2)
[(408204) BashCMDExecutor]  -        parameter ( r = 287.04, cp = 1004.6, g = 9.8, dtdz = 0.0063,
[(408204) BashCMDExecutor]  -       &          eps = 1.e-5, gor = g / r,
[(408204) BashCMDExecutor]  -  !     & dtdz=0.008,eps=1.e-5,gor=g/r
[(408204) BashCMDExecutor]  -       &          rgdt = dtdz * r / g, rdtdz = 1. / dtdz )
[(408204) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408204) BashCMDExecutor]  -        logical   run,global
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension idat(3),    dsg1(lm),   dsg2(lm),  sgml1(lm), sgml2(lm),
[(408204) BashCMDExecutor]  -       &          sgm(lm+1),  sg1(lm+1),  sg2(lm+1),  ztt(lm+1),
[(408204) BashCMDExecutor]  -       &          tcol(lm+1), qcol(lm+1), cwcl(lm+1), dcol(lm+1),
[(408204) BashCMDExecutor]  -       &          zth(lm+2),  hcol(lm+2), pcol(lm+2), q2cl(lm+2)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension ztw(lm+1),  ucol(lm+1), vcol(lm+1), wcol(lm+1),
[(408204) BashCMDExecutor]  -       &          dwcl(lm+1), rcol(lm+1), cldfracol(lm+1), rlwttcol(lm+1),
[(408204) BashCMDExecutor]  -       &          rswttcol(lm+1), f_icecol(lm+1), f_rimefcol(lm+1),
[(408204) BashCMDExecutor]  -       &          f_raincol(lm+1)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension dustcol(lm+1), y2(lm+2),  phld(lm+2),  qhld(lm+2),
[(408204) BashCMDExecutor]  -       &          ppsl(lsm),   alsl(lsm),   ztsl(lsm),   ovrlx (lsm),
[(408204) BashCMDExecutor]  -       &          tcolsl(lsm), qcolsl(lsm), cwclsl(lsm), dcolsl(lsm),
[(408204) BashCMDExecutor]  -       &          hcolsl(lsm), pcolsl(lsm), q2clsl(lsm)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension ucolsl(lsm), vcolsl(lsm), wcolsl(lsm), rcolsl(lsm),
[(408204) BashCMDExecutor]  -       &          dwclsl(lsm), cldfracolsl(lsm), rlwttcolsl(lsm),
[(408204) BashCMDExecutor]  -       &          rswttcolsl(lsm), f_icecolsl(lsm), f_rimefcolsl(lsm),
[(408204) BashCMDExecutor]  -       &          f_raincolsl(lsm)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension dustcolsl(lsm), hcol5(5), pcol5(5), y25(5), slp(im,jm)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension fis(im,jm), pd(im,jm),    pints(im,jm), tmask(im,jm),
[(408204) BashCMDExecutor]  -       &          hs(im,jm),  rtsl(im,jm),  tsll(im,jm),  osll(im,jm),
[(408204) BashCMDExecutor]  -       &          qsll(im,jm), cwll(im,jm), dvll(im,jm),  hsll(im,jm),
[(408204) BashCMDExecutor]  -       &          psll(im,jm), q2ll(im,jm), dwll(im,jm),  wsll(im,jm),
[(408204) BashCMDExecutor]  -       &          rsll(im,jm), dustsll(im,jm), qext350(8), qext450(8),
[(408204) BashCMDExecutor]  -       &          qext500(8), qext650(8), qext800(8), qext900(8), 
[(408204) BashCMDExecutor]  -       &          qext550(8), r_dust_e(8), rho_dust(8)
[(408204) BashCMDExecutor]  -  
[(408204) BashCMDExecutor]  -        dimension t(im,jm,lm), q(im,jm,lm), cw(im,jm,lm), q2(im,jm,lm),
[(408204) BashCMDExecutor]  -       &          u(im,jm,lm), v(im,jm,lm), xlen_mix(im,jm,lm),
[(408204) BashCMDExecutor]  -       &          dwdt(im,jm,lm), w(im,jm,lm), zet(im,jm,lm+1),
[(408204) BashCMDExecutor]  -       &          pint(im,jm,lm+1), rrw(im,jm,lm), tracers(im,jm,lm),
[(408204) BashCMDExecutor]  -       &          dust(im,jm,lm), dust_bins(im,jm,kps), ths(im,jm),
[(408204) BashCMDExecutor]  -       &          qs(im,jm), sh20(im,jm,nwets), wg(nwets,im,jm), 
[(408204) BashCMDExecutor]  -       &          wgt(im,jm,nwets), sno(im,jm), rof(im,jm), ustar(im,jm),
[(408204) BashCMDExecutor]  -       &          akhs(im,jm), akms(im,jm), acprec(im,jm), cuprec(im,jm),
[(408205) BashCMDExecutor]  -       &          acsnom(im,jm), acsnow(im,jm), u10(im,jm), v10(im,jm),
[(408205) BashCMDExecutor]  -       &          u10_h(im,jm), v10_h(im,jm), uz0(im,jm), vz0(im,jm),
[(408205) BashCMDExecutor]  -       &          th10(im,jm), q10(im,jm), qsh(im,jm),th02(im,jm),
[(408205) BashCMDExecutor]  -       &          q02(im,jm), twbs(im,jm), qwbs(im,jm), slwd(im,jm),
[(408205) BashCMDExecutor]  -       &          ssw(im,jm), dust_aod550_bin(im,jm,kps), thz0(im,jm),
[(408205) BashCMDExecutor]  -       &          qz0(im,jm), z0(im,jm), dust_aod550(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_aod350(im,jm), dust_aod450(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_aod500(im,jm), dust_aod650(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_aod800(im,jm), dust_aod900(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_ext550_sfc(im,jm), t2(im,jm), maxt2(im,jm),
[(408205) BashCMDExecutor]  -       &          mint2(im,jm), ps(im,jm), pshltr(im,jm), 
[(408205) BashCMDExecutor]  -       &          dust_sconc(im,jm), si(im,jm), smstav(im,jm),
[(408205) BashCMDExecutor]  -       &          smstot(im,jm), snopcx(im,jm), soiltb(im,jm), sr(im,jm),
[(408205) BashCMDExecutor]  -       &          subshx(im,jm), st_2d(im,jm), sm(im,jm), sice(im,jm),
[(408205) BashCMDExecutor]  -       &          sst(im,jm), insoil(im,jm), inveg(im,jm), vegfrc(im,jm),
[(408205) BashCMDExecutor]  -       &          tg(nwets,im,jm), tgt(im,jm,nwets), albedo(im,jm),
[(408205) BashCMDExecutor]  -       &          epsr(im,jm), grnflx(im,jm), hbots(im,jm), hbotd(im,jm),
[(408205) BashCMDExecutor]  -       &          htops(im,jm), htopd(im,jm), aero_acprec(8,im,jm),
[(408205) BashCMDExecutor]  -       &          aero_cuprec(8,im,jm), dust_wetdep(im,jm),
[(408205) BashCMDExecutor]  -       &          aero_cuprec_tot(im,jm), aero_depdry(8,im,jm),
[(408205) BashCMDExecutor]  -       &          dload(8,im,jm), dust_drydep(im,jm), dust_load(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_ext(im,jm,lm), emiss_dust(8,im,jm), 
[(408205) BashCMDExecutor]  -       &          dust_emi(im,jm), dust02(8,im,jm), dust_sconc02(im,jm),
[(408205) BashCMDExecutor]  -       &          dust10(8,im,jm), dust_sconc10(im,jm),
[(408205) BashCMDExecutor]  -       &          dust_pm10_sconc10(im,jm), dust_pm25_sconc10(im,jm),
[(408205) BashCMDExecutor]  -       &          acfrcv(im,jm), acfrst(im,jm), albase(im,jm), 
[(408205) BashCMDExecutor]  -       &          alwin(im,jm), alwout(im,jm), alwtoa(im,jm),
[(408205) BashCMDExecutor]  -       &          aswin(im,jm), aswout(im,jm), aswtoa(im,jm),
[(408205) BashCMDExecutor]  -       &          bgroff(im,jm), cfrach(im,jm), cfracl(im,jm),
[(408205) BashCMDExecutor]  -       &          cfracm(im,jm), cldefi(im,jm), cmc(im,jm), cnvbot(im,jm),
[(408205) BashCMDExecutor]  -       &          cnvtop(im,jm), cprate(im,jm), cuppt(im,jm), czen(im,jm),
[(408205) BashCMDExecutor]  -       &          czmean(im,jm), mxsnal(im,jm), radot(im,jm),
[(408205) BashCMDExecutor]  -       &          rlwin(im,jm), rlwtoa(im,jm), rswin(im,jm),
[(408205) BashCMDExecutor]  -       &          rswinc(im,jm), rswout(im,jm), sfcevp(im,jm),
[(408205) BashCMDExecutor]  -       &          sfcexc(im,jm), sfclhx(im,jm), sfcshx(im,jm),
[(408205) BashCMDExecutor]  -       &          sigt4(im,jm), pblh(im,jm), potevp(im,jm), prec(im,jm),
[(408205) BashCMDExecutor]  -       &          exch_h(im,jm,lm), cldfra(im,jm,lm), rlwtt(im,jm,lm),
[(408205) BashCMDExecutor]  -       &          rswtt(im,jm,lm), f_ice(im,jm,lm), f_rimef(im,jm,lm),
[(408205) BashCMDExecutor]  -       &          f_rain(im,jm,lm), omgalf(im,jm,lm), tcucn(im,jm,lm),
[(408205) BashCMDExecutor]  -       &          train(im,jm,lm)
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -        dimension tsl(im,jm,lsm), osl(im,jm,lsm), qsl(im,jm,lsm), 
[(408205) BashCMDExecutor]  -       &          cwsl(im,jm,lsm), hsl(im,jm,lsm), psl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          q2sl(im,jm,lsm), usl(im,jm,lsm), vsl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          usl_h(im,jm,lsm), vsl_h(im,jm,lsm), wsl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          dwsl(im,jm,lsm), rsl(im,jm,lsm), cldfrasl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          rlwttsl(im,jm,lsm), rswttsl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          f_icesl(im,jm,lsm), f_rimefsl(im,jm,lsm),
[(408205) BashCMDExecutor]  -       &          f_rainsl(im,jm,lsm), dustsl(im,jm,lsm)
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -  !---------------------------------------------
[(408205) BashCMDExecutor]  -        character*75 fname,vrblfile,fname_dust
[(408205) BashCMDExecutor]  -        data fname/'                                                     
[(408205) BashCMDExecutor]  -       &          '/
[(408205) BashCMDExecutor]  -        data fname_dust/'
[(408205) BashCMDExecutor]  -       &               '/
[(408205) BashCMDExecutor]  -        data vrblfile/'                                                  
[(408205) BashCMDExecutor]  -       &             '/
[(408205) BashCMDExecutor]  -        real pdtop, dummy_real
[(408205) BashCMDExecutor]  -        data y2/lp2*0./
[(408205) BashCMDExecutor]  -  !----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -        data ppsl/ 10000., 20000., 25000., 30000., 40000.,
[(408205) BashCMDExecutor]  -       &           50000., 60000., 70000., 80000., 85000.,
[(408205) BashCMDExecutor]  -       &           90000., 92500., 95000., 97500., 100000., 
[(408205) BashCMDExecutor]  -       &           102500., 105000./
[(408205) BashCMDExecutor]  -  !CPEREZ3     & ppsl/10000.,20000.,25000.,30000.,35000.,40000.,45000.
[(408205) BashCMDExecutor]  -  !CPEREZ3     &     ,50000.,52500.,55000.,57500.,60000.,62500.,65000.,67500.
[(408205) BashCMDExecutor]  -  !CPEREZ3     &     ,70000.,72500.,75000.,77500.,80000.,82500.,85000.,87500.
[(408205) BashCMDExecutor]  -  !CPEREZ3     &     ,90000.,92500.,95000.,97500.,100000.,102500.,105000./
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -        data ovrlx/lsm*0.190/
[(408205) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -  !!!CPEREZ4
[(408205) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -        data qext350/3.065,3.759,2.429,2.347,2.223,2.174,2.119,2.078/
[(408205) BashCMDExecutor]  -        data qext450/2.062,3.881,2.599,2.494,2.315,2.199,2.137,2.092/
[(408205) BashCMDExecutor]  -        data qext500/1.697,3.647,2.894,2.495,2.268,2.210,2.156,2.100/
[(408205) BashCMDExecutor]  -        data qext550/1.373,3.303,3.245,2.413,2.262,2.260,2.162,2.108/ !carlos logn 
[(408205) BashCMDExecutor]  -        data qext650/0.834,2.675,3.738,2.212,2.482,2.224,2.170,2.118/
[(408205) BashCMDExecutor]  -        data qext800/0.445,1.800,3.835,2.568,2.471,2.352,2.184,2.129/
[(408205) BashCMDExecutor]  -        data qext900/0.308,1.401,3.597,3.077,2.373,2.239,2.263,2.137/
[(408205) BashCMDExecutor]  -        data r_dust_e/0.15E-6,0.25E-6,0.45E-6,0.78E-6,1.32E-6,2.24E-6
[(408205) BashCMDExecutor]  -       &       ,3.80E-6,7.11E-6/ !dust volume radius (microns)
[(408205) BashCMDExecutor]  -        data rho_dust/2500.,2500.,2500.,2500.,2650.,2650.,2650.,2650./
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -  ! Primero declaramos las opciones de configuracion:
[(408205) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408205) BashCMDExecutor]  -        integer reverse_presure
[(408205) BashCMDExecutor]  -        ! Forecast domain configuration variables:
[(408205) BashCMDExecutor]  -        character(4) CFG_IYEAR, CFG_IMONTH, CFG_IDAY, CFG_IHOUR,
[(408205) BashCMDExecutor]  -       &        CFG_IMINUTE, CFG_SECOND, CFG_NF_HOURS,
[(408205) BashCMDExecutor]  -       &        CFG_NF_MINUTES, CFG_NF_SECONDS, CFG_IM, CFG_JM,
[(408205) BashCMDExecutor]  -       &        CFG_LM, CFG_IHRST, CFG_IDAT, 
[(408205) BashCMDExecutor]  -       &        CFG_MP_PHYSICS, CFG_SF_SURFACE_PHYSICS, CFG_PT,
[(408205) BashCMDExecutor]  -       &        CFG_TLMOD, CFG_TPH0D, CFG_TSTART, CFG_DPHD, CFG_DLMD,
[(408205) BashCMDExecutor]  -       &        CFG_DHX, CFG_GLOBAL, CFG_RUN, CFG_ADIABATIC, CFG_INSOIL,
[(408205) BashCMDExecutor]  -       &        CFG_INVEG, CFG_GLAT, CFG_GLON, CFG_VLAT, CFG_VLON,
[(408205) BashCMDExecutor]  -       &        CFG_VEGFRC
[(408205) BashCMDExecutor]  -        character(4) CFG_NPHS, CFG_NHEAT, CFG_NCLOUD, CFG_NPREC,
[(408205) BashCMDExecutor]  -       &        CFG_NRDLW, CFG_NRDSW,CFG_NSRFC, CFG_DT, CFG_DYH, CFG_PDTOP
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -        ! Mas unassigned variables:
[(408205) BashCMDExecutor]  -        character(4) CFG_SG1, CFG_SG2, CFG_DSG1, CFG_DSG2, CFG_SGML1,
[(408205) BashCMDExecutor]  -       &        CFG_SGML2, CFG_APHTIM, CFG_ARDLW, CFG_ARDSW, CFG_ASRFC,
[(408205) BashCMDExecutor]  -       &        CFG_AVCNVC, CFG_AVRAIN, CFG_SLDPTH,
[(408205) BashCMDExecutor]  -       &        CFG_NCFRCV, CFG_NCFRST
[(408205) BashCMDExecutor]  -  
[(408205) BashCMDExecutor]  -        ! Primeras variables meteo:
[(408205) BashCMDExecutor]  -        character(4) CFG_FIS, CFG_PD, CFG_W, CFG_DWDT, CFG_PINT, 
[(408205) BashCMDExecutor]  -       &        CFG_PS, CFG_OMGALF, CFG_RRW, CFG_ACFRCV, CFG_ACFRST,
[(408205) BashCMDExecutor]  -       &        CFG_ACPREC, CFG_ACSNOM, CFG_ACSNOW, CFG_AKHS, CFG_AKMS, 
[(408205) BashCMDExecutor]  -       &        CFG_ALBASE, CFG_ALBEDO, CFG_ALWIN, CFG_ALWOUT,
[(408205) BashCMDExecutor]  -       &        CFG_ALWTOA, CFG_ASWIN, CFG_ASWOUT, CFG_ASWTOA, CFG_BGROFF,
[(408206) BashCMDExecutor]  -       &        CFG_CFRACH, CFG_CFRACL, CFG_CFRACM, CFG_CLDEFI, CFG_CMC,
[(408206) BashCMDExecutor]  -       &        CFG_CNVBOT, CFG_CNVTOP, CFG_CPRATE,
[(408206) BashCMDExecutor]  -       &        CFG_CUPPT, CFG_CUPREC, CFG_CZEN, CFG_CZMEAN, CFG_EPSR, 
[(408206) BashCMDExecutor]  -       &        CFG_GRNFLX, CFG_HBOTD, CFG_HBOTS, CFG_HTOPD, CFG_HTOPS, 
[(408206) BashCMDExecutor]  -       &        CFG_MXSNAL, CFG_PBLH, CFG_POTEVP, CFG_PREC, CFG_PSHLTR,
[(408206) BashCMDExecutor]  -       &        CFG_Q10, CFG_QSH, CFG_Q02, CFG_QWBS, CFG_QZ0,  
[(408206) BashCMDExecutor]  -       &        CFG_RADOT, CFG_RLWIN, CFG_RLWTOA, CFG_RSWIN, CFG_RSWINC,
[(408206) BashCMDExecutor]  -       &        CFG_RSWOUT, CFG_SFCEVP, CFG_SFCEXC, CFG_SFCLHX,
[(408206) BashCMDExecutor]  -       &        CFG_SFCSHX, CFG_SI, CFG_SICE, CFG_SIGT4, CFG_SM,
[(408206) BashCMDExecutor]  -       &        CFG_SMSTAV, CFG_SMSTOT, CFG_SNO, CFG_SNOPCX,
[(408206) BashCMDExecutor]  -       &        CFG_SOILTB, CFG_SR, CFG_ROF, CFG_SST, CFG_SUBSHX,
[(408206) BashCMDExecutor]  -       &        CFG_ST_2D, CFG_TH10, CFG_THS, CFG_THZ0, CFG_TH02,
[(408206) BashCMDExecutor]  -       &        CFG_TWBS, CFG_U10, CFG_USTAR, CFG_UZ0, CFG_V10,  
[(408206) BashCMDExecutor]  -       &        CFG_VZ0, CFG_Z0, 
[(408206) BashCMDExecutor]  -       &        CFG_T2, CFG_MAXT2, CFG_MINT2, CFG_CLDFRA, CFG_CW,
[(408206) BashCMDExecutor]  -       &        CFG_EXCH_H, CFG_Q, CFG_Q2, CFG_RLWTT, CFG_RSWTT,
[(408206) BashCMDExecutor]  -       &        CFG_T, CFG_TCUCN, CFG_TRAIN, CFG_U, CFG_V,
[(408206) BashCMDExecutor]  -       &        CFG_XLEN_MIX, CFG_F_ICE, CFG_F_RIMEF, CFG_F_RAIN, 
[(408206) BashCMDExecutor]  -       &        CFG_SH20, CFG_WGT, CFG_TGT
[(408206) BashCMDExecutor]  -        ! Variables AERO:
[(408206) BashCMDExecutor]  -        character(4) CFG_AERO_ACPREC, CFG_AERO_CUPREC, CFG_AERO_DEPDRY,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_EXT_550, CFG_AERO_DLOAD, CFG_AERO_EMI_DUST,
[(408206) BashCMDExecutor]  -       &        CFG_AERO_DUST02, CFG_AERO_DUST10, CFG_AERO_TRACERS,
[(408206) BashCMDExecutor]  -       &        CFG_AERO_AOD_550
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        ! Variables de salida (aero):
[(408206) BashCMDExecutor]  -        character(4) CFG_HSL, CFG_SLP, CFG_QS,
[(408206) BashCMDExecutor]  -       &        CFG_SLWD, CFG_SSW, CFG_DUST_CONC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_LOAD_BIN, CFG_DUST_EMI_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_350, CFG_DUST_AOD_450, CFG_DUST_AOD_500,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_550, CFG_DUST_AOD_650, CFG_DUST_AOD_800,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_900, CFG_DUST_EXT_550_SFC, CFG_DUST_SCONC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_SCONC02, CFG_DUST_SCONC10, CFG_DUST_PM10_SCONC10,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_PM25_SCONC10,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_WETDEP_ACPREC, CFG_DUST_WETDEP_CUPREC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_DRYDEP, CFG_DUST_LOAD, CFG_DUST_EMI,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_DRYDEP_BIN, CFG_DUST_WETDEP_ACPREC_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_WETDEP_CUPREC_BIN, CFG_DUST_AOD_550_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_SCONC_BIN
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408206) BashCMDExecutor]  -  ! Aqui vamos a leer las opciones de configuracion:
[(408206) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408206) BashCMDExecutor]  -        namelist / FILENAMES / binary_name, output_name, path_in, path_out
[(408206) BashCMDExecutor]  -        namelist / CONFIG / reverse_presure, fill_value
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        namelist / F_CFG / CFG_IYEAR, CFG_IMONTH, CFG_IDAY, CFG_IHOUR,
[(408206) BashCMDExecutor]  -       &        CFG_IMINUTE, CFG_SECOND, CFG_NF_HOURS,
[(408206) BashCMDExecutor]  -       &        CFG_NF_MINUTES, CFG_NF_SECONDS, CFG_IM, CFG_JM,
[(408206) BashCMDExecutor]  -       &        CFG_LM, CFG_IHRST, CFG_IDAT,
[(408206) BashCMDExecutor]  -       &        CFG_MP_PHYSICS, CFG_SF_SURFACE_PHYSICS, CFG_PT,
[(408206) BashCMDExecutor]  -       &        CFG_TLMOD, CFG_TPH0D, CFG_TSTART, CFG_DPHD, CFG_DLMD,
[(408206) BashCMDExecutor]  -       &        CFG_DHX, CFG_GLOBAL, CFG_RUN, CFG_ADIABATIC, CFG_INSOIL,
[(408206) BashCMDExecutor]  -       &        CFG_INVEG, CFG_GLAT, CFG_GLON, CFG_VLAT, CFG_VLON,
[(408206) BashCMDExecutor]  -       &        CFG_VEGFRC
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        namelist / M_CFG/ CFG_NPHS, CFG_NHEAT, CFG_NCLOUD, CFG_NPREC,
[(408206) BashCMDExecutor]  -       &        CFG_NRDLW, CFG_NRDSW, CFG_NSRFC, CFG_DT, CFG_DYH,
[(408206) BashCMDExecutor]  -       &        CFG_PDTOP, CFG_SG1, CFG_SG2, CFG_DSG1, CFG_DSG2,
[(408206) BashCMDExecutor]  -       &        CFG_SGML1, CFG_SGML2, CFG_APHTIM, CFG_ARDLW, CFG_ARDSW,
[(408206) BashCMDExecutor]  -       &        CFG_ASRFC, CFG_AVCNVC, CFG_AVRAIN, CFG_SLDPTH,
[(408206) BashCMDExecutor]  -       &        CFG_NCFRCV, CFG_NCFRST, CFG_FIS, CFG_PD, CFG_W, CFG_DWDT,
[(408206) BashCMDExecutor]  -       &        CFG_PINT, CFG_PS, CFG_OMGALF, CFG_RRW, CFG_ACFRCV,
[(408206) BashCMDExecutor]  -       &        CFG_ACFRST, CFG_ACPREC, CFG_ACSNOM, CFG_ACSNOW, CFG_AKHS,
[(408206) BashCMDExecutor]  -       &        CFG_AKMS, CFG_ALBASE, CFG_ALBEDO, CFG_ALWIN, CFG_ALWOUT,
[(408206) BashCMDExecutor]  -       &        CFG_ALWTOA, CFG_ASWIN, CFG_ASWOUT, CFG_ASWTOA, CFG_BGROFF,
[(408206) BashCMDExecutor]  -       &        CFG_CFRACH, CFG_CFRACL, CFG_CFRACM, CFG_CLDEFI, CFG_CMC,
[(408206) BashCMDExecutor]  -       &        CFG_CNVBOT, CFG_CNVTOP, CFG_CPRATE,
[(408206) BashCMDExecutor]  -       &        CFG_CUPPT, CFG_CUPREC, CFG_CZEN, CFG_CZMEAN, CFG_EPSR, 
[(408206) BashCMDExecutor]  -       &        CFG_GRNFLX, CFG_HBOTD, CFG_HBOTS, CFG_HTOPD, CFG_HTOPS, 
[(408206) BashCMDExecutor]  -       &        CFG_MXSNAL, CFG_PBLH, CFG_POTEVP, CFG_PREC, CFG_PSHLTR,
[(408206) BashCMDExecutor]  -       &        CFG_Q10, CFG_QSH, CFG_Q02, CFG_QWBS, CFG_QZ0,  
[(408206) BashCMDExecutor]  -       &        CFG_RADOT, CFG_RLWIN, CFG_RLWTOA, CFG_RSWIN, CFG_RSWINC,
[(408206) BashCMDExecutor]  -       &        CFG_RSWOUT, CFG_SFCEVP, CFG_SFCEXC, CFG_SFCLHX,
[(408206) BashCMDExecutor]  -       &        CFG_SFCSHX, CFG_SI, CFG_SICE, CFG_SIGT4, CFG_SM,
[(408206) BashCMDExecutor]  -       &        CFG_SMSTAV, CFG_SMSTOT, CFG_SNO, CFG_SNOPCX,
[(408206) BashCMDExecutor]  -       &        CFG_SOILTB, CFG_SR, CFG_ROF, CFG_SST, CFG_SUBSHX,
[(408206) BashCMDExecutor]  -       &        CFG_ST_2D, CFG_TH10, CFG_THS, CFG_THZ0, CFG_TH02,
[(408206) BashCMDExecutor]  -       &        CFG_TWBS, CFG_U10, CFG_USTAR, CFG_UZ0, CFG_V10,  
[(408206) BashCMDExecutor]  -       &        CFG_VZ0, CFG_Z0, 
[(408206) BashCMDExecutor]  -       &        CFG_T2, CFG_MAXT2, CFG_MINT2, CFG_CLDFRA, CFG_CW,
[(408206) BashCMDExecutor]  -       &        CFG_EXCH_H, CFG_Q, CFG_Q2, CFG_RLWTT, CFG_RSWTT,
[(408206) BashCMDExecutor]  -       &        CFG_T, CFG_TCUCN, CFG_TRAIN, CFG_U, CFG_V,
[(408206) BashCMDExecutor]  -       &        CFG_XLEN_MIX, CFG_F_ICE, CFG_F_RIMEF, CFG_F_RAIN, 
[(408206) BashCMDExecutor]  -       &        CFG_SH20, CFG_WGT, CFG_TGT
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        namelist / A_CFG / CFG_DUST_AOD_550, CFG_AERO_ACPREC,
[(408206) BashCMDExecutor]  -       &        CFG_AERO_CUPREC, CFG_AERO_DEPDRY, CFG_DUST_EXT_550,
[(408206) BashCMDExecutor]  -       &        CFG_AERO_DLOAD, CFG_AERO_EMI_DUST, CFG_AERO_DUST02,
[(408206) BashCMDExecutor]  -       &        CFG_AERO_DUST10,CFG_AERO_TRACERS, CFG_HSL, CFG_SLP,
[(408206) BashCMDExecutor]  -       &        CFG_QS, CFG_SLWD, CFG_SSW, CFG_DUST_CONC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_350, CFG_DUST_AOD_450, CFG_DUST_AOD_500,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_550, CFG_DUST_AOD_650, CFG_DUST_AOD_800,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_AOD_900, CFG_DUST_EXT_550_SFC, CFG_DUST_SCONC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_SCONC02, CFG_DUST_SCONC10, CFG_DUST_PM10_SCONC10,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_PM25_SCONC10,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_WETDEP_ACPREC, CFG_DUST_WETDEP_CUPREC,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_DRYDEP, CFG_DUST_LOAD, CFG_DUST_EMI,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_LOAD_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_DRYDEP_BIN, CFG_DUST_WETDEP_ACPREC_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_WETDEP_CUPREC_BIN, CFG_DUST_AOD_550_BIN,
[(408206) BashCMDExecutor]  -       &        CFG_DUST_SCONC_BIN
[(408206) BashCMDExecutor]  -  !     &        CFG_DUST_LOAD_BIN, CFG_DUST_EMI_BIN,
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        open(8, FILE='namelist.newpost', STATUS='OLD')
[(408206) BashCMDExecutor]  -        read(8, FILENAMES)
[(408206) BashCMDExecutor]  -        read(8, CONFIG)
[(408206) BashCMDExecutor]  -        read(8, F_CFG)
[(408206) BashCMDExecutor]  -        read(8, M_CFG)
[(408206) BashCMDExecutor]  -        read(8, A_CFG)
[(408206) BashCMDExecutor]  -        print*,' '
[(408206) BashCMDExecutor]  -        print*,'*** This is writing in PRESSURE ****'
[(408206) BashCMDExecutor]  -        dims_3d = (/ im, jm, lm /)
[(408206) BashCMDExecutor]  -        dims_w = (/ im, jm, nwets /)
[(408206) BashCMDExecutor]  -        dims_bin = (/ kps, im, jm /)
[(408206) BashCMDExecutor]  -        time_step = 1
[(408206) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  !---------- Below block commented----------------------------------------
[(408206) BashCMDExecutor]  -  !zj      vrblfile='/meso/save/wx20zj/umo90/post807/vrbldata'
[(408206) BashCMDExecutor]  -  !zj      open(unit=5,file=vrblfile
[(408206) BashCMDExecutor]  -  !zj     &    ,status='old',access='sequential',form='formatted')
[(408206) BashCMDExecutor]  -  !
[(408206) BashCMDExecutor]  -  ! 1000 format('ihrstp=',i2,' kount=',i2,' ninc=',i2)
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  !      read (5,1000) ihrstp,kount,ninc
[(408206) BashCMDExecutor]  -  !      write(*,1000) ihrstp,kount,ninc
[(408206) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  ! Kount is the total number of hrs of forecast, presently in multiples of 3. For eg. to read only nmm_b_history.000 file, keep kount = 3 and 'do k=1,kount,3'... to read both nmm_b_history.000 & nmm_b_history.003 files, keep kount = 7 and 'do k=1,kount,3' because the do loop is in steps of 3 hrs..hence after reading nmm.000 file, the next file will be nmm.003 and so on...
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        kount=24+1    !! ** Change as reqd, here 6 means 3 files (every 3 hrs) will be created, i.e 000, 003 and 006 hrs
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -        kount_dust=kount-1
[(408206) BashCMDExecutor]  -        write(fname_dust,'(a,i3.3)')'nmm_b_dust.',kount_dust
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -  !!! MSPADA
[(408206) BashCMDExecutor]  -  ! k=1 and we obtain all the timesteps...
[(408206) BashCMDExecutor]  -  !      do k=16,kount,HIST        ! forecast every 3 hrs beginning with ihr= k-1
[(408206) BashCMDExecutor]  -        do k=(00+1),kount,3
[(408206) BashCMDExecutor]  -  
[(408206) BashCMDExecutor]  -          print*,'k forecast counter is ',k
[(408206) BashCMDExecutor]  -          call get_out_name( 'new_pout_pressure_at_t_', k, 
[(408206) BashCMDExecutor]  -       &                    file_name_out)
[(408206) BashCMDExecutor]  -          print*,'Output Netcdf file_name will be ',file_name_out
[(408206) BashCMDExecutor]  -          ihr = k-1           !! ** IMP ** this is necessary otherwise fname would be nmm_b_history.001 and not .000
[(408207) BashCMDExecutor]  -          print*,' '
[(408207) BashCMDExecutor]  -          print*,'** Hi, suphyb is to start processing forecast hour ',ihr
[(408207) BashCMDExecutor]  -          print'(a,i4.4,a)', TRIM(path_in)// '/' // TRIM(binary_name),ihr,TRIM('h_00m_00.00s')
[(408207) BashCMDExecutor]  -          write(fname,'(a,i4.4,a)')TRIM(path_in)//'/'//TRIM(binary_name),ihr,TRIM('h_00m_00.00s')
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -          print*,'fname is ',fname
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408207) BashCMDExecutor]  -  ! Lectura del archivo binario:
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        open(unit=31,file=fname
[(408207) BashCMDExecutor]  -       &    ,status='old',access='sequential',form='unformatted')
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -  !     &    ,convert='BIG_ENDIAN') ! convert='BIG_ENDIAN' added for diff architecture
[(408207) BashCMDExecutor]  -        ! Inicio de la lectura del archivo binario: variables del dominio.
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IYEAR, iyear)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IMONTH, imonth)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IDAY, iday)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IHOUR, ihour)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IMINUTE, iminute)
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_SECOND, second)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NF_HOURS, nf_hours)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NF_MINUTES, nf_minutes)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NF_SECONDS, nf_seconds)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IM, b_im)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_JM, b_jm)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_LM, b_lm)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_IHRST, ihrst)
[(408207) BashCMDExecutor]  -        read(31)!i_par_sta
[(408207) BashCMDExecutor]  -        read(31)!j_par_sta
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NPHS, nphs )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NCLOUD, ncloud )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NHEAT, nheat)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NPREC, nprec )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NRDLW, nrdlw )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NRDSW, nrdsw )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_NSRFC, nsrfc)
[(408207) BashCMDExecutor]  -        read(31)!avgmaxlen
[(408207) BashCMDExecutor]  -        read(31)!mdrminout
[(408207) BashCMDExecutor]  -        read(31)!mdrmaxout
[(408207) BashCMDExecutor]  -        read(31)!mdiminout
[(408207) BashCMDExecutor]  -        read(31)!mdimaxout
[(408207) BashCMDExecutor]  -        call verified_read1i(31, CFG_IDAT, idat, 3)
[(408207) BashCMDExecutor]  -        ! Realizamos algunos calculos derivados...:
[(408207) BashCMDExecutor]  -        isecond = int(second)
[(408207) BashCMDExecutor]  -        frac_second = nint((second-real(isecond))*1.e3)
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        !print*,'Definicion Forecast'
[(408207) BashCMDExecutor]  -        ! Ya hemos acabado con la lectura de las variables de dominio.
[(408207) BashCMDExecutor]  -        ! Ahora empezamos con las que no sabemos que son (4real)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_MP_PHYSICS, mp_physics)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_SF_SURFACE_PHYSICS,
[(408207) BashCMDExecutor]  -       &     sf_surface_physics)
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_DT, dt )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_DYH, dyh )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_PDTOP, pdtop )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_PT, dummy_real) !pt )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_TLMOD, dummy_real) !tlmod )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_TPH0D, dummy_real) !tph0d )
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_TSTART, tstart )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_DPHD, dummy_real) !dphd )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_DLMD, dummy_real) !dlmd )
[(408207) BashCMDExecutor]  -        call verified_read0r(31, CFG_DHX, dummy_real) !dhx )
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        print*,'Parametros leidos'
[(408207) BashCMDExecutor]  -        ! Son de 1Dimension:
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_SG1, sg1, lm+1)
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_SG2, sg2, lm+1)
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_DSG1, dsg1, lm)
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_DSG2, dsg2, lm)
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_SGML1, sgml1, lm)
[(408207) BashCMDExecutor]  -        call verified_read1r( 31, CFG_SGML2, sgml2, lm)
[(408207) BashCMDExecutor]  -        read(31)!sldpth
[(408207) BashCMDExecutor]  -        read(31)!massrout
[(408207) BashCMDExecutor]  -        read(31)!massiout
[(408207) BashCMDExecutor]  -        print*,'0r'
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_GLOBAL, global)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_RUN, run)
[(408207) BashCMDExecutor]  -        call verified_read0i(31, CFG_ADIABATIC, adiabatic)
[(408207) BashCMDExecutor]  -        read(31)!mprate
[(408207) BashCMDExecutor]  -        
[(408207) BashCMDExecutor]  -        !print*,'Vamos a empezar 2D'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_INSOIL, insoil, dims_3d)
[(408207) BashCMDExecutor]  -        print*,'Primer 2r leido'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_INVEG, inveg, dims_3d)
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        read(31)   !ncfrcv
[(408207) BashCMDExecutor]  -        read(31)   !ncfrst
[(408207) BashCMDExecutor]  -        print*,'FIS'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_FIS, fis, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_GLAT, glat, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_GLON, glon, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_PD, pd, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_VLAT, vlat, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_VLON, vlon, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ACFRCV, acfrcv, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ACFRST, acfrst, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ACPREC, acprec, dims_3d)
[(408207) BashCMDExecutor]  -  !
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ACSNOM, acsnom, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ACSNOW, acsnow, dims_3d)
[(408207) BashCMDExecutor]  -        print*,'AKHS'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_AKHS, akhs, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!akhsavg
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_AKMS, akms, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!akmsavg
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ALBASE, albase, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ALBEDO, albedo, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ALWIN, alwin, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ALWOUT, alwout, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ALWTOA, alwtoa, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ASWIN, aswin, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ASWOUT, aswout, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ASWTOA, aswtoa, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_BGROFF, bgroff, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CFRACH, cfrach, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CFRACL, cfracl, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CFRACM, cfracm, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CLDEFI, cldefi, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CMC, cmc, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CNVBOT, cnvbot, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CNVTOP, cnvtop, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CPRATE, cprate, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CUPPT, cuppt, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CUPREC, cuprec, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CZEN, czen, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_CZMEAN, czmean, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!DNVVELMAX
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_EPSR, epsr, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_GRNFLX, grnflx, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_HBOTD, hbotd, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_HBOTS, hbots, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_HTOPD, htopd, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_HTOPS, htops, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!mixht
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_MXSNAL, mxsnal, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_PBLH, pblh, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_POTEVP, potevp, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_PREC, prec, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!psfcavg
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_PSHLTR, pshltr, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!rh02max
[(408207) BashCMDExecutor]  -        read(31)!rh02min
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_MAXT2, maxt2, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_MINT2, mint2, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!t10
[(408207) BashCMDExecutor]  -        read(31)!t10avg
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        print*,'HBOTD'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_Q10, q10, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_QSH, qsh, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_Q02, q02, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_QWBS, qwbs, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_QZ0, qz0, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RADOT, radot, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!refdmax
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RLWIN, rlwin, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RLWTOA, rlwtoa, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RSWIN, rswin, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RSWINC, rswinc, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_RSWOUT, rswout, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SFCEVP, sfcevp, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SFCEXC, sfcexc, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SFCLHX, sfclhx, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SFCSHX, sfcshx, dims_3d)
[(408207) BashCMDExecutor]  -        print*,'SI'
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SI, si, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SICE, sice, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SIGT4, sigt4, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SM, sm, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SMSTAV, smstav, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SMSTOT, smstot, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SNO, sno, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!SNOAVG
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SNOPCX, snopcx, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SOILTB, soiltb, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SR, sr, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ROF, rof, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SST, sst, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_SUBSHX, subshx, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_ST_2D, st_2d, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_TH10, th10, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_THS, ths, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_THZ0, thz0, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_TH02, th02, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_TWBS, twbs, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!uphlmax
[(408207) BashCMDExecutor]  -        read(31)!upvvelmax
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_U10, u10, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!u10max
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_USTAR, ustar, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_UZ0, uz0, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_V10, v10, dims_3d)
[(408207) BashCMDExecutor]  -        read(31)!v10max
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_VEGFRC, vegfrc, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_VZ0, vz0, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read2r( 31, CFG_Z0, z0, dims_3d)
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        read(31)!potflx
[(408207) BashCMDExecutor]  -        read(31)!psfc
[(408207) BashCMDExecutor]  -        read(31)!tlmin
[(408207) BashCMDExecutor]  -        read(31)!tlmax
[(408207) BashCMDExecutor]  -        read(31)!lspa
[(408207) BashCMDExecutor]  -        read(31)!acutim
[(408207) BashCMDExecutor]  -        read(31)!aphtim
[(408207) BashCMDExecutor]  -        read(31)!ardlw
[(408207) BashCMDExecutor]  -        read(31)!ardsw
[(408207) BashCMDExecutor]  -        read(31)!asrfc
[(408207) BashCMDExecutor]  -        read(31)!avrain
[(408207) BashCMDExecutor]  -        read(31)!avcnvc
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_W, w, dims_3d) !W
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_W, w, dims_3d) !W_TOT
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_OMGALF, omgalf, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_RRW, rrw, dims_3d) !O3
[(408207) BashCMDExecutor]  -  
[(408207) BashCMDExecutor]  -  ! 3D (float/real):
[(408207) BashCMDExecutor]  -        print*,'CLDFRA'
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_CLDFRA, cldfra, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_CW, cw, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_EXCH_H, exch_h, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_Q, q, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_Q2, q2, dims_3d)
[(408207) BashCMDExecutor]  -        call verified_read3r( 31, CFG_RLWTT, rlwtt, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_RSWTT, rswtt, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_PINT, pint, (/ im, jm, lm+1 /))
[(408208) BashCMDExecutor]  -        ps = pint(:,:,lm+1)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_DWDT, dwdt, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_T, t, dims_3d)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_TCUCN, tcucn, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_TRAIN, train, dims_3d)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_U, u, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_V, v, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_XLEN_MIX, xlen_mix, dims_3d)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_F_ICE, f_ice, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_F_RIMEF, f_rimef, dims_3d)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_F_RAIN, f_rain, dims_3d)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_SH20, sh20, dims_w)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_WGT, wgt, dims_w)
[(408208) BashCMDExecutor]  -        call verified_read3r( 31, CFG_TGT, tgt, dims_w)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        print*,'AERO_ACPREC'
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_ACPREC, aero_acprec, dims_bin)
[(408208) BashCMDExecutor]  -        dust_wetdep = 0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_wetdep = dust_wetdep + aero_acprec(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_CUPREC, aero_cuprec, dims_bin)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_DEPDRY, aero_depdry, dims_bin)
[(408208) BashCMDExecutor]  -        dust_drydep = 0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_drydep = dust_drydep + aero_depdry(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        do l=1,6
[(408208) BashCMDExecutor]  -          if(l.eq.2)then !dust
[(408208) BashCMDExecutor]  -            read(31) dust_aod550
[(408208) BashCMDExecutor]  -          else 
[(408208) BashCMDExecutor]  -            read(31)!AERO_AOD
[(408208) BashCMDExecutor]  -          endif
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_DLOAD, dload, dims_bin)
[(408208) BashCMDExecutor]  -        dust_load = 0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_load = dust_load + dload(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        do j=1,jm
[(408208) BashCMDExecutor]  -          do i=1,im
[(408208) BashCMDExecutor]  -            dust_aod350(i,j)=0.
[(408208) BashCMDExecutor]  -            dust_aod450(i,j)=0.
[(408208) BashCMDExecutor]  -            dust_aod500(i,j)=0.
[(408208) BashCMDExecutor]  -            dust_aod650(i,j)=0.
[(408208) BashCMDExecutor]  -            dust_aod800(i,j)=0.
[(408208) BashCMDExecutor]  -            dust_aod900(i,j)=0.
[(408208) BashCMDExecutor]  -            do l=1,8
[(408208) BashCMDExecutor]  -              dust_aod350(i,j)=dust_aod350(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext350(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod450(i,j)=dust_aod450(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext450(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod500(i,j)=dust_aod500(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext500(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod550_bin(i,j,l)=dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext550(l)/(4.*r_dust_e(l)*rho_dust(l))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod650(i,j)=dust_aod650(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext650(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod800(i,j)=dust_aod800(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext800(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -              dust_aod900(i,j)=dust_aod900(i,j)+(dload(l,i,j)
[(408208) BashCMDExecutor]  -       &           *3.*qext900(l)/(4.*r_dust_e(l)*rho_dust(l)))
[(408208) BashCMDExecutor]  -            enddo
[(408208) BashCMDExecutor]  -          enddo
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_EMI_DUST, emiss_dust, dims_bin) !EMIS_AERO
[(408208) BashCMDExecutor]  -        dust_emi=0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_emi = dust_emi + emiss_dust(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        call reverse_read3r(31, CFG_AERO_DUST02, dust02, dims_bin) !AERO02
[(408208) BashCMDExecutor]  -        dust_sconc02 = 0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_sconc02 = dust_sconc02 + dust02(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        read(31)!ADRYDEP
[(408208) BashCMDExecutor]  -        read(31)!WETDEP
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        do l=1,lm
[(408208) BashCMDExecutor]  -          read(31)!ph_no2
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  !      call reverse_read3r(31, CFG_AERO_DUST10, dust10, dims_bin)
[(408208) BashCMDExecutor]  -        dust10=dust02
[(408208) BashCMDExecutor]  -        dust_sconc10 = 0.0
[(408208) BashCMDExecutor]  -        do l=1,8
[(408208) BashCMDExecutor]  -          dust_sconc10 = dust_sconc10 + dust10(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -        dust_pm10_sconc10 = 0.0
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        do l=1,6
[(408208) BashCMDExecutor]  -          dust_pm10_sconc10 = dust_pm10_sconc10 + dust10(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -        dust_pm10_sconc10 = dust_pm10_sconc10 + dust10(7,:,:)*0.88
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        dust_pm25_sconc10 = 0.0
[(408208) BashCMDExecutor]  -        do l=1,4
[(408208) BashCMDExecutor]  -          dust_pm25_sconc10 = dust_pm25_sconc10 + dust10(l,:,:)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -        dust_pm25_sconc10 = dust_pm25_sconc10 + dust10(5,:,:)*0.385
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        print*,'solo faltan tracers'
[(408208) BashCMDExecutor]  -        num_tracers_total=17
[(408208) BashCMDExecutor]  -        num_tracers_chem=8
[(408208) BashCMDExecutor]  -  !      num_tracers_total=25
[(408208) BashCMDExecutor]  -  !      num_tracers_chem=16
[(408208) BashCMDExecutor]  -        dust = 0.0
[(408208) BashCMDExecutor]  -        salt = 0.0
[(408208) BashCMDExecutor]  -        dust_bins = 0.0
[(408208) BashCMDExecutor]  -        salt_bins = 0.0
[(408208) BashCMDExecutor]  -        if(kount_dust.eq.ihr) then
[(408208) BashCMDExecutor]  -          open(unit=41,file=fname_dust
[(408208) BashCMDExecutor]  -       &        ,status='unknown',form='unformatted')
[(408208) BashCMDExecutor]  -        endif
[(408208) BashCMDExecutor]  -        do n=5,num_tracers_total
[(408208) BashCMDExecutor]  -          print*,n
[(408208) BashCMDExecutor]  -          call verified_read3r( 31, CFG_AERO_TRACERS, tracers, dims_3d)
[(408208) BashCMDExecutor]  -          if (n>num_tracers_total-num_tracers_chem) then
[(408208) BashCMDExecutor]  -            if(kount_dust.eq.ihr)then
[(408208) BashCMDExecutor]  -              write(41)tracers(:,:,l)
[(408208) BashCMDExecutor]  -            endif
[(408208) BashCMDExecutor]  -            dust = dust + tracers
[(408208) BashCMDExecutor]  -            dust_bins(:,:, n-(num_tracers_total-num_tracers_chem)) =
[(408208) BashCMDExecutor]  -       &           tracers(:,:,lm)
[(408208) BashCMDExecutor]  -          endif
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -        if(kount_dust.eq.ihr) then
[(408208) BashCMDExecutor]  -          close(41)
[(408208) BashCMDExecutor]  -        endif
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        dust_sconc=dust(:,:,lm)
[(408208) BashCMDExecutor]  -        close(31)
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  ! Final de la lectura:
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -        do l=1,nwets
[(408208) BashCMDExecutor]  -          tg(l,:,:)=tgt(:,:,l)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -        do l=1,nwets
[(408208) BashCMDExecutor]  -          wg(l,:,:)=wgt(:,:,l)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  ! Aixo es podria comentar o treure....
[(408208) BashCMDExecutor]  -        do l=1,lm
[(408208) BashCMDExecutor]  -          wmx=-99999999.
[(408208) BashCMDExecutor]  -          wmn=99999999.
[(408208) BashCMDExecutor]  -          do j=1,jm
[(408208) BashCMDExecutor]  -            do i=1,im
[(408208) BashCMDExecutor]  -              wmx=max(w(i,j,l),wmx)
[(408208) BashCMDExecutor]  -              wmn=min(w(i,j,l),wmn)
[(408208) BashCMDExecutor]  -            enddo
[(408208) BashCMDExecutor]  -          enddo
[(408208) BashCMDExecutor]  -  !      write(*,101)'l=',l,' wmx=',wmx,' wmn=',wmn
[(408208) BashCMDExecutor]  -  ! 101  format(a,i5,8(a,f13.5))
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  !!!CPEREZ3
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -        if(.not.global) then
[(408208) BashCMDExecutor]  -          DO i=1,im
[(408208) BashCMDExecutor]  -            DO j=1,jm
[(408208) BashCMDExecutor]  -              LAT(i,j)=VLAT(i,j)*180./3.1415926535897932384626433832795
[(408208) BashCMDExecutor]  -              LON(i,j)=VLON(i,j)*180./3.1415926535897932384626433832795
[(408208) BashCMDExecutor]  -            ENDDO
[(408208) BashCMDExecutor]  -          ENDDO
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !***  transform tll wind into tll
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -          do l=1,lm
[(408208) BashCMDExecutor]  -            do j=1,jm-1
[(408208) BashCMDExecutor]  -              do i=1,im
[(408208) BashCMDExecutor]  -                tpus=u(i,j,l)
[(408208) BashCMDExecutor]  -                tpvs=v(i,j,l)
[(408208) BashCMDExecutor]  -  !!!vectors are located in V points (VLAT,VLON in degrees)
[(408208) BashCMDExecutor]  -                call tllwin(lon(i,j),lat(i,j),tpus,tpvs,tlm0d,
[(408208) BashCMDExecutor]  -       &             tph0d,pus,pvs)
[(408208) BashCMDExecutor]  -                u(i,j,l)=pus
[(408208) BashCMDExecutor]  -                v(i,j,l)=pvs
[(408208) BashCMDExecutor]  -              enddo
[(408208) BashCMDExecutor]  -            enddo
[(408208) BashCMDExecutor]  -            do i=1,im
[(408208) BashCMDExecutor]  -              u(i,jm,l)=u(i,jm-1,l)
[(408208) BashCMDExecutor]  -              v(i,jm,l)=v(i,jm-1,l)
[(408208) BashCMDExecutor]  -            enddo
[(408208) BashCMDExecutor]  -          enddo
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -          DO i=1,im
[(408208) BashCMDExecutor]  -            DO j=1,jm
[(408208) BashCMDExecutor]  -              LAT(i,j)=GLAT(i,j)*180./3.1415926535897932384626433832795
[(408208) BashCMDExecutor]  -              LON(i,j)=GLON(i,j)*180./3.1415926535897932384626433832795
[(408208) BashCMDExecutor]  -            ENDDO
[(408208) BashCMDExecutor]  -          ENDDO
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -          do j=1,jm-1
[(408208) BashCMDExecutor]  -            do i=1,im
[(408208) BashCMDExecutor]  -               tpus=u10(i,j)
[(408208) BashCMDExecutor]  -               tpvs=v10(i,j)
[(408208) BashCMDExecutor]  -  !!!u10,v10 are located in H points (GLAT,GLON in degrees)
[(408208) BashCMDExecutor]  -               call tllwin(lon(i,j),lat(i,j),tpus,tpvs,tlm0d,
[(408208) BashCMDExecutor]  -       &            tph0d,pus,pvs)
[(408208) BashCMDExecutor]  -               u10(i,j)=pus
[(408208) BashCMDExecutor]  -               v10(i,j)=pvs
[(408208) BashCMDExecutor]  -             enddo
[(408208) BashCMDExecutor]  -           enddo
[(408208) BashCMDExecutor]  -           do i=1,im
[(408208) BashCMDExecutor]  -             u10(i,jm)=u10(i,jm-1)
[(408208) BashCMDExecutor]  -             v10(i,jm)=v10(i,jm-1)
[(408208) BashCMDExecutor]  -           enddo
[(408208) BashCMDExecutor]  -        endif
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  ! FM: Comienzo del parsing de variables:
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !***  PRESSURE CONVERSION begins here
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  
[(408208) BashCMDExecutor]  -        do l=1,lsm
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !      alslp=log(ppsl(l))
[(408208) BashCMDExecutor]  -  !      alsl(l)=alslp
[(408208) BashCMDExecutor]  -  !      ztsl(l)=alslp*alslp
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -          alsl(l)=log(ppsl(l))
[(408208) BashCMDExecutor]  -          ztsl(l)=ppsl(l)
[(408208) BashCMDExecutor]  -        enddo
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -        ztbot=ztsl(lsm)
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !***  mass point variables at pressure levels
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !
[(408208) BashCMDExecutor]  -        do j=1,jm
[(408208) BashCMDExecutor]  -          do i=1,im
[(408208) BashCMDExecutor]  -            pdp=pd(i,j)
[(408208) BashCMDExecutor]  -            hsp=fis(i,j)/g
[(408208) BashCMDExecutor]  -            hcol(lm+1)=hsp
[(408208) BashCMDExecutor]  -            hs(i,j)=hsp
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408208) BashCMDExecutor]  -  !      alp1l=alog(pint(i,j,lm+1))
[(408208) BashCMDExecutor]  -  !      alp2l=(alog(pdp+pdtop+pt))**2
[(408208) BashCMDExecutor]  -  !      zth(lm+1)=alp2l
[(408208) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -            zth(lm+1)=sg1(lm+1)*pdtop+sg2(lm+1)*pdp+pt
[(408209) BashCMDExecutor]  -            pcol(1)=pt
[(408209) BashCMDExecutor]  -            q2cl(1)=0.
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !***  loading values at mid-layers and interfaces
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -            do ivi=1,lm
[(408209) BashCMDExecutor]  -              l=lm+1-ivi
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !      alp1u=alog(pint(i,j,l))
[(408209) BashCMDExecutor]  -  !      alp2u=(alog(sg1(l)*pdtop+sg2(l)*pdp+pt))**2
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !      dpd=dsg1(l)*pdtop+dsg2(l)*pdp
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !      dh=(q(i,j,l)*0.608+1.)*(alp1l-alp1u)*t(i,j,l)*r/g
[(408209) BashCMDExecutor]  -  !     2  *dpd/(pint(i,j,l+1)-pint(i,j,l))
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !      alpcp=dh*g/(dpd*cp)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !      zth(l)=alp2u
[(408209) BashCMDExecutor]  -  !      ztt(l)=(alp2l+alp2u)*0.5
[(408209) BashCMDExecutor]  -  !      ztt(l)=(alog(sgml1(l)*pdtop+sgml2(l)*pdp+pt))**2
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -              dpd=dsg1(l)*pdtop+dsg2(l)*pdp
[(408209) BashCMDExecutor]  -  !            ppl=sgml1(l)*pdtop+sgml2(l)*pdp+pt
[(408209) BashCMDExecutor]  -  !            dh=(q(i,j,l)*0.608+1.)*t(i,j,l)*dpd*r/(g*ppl)
[(408209) BashCMDExecutor]  -              ppl=(pint(i,j,l+1)+pint(i,j,l))*0.5
[(408209) BashCMDExecutor]  -              dh=(q(i,j,l)*0.608-cw(i,j,l)+1.)*t(i,j,l)*dpd*r/(g*ppl)
[(408209) BashCMDExecutor]  -  !            dh=t(i,j,l)*dpd*r/(g*ppl)
[(408209) BashCMDExecutor]  -              ztt(l)=sgml1(l)*pdtop+sgml2(l)*pdp+pt
[(408209) BashCMDExecutor]  -              zth(l)=sg1(l)*pdtop+sg2(l)*pdp+pt
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              tcol(l)=t(i,j,l)
[(408209) BashCMDExecutor]  -              qcol(l)=q(i,j,l)
[(408209) BashCMDExecutor]  -  !            cwcl(l)=cw(i,j,l)
[(408209) BashCMDExecutor]  -  !            dwcl(l)=dwdt(i,j,l)
[(408209) BashCMDExecutor]  -  !            dcol(l)=div(i,j,l)
[(408209) BashCMDExecutor]  -  !            wcol(l)=w(i,j,l)
[(408209) BashCMDExecutor]  -  !            rcol(l)=rrw(i,j,l)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              pcol(l+1)=pint(i,j,l+1)
[(408209) BashCMDExecutor]  -              q2cl(l+1)=q2(i,j,l)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !            ucol(l)=u(i,j,l)
[(408209) BashCMDExecutor]  -  !            vcol(l)=v(i,j,l)
[(408209) BashCMDExecutor]  -  !            cldfracl(l)=cldfra(i,j,l)
[(408209) BashCMDExecutor]  -  !            rlwttcol(l)=rlwtt(i,j,l)
[(408209) BashCMDExecutor]  -  !            rswttcol(l)=rswtt(i,j,l)
[(408209) BashCMDExecutor]  -  !            f_icecl(l)=f_ice(i,j,l)
[(408209) BashCMDExecutor]  -  !            f_rimecl(l)=f_rimef(i,j,l)
[(408209) BashCMDExecutor]  -  !            f_raincl(l)=f_rain(i,j,l)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            dustexcl(l)=DUST_EXT(i,j,l)
[(408209) BashCMDExecutor]  -              dustcol(l)=DUST(i,j,l)
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !            dust1col(l)=DUST1(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust2col(l)=DUST2(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust3col(l)=DUST3(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust4col(l)=DUST4(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust5col(l)=DUST5(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust6col(l)=DUST6(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust7col(l)=DUST7(i,j,l)
[(408209) BashCMDExecutor]  -  !            dust8col(l)=DUST8(i,j,l)
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              hcol(l  )=hcol(l+1)+dh
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !      alp1l=alp1u
[(408209) BashCMDExecutor]  -  !      alp2l=alp2u
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -            enddo
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !***  extrapolation underground for mid-layer variables
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -            if(ztt(lm).gt.ztbot) then
[(408209) BashCMDExecutor]  -              ldm=lm
[(408209) BashCMDExecutor]  -            else
[(408209) BashCMDExecutor]  -              ldm=lm+1
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              ztt(lm+1)=ztbot
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            d1=(tcol(lm)-tcol(lm-1))/(ztt(lm)-ztt(lm-1))
[(408209) BashCMDExecutor]  -  !            d1=0.
[(408209) BashCMDExecutor]  -  !            x=ztbot-ztt(lm)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            tcol(lm+1)=d1*x+tcol(lm)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              tcol(lm+1)=tcol(lm)
[(408209) BashCMDExecutor]  -       &                *(ppsl(lsm)*2./(pcol(lm)+pcol(lm+1)))**rgdt
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              qcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            cwcl(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dwcl(lm+1)=1.
[(408209) BashCMDExecutor]  -  !            dcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            wcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            rcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !            ucol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            vcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            cldfracl(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            rlwttcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            rswttcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            f_icecl(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            f_rimecl(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            f_raincl(lm+1)=0.
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            dustexcl(lm+1)=0.
[(408209) BashCMDExecutor]  -              dustcol(lm+1)=0.
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !            dust1col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust2col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust3col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust4col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust5col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust6col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust7col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !            dust8col(lm+1)=0.
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -            endif
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !***  interpolation of mid-layer variables to pressure levels
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            y2(ldm)=0.
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            call spline(ldm,ztt,tcol,y2,lsm,ztsl,tcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -            call spline(ldm,ztt,qcol,y2,lsm,ztsl,qcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,cwcl,y2,lsm,ztsl,cwclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dwcl,y2,lsm,ztsl,dwclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dcol,y2,lsm,ztsl,dcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,wcol,y2,lsm,ztsl,wcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,rcol,y2,lsm,ztsl,rcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,ucol,y2,lsm,ztsl,ucolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,vcol,y2,lsm,ztsl,vcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,cldfracl,y2,lsm,ztsl,cldfraclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,rlwttcol,y2,lsm,ztsl,rlwttcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,rswttcol,y2,lsm,ztsl,rswttcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,f_icecl,y2,lsm,ztsl,f_iceclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,f_rimecl,y2,lsm,ztsl,f_rimeclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,f_raincl,y2,lsm,ztsl,f_rainclsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dustexcl,y2,lsm,ztsl,dustexclsl,phld,qhld)
[(408209) BashCMDExecutor]  -            call spline(ldm,ztt,dustcol,y2,lsm,ztsl,dustcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust1col,y2,lsm,ztsl,dust1colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust2col,y2,lsm,ztsl,dust2colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust3col,y2,lsm,ztsl,dust3colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust4col,y2,lsm,ztsl,dust4colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust5col,y2,lsm,ztsl,dust5colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust6col,y2,lsm,ztsl,dust6colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust7col,y2,lsm,ztsl,dust7colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !          call spline(ldm,ztt,dust8col,y2,lsm,ztsl,dust8colsl,phld,qhld)
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            do l=1,lsm
[(408209) BashCMDExecutor]  -              tsl (i,j,l)=tcolsl(l)
[(408209) BashCMDExecutor]  -              qsl (i,j,l)=max(qcolsl(l),0.)
[(408209) BashCMDExecutor]  -  !            cwsl(i,j,l)=cwclsl(l)
[(408209) BashCMDExecutor]  -  !            dwsl(i,j,l)=dwclsl(l)
[(408209) BashCMDExecutor]  -  !            dsl (i,j,l)=dcolsl(l)
[(408209) BashCMDExecutor]  -  !            wsl (i,j,l)=wcolsl(l)
[(408209) BashCMDExecutor]  -  !            rsl (i,j,l)=rcolsl(l)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !            usl(i,j,l)=ucolsl(l)
[(408209) BashCMDExecutor]  -  !            vsl(i,j,l)=vcolsl(l)
[(408209) BashCMDExecutor]  -  !            cldfrasl(i,j,l)=cldfraclsl(l)
[(408209) BashCMDExecutor]  -  !            rlwttsl(i,j,l)=rlwttcolsl(l)
[(408209) BashCMDExecutor]  -  !            rswttsl(i,j,l)=rswttcolsl(l)
[(408209) BashCMDExecutor]  -  !            f_icesl(i,j,l)=f_iceclsl(l)
[(408209) BashCMDExecutor]  -  !            f_rimesl(i,j,l)=f_rimeclsl(l)
[(408209) BashCMDExecutor]  -  !            f_rainsl(i,j,l)=f_rainclsl(l)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            dustexsl(i,j,l)=dustexclsl(l)
[(408209) BashCMDExecutor]  -              dustsl(i,j,l)=max(dustcolsl(l),0.)
[(408209) BashCMDExecutor]  -  !!! KARSTEN
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !            dust1sl(i,j,l)=dust1colsl(l)
[(408209) BashCMDExecutor]  -  !            dust2sl(i,j,l)=dust2colsl(l)
[(408209) BashCMDExecutor]  -  !            dust3sl(i,j,l)=dust3colsl(l)
[(408209) BashCMDExecutor]  -  !            dust4sl(i,j,l)=dust4colsl(l)
[(408209) BashCMDExecutor]  -  !            dust5sl(i,j,l)=dust5colsl(l)
[(408209) BashCMDExecutor]  -  !            dust6sl(i,j,l)=dust6colsl(l)
[(408209) BashCMDExecutor]  -  !            dust7sl(i,j,l)=dust7colsl(l)
[(408209) BashCMDExecutor]  -  !            dust8sl(i,j,l)=dust8colsl(l)
[(408209) BashCMDExecutor]  -  !!!KARSTEN2
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            enddo
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !***  extrapolation underground for interface variables
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            if(zth(lm+1).gt.ztbot) then
[(408209) BashCMDExecutor]  -              ldm=lm+1
[(408209) BashCMDExecutor]  -            else
[(408209) BashCMDExecutor]  -              ldm=lm+2
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              zth(lm+2)=ztbot
[(408209) BashCMDExecutor]  -  !            x=ztbot-zth(lm+1)
[(408209) BashCMDExecutor]  -  !            if(abs(x/ztbot).lt.eps)    x=0.
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !            d1=(hcol(lm+1)-hcol(lm-3))/(zth(lm+1)-zth(lm-3))
[(408209) BashCMDExecutor]  -  !            d2=0.
[(408209) BashCMDExecutor]  -  !            hcol(lm+2)=d2*x*x+d1*x+hcol(lm+1)
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -              hcol(lm+2)=-(exp((alsl(lsm)
[(408209) BashCMDExecutor]  -       &                 -log((pcol(lm)+pcol(lm+1))*0.5))*rgdt)-1.)
[(408209) BashCMDExecutor]  -       &                 *tcol(lm-2)*rdtdz+(hcol(lm)+hcol(lm+1))*0.5
[(408209) BashCMDExecutor]  -              pcol(lm+2)=ppsl(lsm)
[(408209) BashCMDExecutor]  -              q2cl(lm+2)=0.
[(408209) BashCMDExecutor]  -            endif
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !***  interpolation of interface variables to pressure levels
[(408209) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            y2(ldm)=0.
[(408209) BashCMDExecutor]  -  
[(408209) BashCMDExecutor]  -            call spline(ldm,zth,hcol,y2,lsm,ztsl,hcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -            call spline(ldm,zth,pcol,y2,lsm,ztsl,pcolsl,phld,qhld)
[(408209) BashCMDExecutor]  -            call spline(ldm,zth,q2cl,y2,lsm,ztsl,q2clsl,phld,qhld)
[(408209) BashCMDExecutor]  -  
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            do l=1,lsm
[(408209) BashCMDExecutor]  -              hsl (i,j,l)=hcolsl(l)
[(408209) BashCMDExecutor]  -              psl (i,j,l)=pcolsl(l)
[(408209) BashCMDExecutor]  -              q2sl(i,j,l)=max(q2clsl(l),0.)
[(408209) BashCMDExecutor]  -            enddo
[(408209) BashCMDExecutor]  -  !
[(408209) BashCMDExecutor]  -            do l=1,lsm-1
[(408210) BashCMDExecutor]  -              if(hs(i,j).ge.hsl(i,j,l)) then
[(408210) BashCMDExecutor]  -                tsl(i,j,l)=-((hsl(i,j,l)-hsl(i,j,l-1))/(alsl(l)-alsl(l-1))
[(408210) BashCMDExecutor]  -       &                  +(hsl(i,j,l+1)-hsl(i,j,l))/(alsl(l+1)-alsl(l)))
[(408210) BashCMDExecutor]  -       &                  *gor*0.5
[(408210) BashCMDExecutor]  -              endif
[(408210) BashCMDExecutor]  -            enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -            do l=1,lm+1
[(408210) BashCMDExecutor]  -              zet(i,j,l)=zth(l)
[(408210) BashCMDExecutor]  -            enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -          enddo
[(408210) BashCMDExecutor]  -        enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !***  end of mass point interpolations
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !***  smoothing pressure levels ruptured by topography
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -        do l=1,lsm
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -          rlx=ovrlx(l)
[(408210) BashCMDExecutor]  -          yes=0.
[(408210) BashCMDExecutor]  -          avt=0.
[(408210) BashCMDExecutor]  -          avh=0.
[(408210) BashCMDExecutor]  -          kt=0
[(408210) BashCMDExecutor]  -          kh=0
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -          do j=1,jm
[(408210) BashCMDExecutor]  -            do i=1,im
[(408210) BashCMDExecutor]  -              href=hs(i,j)
[(408210) BashCMDExecutor]  -              if(href.ge.hsl(i,j,l)) then
[(408210) BashCMDExecutor]  -                yes=1.
[(408210) BashCMDExecutor]  -                tmask(i,j)=rlx
[(408210) BashCMDExecutor]  -              else
[(408210) BashCMDExecutor]  -                tmask(i,j)=0.
[(408210) BashCMDExecutor]  -                avt=tsl(i,j,l)+avt
[(408210) BashCMDExecutor]  -                avh=hsl(i,j,l)+avh
[(408210) BashCMDExecutor]  -                kt=kt+1
[(408210) BashCMDExecutor]  -                kh=kh+1
[(408210) BashCMDExecutor]  -              endif
[(408210) BashCMDExecutor]  -            enddo
[(408210) BashCMDExecutor]  -          enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -          if(yes.gt.0.) then
[(408210) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -            if (kt*kh.ne.0) then
[(408210) BashCMDExecutor]  -              avt=avt/kt
[(408210) BashCMDExecutor]  -              avh=avh/kh
[(408210) BashCMDExecutor]  -            endif
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -            do j=1,jm
[(408210) BashCMDExecutor]  -              do i=1,im
[(408210) BashCMDExecutor]  -  !              rtsl(i,j)=hsl(i,j,l-1)-hsl(i,j,l)
[(408210) BashCMDExecutor]  -                rtsl(i,j)=hsl(i,j,l)
[(408210) BashCMDExecutor]  -  !              if (hs(i,j).ge.hsl(i,j,l).and.kt*kh.ne.0.and.hs(i,j).gt.10.) then
[(408210) BashCMDExecutor]  -  !                tsl (i,j,l)=avt
[(408210) BashCMDExecutor]  -  !                hsl (i,j,l)=avh
[(408210) BashCMDExecutor]  -  !              endif
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -                if (hs(i,j).ge.hsl(i,j,l)) then
[(408210) BashCMDExecutor]  -                  osl (i,j,l)=0.
[(408210) BashCMDExecutor]  -                  qsl (i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                cwsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dwsl(i,j,l)=1.
[(408210) BashCMDExecutor]  -  !                dsl (i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                wsl (i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                rsl (i,j,l)=0.
[(408210) BashCMDExecutor]  -                  psl (i,j,l)=ppsl(l)
[(408210) BashCMDExecutor]  -  !                q2sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !!! KARSTEN
[(408210) BashCMDExecutor]  -  !                usl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                vsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                cldfrasl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                rlwttsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                rswttsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                f_icesl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                f_rimesl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                f_rainsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !                dustexsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -                  dustsl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !!! KARSTEN
[(408210) BashCMDExecutor]  -  !!!KARSTEN2
[(408210) BashCMDExecutor]  -  !                dust1sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust2sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust3sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust4sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust5sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust6sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust7sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !                dust8sl(i,j,l)=0.
[(408210) BashCMDExecutor]  -  !!!KARSTEN2
[(408210) BashCMDExecutor]  -                endif
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -              enddo
[(408210) BashCMDExecutor]  -            enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -            do n=1,nsmud
[(408210) BashCMDExecutor]  -  !----------------------------------------------------------------------
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -              do j=2,jm-1
[(408210) BashCMDExecutor]  -                do i=2,im-1
[(408210) BashCMDExecutor]  -                  tsll(i,j)=tsl (i,j-1,l)+tsl (i-1,j,l)
[(408210) BashCMDExecutor]  -       &                   +tsl (i+1,j,l)+tsl (i,j+1,l)-tsl (i,j,l)*4.
[(408210) BashCMDExecutor]  -                  osll(i,j)=osl (i,j-1,l)+osl (i-1,j,l)
[(408210) BashCMDExecutor]  -       &                   +osl (i+1,j,l)+osl (i,j+1,l)-osl (i,j,l)*4.
[(408210) BashCMDExecutor]  -                  qsll(i,j)=qsl (i,j-1,l)+qsl (i-1,j,l)
[(408210) BashCMDExecutor]  -       &                   +qsl (i+1,j,l)+qsl (i,j+1,l)-qsl (i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                cwll(i,j)=cwsl(i,j-1,l)+cwsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                   +cwsl(i+1,j,l)+cwsl(i,j+1,l)-cwsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dwll(i,j)=dwsl(i,j-1,l)+dwsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                   +dwsl(i+1,j,l)+dwsl(i,j+1,l)-dwsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !!                dvll(i,j)=dsl (i,j-1,l)+dsl (i-1,j,l)
[(408210) BashCMDExecutor]  -  !!     &                   +dsl (i+1,j,l)+dsl (i,j+1,l)-dsl (i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                wsll(i,j)=wsl (i,j-1,l)+wsl (i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                   +wsl (i+1,j,l)+wsl (i,j+1,l)-wsl (i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                rsll(i,j)=rsl (i,j-1,l)+rsl (i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                   +rsl (i+1,j,l)+rsl (i,j+1,l)-rsl (i,j,l)*4.
[(408210) BashCMDExecutor]  -                  hsll(i,j)=rtsl(  i,j-1)+rtsl(  i-1,j)
[(408210) BashCMDExecutor]  -       &                   +rtsl(  i+1,j)+rtsl(  i,j+1)-rtsl(i,j  )*4.
[(408210) BashCMDExecutor]  -                  psll(i,j)=psl (i,j-1,l)+psl (i-1,j,l)
[(408210) BashCMDExecutor]  -       &                   +psl (i+1,j,l)+psl (i,j+1,l)-psl (i,j,l)*4.
[(408210) BashCMDExecutor]  -                  q2ll(i,j)=q2sl(i,j-1,l)+q2sl(i-1,j,l)
[(408210) BashCMDExecutor]  -       &                   +q2sl(i+1,j,l)+q2sl(i,j+1,l)-q2sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -  !!! KARSTEN
[(408210) BashCMDExecutor]  -  !!                usll(i,j)=usl(i,j-1,l)+usl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !!     &                   +usl(i+1,j,l)+usl(i,j+1,l)-usl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !!                vsll(i,j)=vsl(i,j-1,l)+vsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !!     &                   +vsl(i+1,j,l)+vsl(i,j+1,l)-vsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                cldfrasll(i,j)=cldfrasl(i,j-1,l)+cldfrasl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                        +cldfrasl(i+1,j,l)+cldfrasl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                        -cldfrasl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                rlwttsll(i,j)=rlwttsl(i,j-1,l)+rlwttsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +rlwttsl(i+1,j,l)+rlwttsl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -rlwttsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                rswttsll(i,j)=rswttsl(i,j-1,l)+rswttsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +rswttsl(i+1,j,l)+rswttsl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -rswttsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                f_icesll(i,j)=f_icesl(i,j-1,l)+f_icesl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +f_icesl(i+1,j,l)+f_icesl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -f_icesl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                f_rimesll(i,j)=f_rimesl(i,j-1,l)+f_rimesl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                        +f_rimesl(i+1,j,l)+f_rimesl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                        -f_rimesl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                f_rainsll(i,j)=f_rainsl(i,j-1,l)+f_rainsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                        +f_rainsl(i+1,j,l)+f_rainsl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                        -f_rainsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !!
[(408210) BashCMDExecutor]  -  !                dustexsll(i,j)=dustexsl(i,j-1,l)+dustexsl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                        +dustexsl(i+1,j,l)+dustexsl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                        -dustexsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -                  dustsll(i,j)=dustsl(i,j-1,l)+dustsl(i-1,j,l)
[(408210) BashCMDExecutor]  -       &                      +dustsl(i+1,j,l)+dustsl(i,j+1,l)
[(408210) BashCMDExecutor]  -       &                      -dustsl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !!! KARSTEN
[(408210) BashCMDExecutor]  -  !!!KARSTEN2
[(408210) BashCMDExecutor]  -  !                dust1sll(i,j)=dust1sl(i,j-1,l)+dust1sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust1sl(i+1,j,l)+dust1sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust1sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust2sll(i,j)=dust2sl(i,j-1,l)+dust2sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust2sl(i+1,j,l)+dust2sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust2sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust3sll(i,j)=dust3sl(i,j-1,l)+dust3sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust3sl(i+1,j,l)+dust3sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust3sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust4sll(i,j)=dust4sl(i,j-1,l)+dust4sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust4sl(i+1,j,l)+dust4sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust4sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust5sll(i,j)=dust5sl(i,j-1,l)+dust5sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust5sl(i+1,j,l)+dust5sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust5sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust6sll(i,j)=dust6sl(i,j-1,l)+dust6sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust6sl(i+1,j,l)+dust6sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust6sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust7sll(i,j)=dust7sl(i,j-1,l)+dust7sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust7sl(i+1,j,l)+dust7sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust7sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !                dust8sll(i,j)=dust8sl(i,j-1,l)+dust8sl(i-1,j,l)
[(408210) BashCMDExecutor]  -  !     &                       +dust8sl(i+1,j,l)+dust8sl(i,j+1,l)
[(408210) BashCMDExecutor]  -  !     &                       -dust8sl(i,j,l)*4.
[(408210) BashCMDExecutor]  -  !!!!KARSTEN2
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -                enddo
[(408210) BashCMDExecutor]  -              enddo
[(408210) BashCMDExecutor]  -  !
[(408210) BashCMDExecutor]  -              do j=2,jm-1
[(408210) BashCMDExecutor]  -                do i=2,im-1
[(408210) BashCMDExecutor]  -                  tsl (i,j,l)=tsll(i,j)*tmask(i,j)+tsl (i,j,l)
[(408210) BashCMDExecutor]  -                  osl (i,j,l)=osll(i,j)*tmask(i,j)+osl (i,j,l)
[(408210) BashCMDExecutor]  -                  qsl (i,j,l)=qsll(i,j)*tmask(i,j)+qsl (i,j,l)
[(408210) BashCMDExecutor]  -  !                cwsl(i,j,l)=cwll(i,j)*tmask(i,j)+cwsl(i,j,l)
[(408210) BashCMDExecutor]  -  !                dwsl(i,j,l)=dwll(i,j)*tmask(i,j)+dwsl(i,j,l)
[(408211) BashCMDExecutor]  -  !!                dsl (i,j,l)=dvll(i,j)*tmask(i,j)+dsl (i,j,l)
[(408211) BashCMDExecutor]  -  !                wsl (i,j,l)=wsll(i,j)*tmask(i,j)+wsl (i,j,l)
[(408211) BashCMDExecutor]  -  !                rsl (i,j,l)=rsll(i,j)*tmask(i,j)+rsl (i,j,l)
[(408211) BashCMDExecutor]  -                  rtsl(i,j  )=hsll(i,j)*tmask(i,j)+rtsl(i,j  )
[(408211) BashCMDExecutor]  -                  psl (i,j,l)=psll(i,j)*tmask(i,j)+psl (i,j,l)
[(408211) BashCMDExecutor]  -  !                q2sl(i,j,l)=q2ll(i,j)*tmask(i,j)+q2sl(i,j,l)
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !!! KARSTEN
[(408211) BashCMDExecutor]  -  !          usl(i,j,l)=usll(i,j)*tmask(i,j)+usl(i,j,l)
[(408211) BashCMDExecutor]  -  !          vsl(i,j,l)=vsll(i,j)*tmask(i,j)+vsl(i,j,l)
[(408211) BashCMDExecutor]  -  !          cldfrasl(i,j,l)=cldfrasll(i,j)*tmask(i,j)+cldfrasl(i,j,l)
[(408211) BashCMDExecutor]  -  !          rlwttsl(i,j,l)=rlwttsll(i,j)*tmask(i,j)+rlwttsl(i,j,l)
[(408211) BashCMDExecutor]  -  !          rswttsl(i,j,l)=rswttsll(i,j)*tmask(i,j)+rswttsl(i,j,l)
[(408211) BashCMDExecutor]  -  !          f_icesl(i,j,l)=f_icesll(i,j)*tmask(i,j)+f_icesl(i,j,l)
[(408211) BashCMDExecutor]  -  !          f_rimesl(i,j,l)=f_rimesll(i,j)*tmask(i,j)+f_rimesl(i,j,l)
[(408211) BashCMDExecutor]  -  !          f_rainsl(i,j,l)=f_rainsll(i,j)*tmask(i,j)+f_rainsl(i,j,l)
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !          dustexsl(i,j,l)=dustexsll(i,j)*tmask(i,j)+dustexsl(i,j,l)
[(408211) BashCMDExecutor]  -            dustsl(i,j,l)=dustsll(i,j)*tmask(i,j)+dustsl(i,j,l)
[(408211) BashCMDExecutor]  -  !!! KARSTEN
[(408211) BashCMDExecutor]  -  !!!KARSTEN2
[(408211) BashCMDExecutor]  -  !          dust1sl(i,j,l)=dust1sll(i,j)*tmask(i,j)+dust1sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust2sl(i,j,l)=dust2sll(i,j)*tmask(i,j)+dust2sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust3sl(i,j,l)=dust3sll(i,j)*tmask(i,j)+dust3sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust4sl(i,j,l)=dust4sll(i,j)*tmask(i,j)+dust4sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust5sl(i,j,l)=dust5sll(i,j)*tmask(i,j)+dust5sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust6sl(i,j,l)=dust6sll(i,j)*tmask(i,j)+dust6sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust7sl(i,j,l)=dust7sll(i,j)*tmask(i,j)+dust7sl(i,j,l)
[(408211) BashCMDExecutor]  -  !          dust8sl(i,j,l)=dust8sll(i,j)*tmask(i,j)+dust8sl(i,j,l)
[(408211) BashCMDExecutor]  -  !!!KARSTEN2
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -                enddo
[(408211) BashCMDExecutor]  -              enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !!!CPEREZ3
[(408211) BashCMDExecutor]  -  !            do j=1,jm
[(408211) BashCMDExecutor]  -  !              do i=1,im
[(408211) BashCMDExecutor]  -  !                if (hs(i,j).ge.hsl(i,j,l)) then
[(408211) BashCMDExecutor]  -  !                qsl (i,j,l)=fill_value
[(408211) BashCMDExecutor]  -  !                dustsl(i,j,l)=fill_value
[(408211) BashCMDExecutor]  -  !                endif
[(408211) BashCMDExecutor]  -  !              enddo
[(408211) BashCMDExecutor]  -  !            enddo
[(408211) BashCMDExecutor]  -  !!!CPEREZ3
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -            enddo
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            do j=1,jm
[(408211) BashCMDExecutor]  -              do i=1,im
[(408211) BashCMDExecutor]  -  !              hsl(i,j,l)=hsl(i,j,l-1)-rtsl(i,j)
[(408211) BashCMDExecutor]  -                hsl(i,j,l)=rtsl(i,j)
[(408211) BashCMDExecutor]  -              enddo
[(408211) BashCMDExecutor]  -            enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -          endif
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -        enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  velocity point variables at pressure levels
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -        do j=1,jm-1
[(408211) BashCMDExecutor]  -          do i=1,im-1
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            zup=(zet(i,j,1)+zet(i+1,j,1)
[(408211) BashCMDExecutor]  -       &        +zet(i,j+1,1)+zet(i+1,j+1,1))*0.125
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  loading variables into vertical columns
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            do l=1,lm
[(408211) BashCMDExecutor]  -              zlo=(zet(i,j,l+1)+zet(i+1,j,l+1)
[(408211) BashCMDExecutor]  -       &         +zet(i,j+1,l+1)+zet(i+1,j+1,l+1))*0.125
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -              ztw(l)=(zlo+zup)
[(408211) BashCMDExecutor]  -              ucol(l)=u(i,j,l)
[(408211) BashCMDExecutor]  -              vcol(l)=v(i,j,l)
[(408211) BashCMDExecutor]  -              zup=zlo
[(408211) BashCMDExecutor]  -            enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            if (ztw(lm).ge.ztbot) then
[(408211) BashCMDExecutor]  -              ldm=lm
[(408211) BashCMDExecutor]  -            else
[(408211) BashCMDExecutor]  -              ldm=lm+1
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -              ztw(lm+1)=ztbot
[(408211) BashCMDExecutor]  -              ucol(lm+1)=0.
[(408211) BashCMDExecutor]  -              vcol(lm+1)=0.
[(408211) BashCMDExecutor]  -            endif
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            y2(ldm)=0.
[(408211) BashCMDExecutor]  -            call spline(ldm,ztw,ucol,y2,lsm,ztsl,ucolsl,phld,qhld)
[(408211) BashCMDExecutor]  -            call spline(ldm,ztw,vcol,y2,lsm,ztsl,vcolsl,phld,qhld)
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -            do l=1,lsm
[(408211) BashCMDExecutor]  -              usl(i,j,l)=ucolsl(l)
[(408211) BashCMDExecutor]  -              vsl(i,j,l)=vcolsl(l)
[(408211) BashCMDExecutor]  -            enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -          enddo
[(408211) BashCMDExecutor]  -        enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  end of wind point interpolations
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !!!CPEREZ3
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !      do j=1,jm-1
[(408211) BashCMDExecutor]  -  !        do i=1,im-1
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !          hsv=(hs(i,j)+hs(i+1,j)+hs(i,j+1)+hs(i+1,j+1))*0.25
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  setting underground values
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !          do l=1,lsm
[(408211) BashCMDExecutor]  -  !            hlv=(hsl(i,j,l)+hsl(i+1,j,l)
[(408211) BashCMDExecutor]  -  !     &          +hsl(i,j+1,l)+hsl(i+1,j+1,l))*0.25
[(408211) BashCMDExecutor]  -  !            if (hsv.gt.hlv) then
[(408211) BashCMDExecutor]  -  !              usl(i,j,l)=0.
[(408211) BashCMDExecutor]  -  !              vsl(i,j,l)=0.
[(408211) BashCMDExecutor]  -  !              wsl(i,j,l)=0.
[(408211) BashCMDExecutor]  -  !            endif
[(408211) BashCMDExecutor]  -  !          enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !        enddo
[(408211) BashCMDExecutor]  -  !      enddo
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !Interpolate vectors to scalar grid  (Remember it is a B grid)
[(408211) BashCMDExecutor]  -  !and setting underground values
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -        do j=2,jm-1
[(408211) BashCMDExecutor]  -          do i=2,im-1
[(408211) BashCMDExecutor]  -  !u10 in H points already          u10_h(i,j)=(u10(i,j)+u10(i-1,j)+u10(i,j-1)+u10(i-1,j-1))*0.25
[(408211) BashCMDExecutor]  -  !v10 in H points already          v10_h(i,j)=(v10(i,j)+v10(i-1,j)+v10(i,j-1)+v10(i-1,j-1))*0.25
[(408211) BashCMDExecutor]  -            do l=1,lsm
[(408211) BashCMDExecutor]  -              if (hs(i,j).ge.hsl(i,j,l)) then
[(408211) BashCMDExecutor]  -                usl_h(i,j,l)=0.
[(408211) BashCMDExecutor]  -                vsl_h(i,j,l)=0.
[(408211) BashCMDExecutor]  -              else
[(408211) BashCMDExecutor]  -                usl_h(i,j,l)=(usl(i,j,l)+usl(i-1,j,l)+usl(i,j-1,l)
[(408211) BashCMDExecutor]  -       &                     +usl(i-1,j-1,l))*0.25
[(408211) BashCMDExecutor]  -                vsl_h(i,j,l)=(vsl(i,j,l)+vsl(i-1,j,l)+vsl(i,j-1,l)
[(408211) BashCMDExecutor]  -       &                     +vsl(i-1,j-1,l))*0.25
[(408211) BashCMDExecutor]  -              endif
[(408211) BashCMDExecutor]  -            enddo
[(408211) BashCMDExecutor]  -          enddo
[(408211) BashCMDExecutor]  -        enddo 
[(408211) BashCMDExecutor]  -  !
[(408211) BashCMDExecutor]  -  !!!CPEREZ3
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  sea level pressure
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        do j=1,jm
[(408211) BashCMDExecutor]  -          do i=1,im
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -            if(fis(i,j).gt.-1..and.fis(i,j).lt.1.) then
[(408211) BashCMDExecutor]  -              slp(i,j)=pint(i,j,lm+1)
[(408211) BashCMDExecutor]  -            else
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -              hcol5(1)=hsl(i,j,lsm)      ! 1050 mb
[(408211) BashCMDExecutor]  -              hcol5(2)=hsl(i,j,lsm-1)    ! 1025 mb
[(408211) BashCMDExecutor]  -              hcol5(3)=hsl(i,j,lsm-2)    ! 1000 mb
[(408211) BashCMDExecutor]  -              hcol5(4)=hsl(i,j,lsm-3)    !  975 mb
[(408211) BashCMDExecutor]  -              hcol5(5)=hsl(i,j,lsm-4)    !  950 mb
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -              pcol5(1)=psl(i,j,lsm)      ! 1050 mb
[(408211) BashCMDExecutor]  -              pcol5(2)=psl(i,j,lsm-1)    ! 1025 mb
[(408211) BashCMDExecutor]  -              pcol5(3)=psl(i,j,lsm-2)    ! 1000 mb
[(408211) BashCMDExecutor]  -              pcol5(4)=psl(i,j,lsm-3)    !  975 mb
[(408211) BashCMDExecutor]  -              pcol5(5)=psl(i,j,lsm-4)    !  950 mb
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -              do l=1,5
[(408211) BashCMDExecutor]  -                y25(l)=0.0
[(408211) BashCMDExecutor]  -              enddo
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -              call spline(5,hcol5,pcol5,y25,1,0.0,slp1,phld,qhld)
[(408211) BashCMDExecutor]  -              slp(i,j)=slp1
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -            endif
[(408211) BashCMDExecutor]  -            pints(i,j)=pint(i,j,lm+1)
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -          enddo
[(408211) BashCMDExecutor]  -        enddo
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  !***  PRESSURE CONVERSION end
[(408211) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !----Define GLAT, GLON (geographic lat and lon), LEV and time...these will be used to write to south_north, west_east and bottom_top respectively in netcdf file
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !CPEREZ3      DO i=1,jm
[(408211) BashCMDExecutor]  -  !CPEREZ3      GLAT(i)=sbd+((i-1)*dphd) 
[(408211) BashCMDExecutor]  -  !CPEREZ3!      PRINT*,'i is ',i,'lat is ',GLAT(i)
[(408211) BashCMDExecutor]  -  !CPEREZ3      ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !CPEREZ3      DO i=1,im
[(408211) BashCMDExecutor]  -  !CPEREZ3      GLON(i)=wbd+((i-1)*dlmd) 
[(408211) BashCMDExecutor]  -  !CPEREZ3!      PRINT*,'i is ',i,'lon is ',GLON(i)      
[(408211) BashCMDExecutor]  -  !CPEREZ3      ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        DO i=1,jm
[(408211) BashCMDExecutor]  -          south_north(i)=i
[(408211) BashCMDExecutor]  -        ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        DO i=1,im
[(408211) BashCMDExecutor]  -          west_east(i)=i
[(408211) BashCMDExecutor]  -        ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        DO i=1,im
[(408211) BashCMDExecutor]  -          DO j=1,jm
[(408211) BashCMDExecutor]  -            LAT(i,j)=GLAT(i,j)*180./3.1415926535897932384626433832795
[(408211) BashCMDExecutor]  -            LON(i,j)=GLON(i,j)*180./3.1415926535897932384626433832795
[(408211) BashCMDExecutor]  -          ENDDO
[(408211) BashCMDExecutor]  -        ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        DO i=1,lsm
[(408211) BashCMDExecutor]  -          pres(i)=ppsl(i)/100.
[(408211) BashCMDExecutor]  -        ENDDO
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        time_value(1) = k-1        ! This ensures that the time coordinate variable takes time step of 3 hrs in each file created beginning with time=0
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        write (*,*)' --------------------------- '
[(408211) BashCMDExecutor]  -        write (*,*)'All done.  Have a nice day. '
[(408211) BashCMDExecutor]  -        write (*,*)'STARTING NETCDF FILE CREATION NOW           '
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  !--Now create the strings to be written to the netcdf file as global attribute. This information will be displayed in the header of the file with 'ncdump -h filename.nc'
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        write(gt1,'(i2)')(idat(1:1))
[(408211) BashCMDExecutor]  -  ! This converts the first part of idat to character array gt1
[(408211) BashCMDExecutor]  -  !      print*,'gt1 is ',gt1
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        write(gt2,'(i2)')(idat(2:2))
[(408211) BashCMDExecutor]  -        write(gt3,'(i4)')(idat(3:3))
[(408211) BashCMDExecutor]  -        write(gt4,'(i2)')ihrst
[(408211) BashCMDExecutor]  -        write(gt5,'(i2)')ihr
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -  ! global_title will be written in the time variable
[(408211) BashCMDExecutor]  -  
[(408211) BashCMDExecutor]  -        if (idat(2).lt.10) then
[(408211) BashCMDExecutor]  -          write(gt6,'(i1)')(idat(2:2))
[(408211) BashCMDExecutor]  -          global_title1='hours since '//gt3//'-0'//gt6
[(408211) BashCMDExecutor]  -        else
[(408211) BashCMDExecutor]  -          global_title1='hours since '//gt3//'-'//gt2
[(408211) BashCMDExecutor]  -        endif
[(408212) BashCMDExecutor]  -       
[(408212) BashCMDExecutor]  -        if (idat(1).lt.10) then
[(408212) BashCMDExecutor]  -          write(gt7,'(i1)')(idat(1:1))
[(408212) BashCMDExecutor]  -          global_title2='-0'//gt7//' '//gt4//':00'
[(408212) BashCMDExecutor]  -        else
[(408212) BashCMDExecutor]  -          global_title2='-'//gt1//' '//gt4//':00'
[(408212) BashCMDExecutor]  -        endif
[(408212) BashCMDExecutor]  -        global_title=global_title1//global_title2
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        print*,'global title is ',global_title
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !    Above print statement should look like this:   global_title='*** Output: 24. 1.2008 at 12 UTC + 0h'
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  C*******  Netcdf WRITE OUT THE FIELD ********************************  
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_CREATE(file_name_out,0,NCID)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_DIM(NCID,'time',NF_UNLIMITED,TIMDIM_ID)
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'DIM time created'    
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_DIM(NCID,'west_east',im-2,LONGDIM_ID) ! the first and last values of input variables are not to be written as they are the boundary conditions...hence im-2 and jm-2 (which is 769,541)
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)      
[(408212) BashCMDExecutor]  -        print*,'DIM west_east created'      
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_DIM(NCID,'south_north',jm-2,LATDIM_ID)   
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'DIM sout_north created'    
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_DIM(NCID,'pres',lsm-2,LEVDIM_ID)    !! lm is 64, was lsm (30) in pressure version   
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'DIM bottom_top created'   
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !      STATUS=NF_DEF_DIM(NCID,'nwets',nwets,NWETSDIM_ID)   
[(408212) BashCMDExecutor]  -  !      IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -  !      print*,'DIM nwets created'   
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !!!CHEM_CP
[(408212) BashCMDExecutor]  -  !      STATUS=NF_DEF_DIM(NCID,'naero',8,NAERODIM_ID)
[(408212) BashCMDExecutor]  -  !      IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -  !      print*,'DIM naero created'
[(408212) BashCMDExecutor]  -  !!!CHEM_CP
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !-----------Define the Netcdf VARIABLES Dimension ID-------------------------
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        DIMID_1=(/ LONGDIM_ID,LATDIM_ID,LEVDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -        DIMID_2=(/ LONGDIM_ID,LATDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -  !      DIMID_3=(/ NWETSDIM_ID,LONGDIM_ID,LATDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -  !!!CHEM_CP
[(408212) BashCMDExecutor]  -  !      DIMID_10=(/ NAERODIM_ID,LONGDIM_ID,LATDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        DIMID_4=(/ TIMDIM_ID /)
[(408212) BashCMDExecutor]  -        DIMID_5=(/ LEVDIM_ID /)
[(408212) BashCMDExecutor]  -        DIMID_6=(/ LATDIM_ID /)
[(408212) BashCMDExecutor]  -        DIMID_7=(/ LONGDIM_ID /)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        DIMID_8=(/ LATDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -        DIMID_9=(/ LONGDIM_ID,TIMDIM_ID /)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  ! Note: The dimensions in netcdf file need to be defined as coordinate variables (and filled with values) so that the file becomes CF compliant and can be read directly in Grads, IDV etc. All attributes are important for CF compliant.
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !------------Define coordinate variables...without which the file doesn't become CF complaint-------
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'south_north',NF_REAL,1,DIMID_6,LATVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR south_north created'
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LATVAR_ID,'units',1,' ')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LATVAR_ID,'title',7,'index j')   
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LATVAR_ID,'axis',1,'Y')   
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LATVAR_ID,
[(408212) BashCMDExecutor]  -       & 'long_name',7,'index j')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'west_east',NF_REAL,1,DIMID_7,LONGVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR west_east created'
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LONGVAR_ID,'units',1,' ')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LONGVAR_ID,'title',7,'index i')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LONGVAR_ID,'axis',1,'X')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LONGVAR_ID,
[(408212) BashCMDExecutor]  -       & 'long_name',7,'index i')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'pres',NF_REAL,1,DIMID_5,LEVVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR level created'
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LEVVAR_ID,'units',3,'hPa')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LEVVAR_ID,'title',14,
[(408212) BashCMDExecutor]  -       & 'pressure level')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,LEVVAR_ID,
[(408212) BashCMDExecutor]  -       & 'long_name',14,'pressure level')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'time',NF_INT,1,DIMID_4,TIMVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR time created'
[(408212) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, TIMVAR_ID, 'units', 28, 
[(408212) BashCMDExecutor]  -       &global_title)
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,TIMVAR_ID,'title',4,'time')   
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,TIMVAR_ID,'long_name',4,'time')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !-----------Define the other Netcdf VARIABLES ID and their attributes----First, GLAT/GLON---------
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  !CPEREZ      STATUS=NF_DEF_VAR(NCID,'glat',NF_REAL,2,DIMID_8,GLATVAR_ID) 
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'lat',NF_REAL,2,DIMID_2,GLATVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR GLAT created'
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLATVAR_ID,'units',13,'degrees_north')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLATVAR_ID,'title',8,'latitude')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLATVAR_ID,
[(408212) BashCMDExecutor]  -       & 'long_name',8,'latitude')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        STATUS=NF_DEF_VAR(NCID,'lon',NF_REAL,2,DIMID_2,GLONVAR_ID) 
[(408212) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408212) BashCMDExecutor]  -        print*,'VAR GLON created'
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLONVAR_ID,'units',12,'degrees_east')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLONVAR_ID,'title',9,'longitude')
[(408212) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,GLONVAR_ID,
[(408212) BashCMDExecutor]  -       & 'long_name',9,'longitude')
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -  ! Meteo outputs: 
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_T, 'tsl', NF_REAL, TSL_ID,
[(408212) BashCMDExecutor]  -       &    4, DIMID_1, 'K', 'temperature', 'temperature', 'lon lat',
[(408212) BashCMDExecutor]  -       &    fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_Q, 'qsl', NF_REAL, QSL_ID,
[(408212) BashCMDExecutor]  -       &    4, DIMID_1, 'kg kg-1', 'specific humidity',
[(408212) BashCMDExecutor]  -       &    'specific humidity', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -        
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_HSL, 'hsl', NF_REAL, HSL_ID,
[(408212) BashCMDExecutor]  -       &    4, DIMID_1, 'm', 'height',
[(408212) BashCMDExecutor]  -       &    'height', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CLDFRA, 'cldfra', NF_REAL,
[(408212) BashCMDExecutor]  -       &    CLDFRA_ID, 4, DIMID_1, ' ', 'cloud_fraction',
[(408212) BashCMDExecutor]  -       &    'cloud_fraction', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RLWTT, 'rlwtt', NF_REAL,
[(408212) BashCMDExecutor]  -       &    RLWTT_ID, 4, DIMID_1, 'K s-1', 'rlwtt',
[(408212) BashCMDExecutor]  -       &    'longwave_temperature_tendency', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RSWTT, 'rswtt', NF_REAL,
[(408212) BashCMDExecutor]  -       &    TSWTT_ID, 4, DIMID_1, 'K s-1', 'rswtt',
[(408212) BashCMDExecutor]  -       &    'shortwave_temperature_tendency', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_F_ICE, 'f_ice', NF_REAL,
[(408212) BashCMDExecutor]  -       &    F_ICE_ID, 4, DIMID_1, ' ', 'f_ice',
[(408212) BashCMDExecutor]  -       &    'condensate_ice_fraction', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_F_RIMEF, 'f_rimef', NF_REAL,
[(408212) BashCMDExecutor]  -       &    F_RIMEF_ID, 4, DIMID_1, ' ', 'f_rimef',
[(408212) BashCMDExecutor]  -       &    'rime_factor', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_F_RAIN, 'f_rain', NF_REAL,
[(408212) BashCMDExecutor]  -       &    F_RAIN_ID, 4, DIMID_1, ' ', 'f_rain',
[(408212) BashCMDExecutor]  -       &    'condensate_rain_fraction', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_U, 'usl_h', NF_REAL,
[(408212) BashCMDExecutor]  -       &    USL_ID, 4, DIMID_1, 'm s-1', 'u-wind',
[(408212) BashCMDExecutor]  -       &    'u wind component profile', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_V, 'vsl_h', NF_REAL,
[(408212) BashCMDExecutor]  -       &    VSL_ID, 4, DIMID_1, 'm s-1', 'v-wind',
[(408212) BashCMDExecutor]  -       &    'v wind component profile', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CW, 'cw', NF_REAL,
[(408212) BashCMDExecutor]  -       &    CW_ID, 4, DIMID_1, 'dummy', 'cw-UMO',
[(408212) BashCMDExecutor]  -       &    'cw-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_Q2, 'q2', NF_REAL,
[(408212) BashCMDExecutor]  -       &    Q2_ID, 4, DIMID_1, ' ', 'humidity_mixing_ratio_2-m',
[(408212) BashCMDExecutor]  -       &    'diagnostic_2-m_mixing_ratio_from_surface_layer_and_lsm',
[(408212) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_W, 'w', NF_REAL,
[(408212) BashCMDExecutor]  -       &    WSL_ID, 4, DIMID_1, 'dummy', 'w-UMO',
[(408212) BashCMDExecutor]  -       &    'w-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SLP, 'slp', NF_REAL,
[(408212) BashCMDExecutor]  -       &    SLP_ID, 3, DIMID_2, 'Pa', 'sea level pressure',
[(408212) BashCMDExecutor]  -       &    'sea level pressure', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_PD, 'pd', NF_REAL,
[(408212) BashCMDExecutor]  -       &    PD_ID, 3, DIMID_2, 'dummy', 'pd-UMO',
[(408212) BashCMDExecutor]  -       &    'pd-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_FIS, 'fis', NF_REAL,
[(408212) BashCMDExecutor]  -       &    FIS_ID, 3, DIMID_2, 'm2 s-2', 'surface_geopotential',
[(408212) BashCMDExecutor]  -       &    'surface_geopotential', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_PINT, 'pint', NF_REAL,
[(408212) BashCMDExecutor]  -       &    PINTS_ID, 3, DIMID_2, 'dummy', 'pint-UMO',
[(408212) BashCMDExecutor]  -       &    'pint-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_THS, 'ths', NF_REAL,
[(408212) BashCMDExecutor]  -       &    THS_ID, 3, DIMID_2, 'K', 'surface_potential_temperature',
[(408212) BashCMDExecutor]  -       &    'surface_theta', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_QS, 'qs', NF_REAL,
[(408212) BashCMDExecutor]  -       &    QS_ID, 3, DIMID_2, ' ', 'specific_humidity',
[(408212) BashCMDExecutor]  -       &    'specific_humidity_at_surface', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SNO, 'sno', NF_REAL,
[(408212) BashCMDExecutor]  -       &    SNO_ID, 3, DIMID_2, 'kg m-2',
[(408212) BashCMDExecutor]  -       &    'liquid_water_content_of_snow_layer',
[(408212) BashCMDExecutor]  -       &    'liquid_water_content_of_snow_layer', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ROF, 'rof', NF_REAL,
[(408212) BashCMDExecutor]  -       &    ROF_ID, 3, DIMID_2, 'dummy', 'rof-UMO',
[(408212) BashCMDExecutor]  -       &    'rof-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_USTAR, 'ustar', NF_REAL,
[(408212) BashCMDExecutor]  -       &    USTAR_ID, 3, DIMID_2, 'm s-1', 'friction velocity',
[(408212) BashCMDExecutor]  -       &    'friction velocity', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_AKHS, 'akhs', NF_REAL,
[(408212) BashCMDExecutor]  -       &    AKHS_ID, 3, DIMID_2, 'm s-1',
[(408212) BashCMDExecutor]  -       &    'sfc_exch_coeff_of_momentum_from_Mellor-Yamada-Janjic(MYJ)',
[(408212) BashCMDExecutor]  -       &    'sfc_exch_coeff_t_&_q_div_by_delta_z_from_MYJ', 'lon lat',
[(408212) BashCMDExecutor]  -       &    fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_AKMS, 'akms', NF_REAL,
[(408212) BashCMDExecutor]  -       &    AKMS_ID, 3, DIMID_2, 'm s-1',
[(408212) BashCMDExecutor]  -       &    'sfc_exch_coeff_of_momentum_from_Mellor-Yamada-Janjic(MYJ)',
[(408212) BashCMDExecutor]  -       &    'sfc_exch_momentum_div_by_delta_z_from_MYJ', 'lon lat',
[(408212) BashCMDExecutor]  -       &    fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ACPREC, 'acprec', NF_REAL,
[(408212) BashCMDExecutor]  -       &    ACPREC_ID, 3, DIMID_2, 'm', 'accumulated precipitation',
[(408212) BashCMDExecutor]  -       &    'accumulated precipitation', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CUPREC, 'cuprec', NF_REAL,
[(408212) BashCMDExecutor]  -       &    CUPREC_ID, 3, DIMID_2, 'm', 'convective_precipitation',
[(408212) BashCMDExecutor]  -       &    'convective_precipitation', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_U10, 'u10', NF_REAL,
[(408212) BashCMDExecutor]  -       &    U10_ID, 3, DIMID_2, 'm s-1', '10m u wind',
[(408212) BashCMDExecutor]  -       &    '10m u wind', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_V10, 'v10', NF_REAL,
[(408212) BashCMDExecutor]  -       &    V10_ID, 3, DIMID_2, 'm s-1', '10m v wind',
[(408212) BashCMDExecutor]  -       &    '10m v wind', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_TH10, 'th10', NF_REAL,
[(408212) BashCMDExecutor]  -       &    TH10_ID, 3, DIMID_2, 'K',
[(408212) BashCMDExecutor]  -       &    'surface_potential_temperature_at_10-m',
[(408212) BashCMDExecutor]  -       &    'diagnostic 10-m theta from MYJ', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_Q10, 'Q10', NF_REAL,
[(408212) BashCMDExecutor]  -       &    Q10_ID, 3, DIMID_2, ' ', 'specific_humidity_at_10-m',
[(408212) BashCMDExecutor]  -       &    'diagnostic 10-m specific humidity from MYJ', 'lon lat',
[(408212) BashCMDExecutor]  -       &    fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_TH02, 'th02', NF_REAL,
[(408212) BashCMDExecutor]  -       &    TH02_ID, 3, DIMID_2, 'K',
[(408212) BashCMDExecutor]  -       &    'surface_potential_temperature_at_2-m',
[(408212) BashCMDExecutor]  -       &    'diagnostic 2-m theta from surface layer and lsm', 'lon lat',
[(408212) BashCMDExecutor]  -       &    fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_Q02, 'q02', NF_REAL,
[(408212) BashCMDExecutor]  -       &    Q02_ID, 3, DIMID_2, 'kg kg-1', '2m specific humidity',
[(408212) BashCMDExecutor]  -       &    '2m specific humidity', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SLWD, 'slwd', NF_REAL,
[(408212) BashCMDExecutor]  -       &    SLWD_ID, 3, DIMID_2, 'dummy', 'slwd-UMO',
[(408212) BashCMDExecutor]  -       &    'slwd-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SSW, 'ssw', NF_REAL,
[(408212) BashCMDExecutor]  -       &    SSW_ID, 3, DIMID_2, 'dummy', 'ssw-UMO',
[(408212) BashCMDExecutor]  -       &    'ssw-UMO', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_THZ0, 'thz0', NF_REAL,
[(408212) BashCMDExecutor]  -       &    THZ0_ID, 3, DIMID_2, 'K',
[(408212) BashCMDExecutor]  -       &    'potential temperature at roughness length',
[(408212) BashCMDExecutor]  -       &    'theta_at_top_of_viscous_sub_layer', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_QZ0, 'qz0', NF_REAL,
[(408212) BashCMDExecutor]  -       &    QZ0_ID, 3, DIMID_2, 'kg m-3',
[(408212) BashCMDExecutor]  -       &    'specific_humidity_at_roughness_length',
[(408212) BashCMDExecutor]  -       &    'specific_humidity_at_top_of_viscous_sub_layer',
[(408212) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_Z0, 'z0', NF_REAL,
[(408212) BashCMDExecutor]  -       &    Z0_ID, 3, DIMID_2, 'm', 'background_roughness_length',
[(408212) BashCMDExecutor]  -       &    'background_roughness_length', 'lon lat', fill_value)
[(408212) BashCMDExecutor]  -  
[(408212) BashCMDExecutor]  -        call declare_variable( NCID, CFG_T2, 't2', NF_REAL,
[(408213) BashCMDExecutor]  -       &    T2_ID, 3, DIMID_2, 'K', '2m temperature',
[(408213) BashCMDExecutor]  -       &    '2m temperature', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_MAXT2, 'maxt2', NF_REAL,
[(408213) BashCMDExecutor]  -       &    MAXT2_ID, 3, DIMID_2, 'K', 'max 2m temperature',
[(408213) BashCMDExecutor]  -       &    'max 2m temperature', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_MINT2, 'mint2', NF_REAL,
[(408213) BashCMDExecutor]  -       &    MINT2_ID, 3, DIMID_2, 'K', 'min 2m temperature',
[(408213) BashCMDExecutor]  -       &    'min 2m temperature', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_PS, 'ps', NF_REAL,
[(408213) BashCMDExecutor]  -       &    PS_ID, 3, DIMID_2, 'Pa', 'surface pressure',
[(408213) BashCMDExecutor]  -       &    'surface pressure', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_PSHLTR, 'pshltr', NF_REAL,
[(408213) BashCMDExecutor]  -       &    PSHLTR_ID, 3, DIMID_2, 'Pa', '2m pressure',
[(408213) BashCMDExecutor]  -       &    '2m pressure', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  ! Radiative output:
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ACFRCV, 'acfrcv', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ACFRCV_ID, 3, DIMID_2, ' ', 'acfrcv',
[(408213) BashCMDExecutor]  -       &    'acfrcv', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ACFRST, 'acfrst', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ACFRST_ID, 3, DIMID_2, ' ', 'acfrst',
[(408213) BashCMDExecutor]  -       &    'acfrst', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ALBASE, 'albase', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ALBASE_ID, 3, DIMID_2, ' ', 'albase',
[(408213) BashCMDExecutor]  -       &    'albase', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ALWIN, 'alwin', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ALWIN_ID, 3, DIMID_2, ' ', 'alwin',
[(408213) BashCMDExecutor]  -       &    'alwin', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ALWOUT, 'alwout', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ALWOUT_ID, 3, DIMID_2, ' ', 'alwout',
[(408213) BashCMDExecutor]  -       &    'alwout', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ALWTOA, 'alwtoa', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ALWTOA_ID, 3, DIMID_2, ' ', 'alwtoa',
[(408213) BashCMDExecutor]  -       &    'alwtoa', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ASWIN, 'aswin', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ASWIN_ID, 3, DIMID_2, 'W m-2', 'aswin',
[(408213) BashCMDExecutor]  -       &    'acummulated incoming shortwave at ground', 'lon lat',
[(408213) BashCMDExecutor]  -       &    fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ASWOUT, 'aswout', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ASWOUT_ID, 3, DIMID_2, ' ', 'aswout',
[(408213) BashCMDExecutor]  -       &    'aswout', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ASWTOA, 'aswtoa', NF_REAL,
[(408213) BashCMDExecutor]  -       &    ASWTOA_ID, 3, DIMID_2, ' ', 'aswtoa',
[(408213) BashCMDExecutor]  -       &    'aswtoa', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_BGROFF, 'bgroff', NF_REAL,
[(408213) BashCMDExecutor]  -       &    BGROFF_ID, 3, DIMID_2, ' ', 'bgroff',
[(408213) BashCMDExecutor]  -       &    'bgroff', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CFRACH, 'cfrach', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CFRACH_ID, 3, DIMID_2, ' ', 'cfrach',
[(408213) BashCMDExecutor]  -       &    'cfrach', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CFRACL, 'cfracl', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CFRACL_ID, 3, DIMID_2, ' ', 'cfracl',
[(408213) BashCMDExecutor]  -       &    'cfracl', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CFRACM, 'cfracm', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CFRACM_ID, 3, DIMID_2, ' ', 'cfracm',
[(408213) BashCMDExecutor]  -       &    'cfracm', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CLDEFI, 'cldefi', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CLDEFI_ID, 3, DIMID_2, ' ', 'cldefi',
[(408213) BashCMDExecutor]  -       &    'cldefi', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CMC, 'cmc', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CMC_ID, 3, DIMID_2, ' ', 'cmc',
[(408213) BashCMDExecutor]  -       &    'cmc', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CNVBOT, 'cnvbot', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CNVBOT_ID, 3, DIMID_2, ' ', 'cnvbot',
[(408213) BashCMDExecutor]  -       &    'cnvbot', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CNVTOP, 'cnvtop', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CNVTOP_ID, 3, DIMID_2, ' ', 'cnvtop',
[(408213) BashCMDExecutor]  -       &    'cnvtop', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CPRATE, 'cprate', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CPRATE_ID, 3, DIMID_2, ' ', 'cprate',
[(408213) BashCMDExecutor]  -       &    'cprate', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CUPPT, 'cuppt', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CUPPT_ID, 3, DIMID_2, ' ', 'cuppt',
[(408213) BashCMDExecutor]  -       &    'cuppt', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CZEN, 'czen', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CZEN_ID, 3, DIMID_2, ' ', 'czen',
[(408213) BashCMDExecutor]  -       &    'czen', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_CZMEAN, 'czmean', NF_REAL,
[(408213) BashCMDExecutor]  -       &    CZMEAN_ID, 3, DIMID_2, ' ', 'czmean',
[(408213) BashCMDExecutor]  -       &    'czmean', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_MXSNAL, 'mxsnal', NF_REAL,
[(408213) BashCMDExecutor]  -       &    MXSNAL_ID, 3, DIMID_2, ' ', 'mxsnal',
[(408213) BashCMDExecutor]  -       &    'mxsnal', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RADOT, 'radot', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RADOT_ID, 3, DIMID_2, ' ', 'radot',
[(408213) BashCMDExecutor]  -       &    'radot', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RLWIN, 'rlwin', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RLWIN_ID, 3, DIMID_2, 'kg m-3', 'rlwin',
[(408213) BashCMDExecutor]  -       &    'rlwin', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RLWTOA, 'rlwtoa', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RLWTOA_ID, 3, DIMID_2, ' ', 'rlwtoa',
[(408213) BashCMDExecutor]  -       &    'rlwtoa', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RSWIN, 'rswin', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RSWIN_ID, 3, DIMID_2, 'W m-2', 'rswin',
[(408213) BashCMDExecutor]  -       &    'incoming shortwave at ground', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RSWINC, 'rswinc', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RSWINC_ID, 3, DIMID_2, ' ', 'rswinc',
[(408213) BashCMDExecutor]  -       &    'rswinc', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_RSWOUT, 'rswout', NF_REAL,
[(408213) BashCMDExecutor]  -       &    RSWOUT_ID, 3, DIMID_2, ' ', 'rswout',
[(408213) BashCMDExecutor]  -       &    'tswout', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SFCLHX, 'sfclhx', NF_REAL,
[(408213) BashCMDExecutor]  -       &    SFCLHX_ID, 3, DIMID_2, ' ', 'sfclhx',
[(408213) BashCMDExecutor]  -       &    'sfclhx', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SFCSHX, 'sfcshx', NF_REAL,
[(408213) BashCMDExecutor]  -       &    SFCSHX_ID, 3, DIMID_2, ' ', 'sfcshx',
[(408213) BashCMDExecutor]  -       &    'sfcshx', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SIGT4, 'sigt4', NF_REAL,
[(408213) BashCMDExecutor]  -       &    SIGT4_ID, 3, DIMID_2, ' ', 'sigt4',
[(408213) BashCMDExecutor]  -       &    'sigt4', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_EPSR, 'epsr', NF_REAL,
[(408213) BashCMDExecutor]  -       &    EPSR_ID, 3, DIMID_2, 'dummy', 'epsr-UMO',
[(408213) BashCMDExecutor]  -       &    'epsr-UMO', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_TGT, 'tg', NF_REAL,
[(408213) BashCMDExecutor]  -  !     &    TG_ID, 4, DIMID_3, 'K', 'ground_temperature',
[(408213) BashCMDExecutor]  -  !     &    'ground_temperature', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_WGT, 'wg', NF_REAL,
[(408213) BashCMDExecutor]  -  !     &    WG_ID, 4, DIMID_3, 'dummy', 'wg-UMO',
[(408213) BashCMDExecutor]  -  !     &    'wg-UMO', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  ! Dust outputs:
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_CONC, 'dust_conc', NF_REAL,
[(408213) BashCMDExecutor]  -       &    DUST_CONC_ID, 4, DIMID_1, 'kg m-3',
[(408213) BashCMDExecutor]  -       &    'dust concentration profile',
[(408213) BashCMDExecutor]  -       &    'dust concentration profile', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_550, 'dust_aod_550',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_550_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 550 nm','dust optical depth at 550 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_350, 'dust_aod_350',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_350_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 350 nm','dust optical depth at 350 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_450, 'dust_aod_450',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_450_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 450 nm','dust optical depth at 450 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_500, 'dust_aod_500',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_500_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 500 nm','dust optical depth at 500 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_650, 'dust_aod_650',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_650_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 650 nm','dust optical depth at 650 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_800, 'dust_aod_800',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_800_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 800 nm','dust optical depth at 800 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_AOD_900, 'dust_aod_900',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_AOD_900_ID, 3, DIMID_2, ' ',
[(408213) BashCMDExecutor]  -       &    'dust optical depth at 900 nm','dust optical depth at 900 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_EXT_550_SFC,
[(408213) BashCMDExecutor]  -       &    'dust_ext_550_sfc', NF_REAL, DUST_EXT_550_SFC_ID, 3,
[(408213) BashCMDExecutor]  -       &    DIMID_2, 'm-1',
[(408213) BashCMDExecutor]  -       &    'near surface dust extinction coefficient at 550 nm',
[(408213) BashCMDExecutor]  -       &    'near surface dust extinction coefficient at 550 nm',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_SCONC, 'dust_sconc',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_SCONC_ID, 3, DIMID_2, 'kg m-3',
[(408213) BashCMDExecutor]  -       &    'dust near surface concentration',
[(408213) BashCMDExecutor]  -       &    'dust near surface concentration', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_SCONC02, 'dust_sconc02',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_SCONC02_ID, 3, DIMID_2, 'kg m-3',
[(408213) BashCMDExecutor]  -       &    'dust 2m concentration', 'dust 2m concentration',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_SCONC10, 'dust_sconc10',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_SCONC10_ID, 3, DIMID_2, 'kg m-3',
[(408213) BashCMDExecutor]  -       &    'dust 10m concentration', 'dust 10m concentration',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_PM10_SCONC10,
[(408213) BashCMDExecutor]  -       &    'dust_pm10_sconc10', NF_REAL, DUST_PM10_SCONC10_ID, 3,
[(408213) BashCMDExecutor]  -       &    DIMID_2, 'kg m-3', 'dust PM10 10m concentration',
[(408213) BashCMDExecutor]  -       &    'dust PM10 10m concentration', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_PM25_SCONC10,
[(408213) BashCMDExecutor]  -       &    'dust_pm25_sconc10', NF_REAL, DUST_PM25_SCONC10_ID, 3,
[(408213) BashCMDExecutor]  -       &    DIMID_2, 'kg m-3', 'dust PM2.5 10m concentration',
[(408213) BashCMDExecutor]  -       &    'dust PM2.5 10m concentration', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_WETDEP_ACPREC,
[(408213) BashCMDExecutor]  -       &    'dust_wetdep', NF_REAL, DUST_WETDEP_ACPREC_ID, 3,
[(408213) BashCMDExecutor]  -       &    DIMID_2, 'kg m-2', 'accumulated dust wet deposition',
[(408213) BashCMDExecutor]  -       &    'accumulated dust wet deposition', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_WETDEP_CUPREC,
[(408213) BashCMDExecutor]  -       &    'dust_wetdep_cuprec', NF_REAL, DUST_WETDEP_CUPREC_ID, 3,
[(408213) BashCMDExecutor]  -       &    DIMID_2, 'kg m-2', 'cuprec: dust wet deposition',
[(408213) BashCMDExecutor]  -       &    'cuprec: dust wet deposition', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_DRYDEP, 'dust_drydep',
[(408213) BashCMDExecutor]  -       &    NF_REAL, DUST_DRYDEP_ID, 3, DIMID_2, 'kg m-2',
[(408213) BashCMDExecutor]  -       &    'accumulated dust dry deposition and gravitational settling',
[(408213) BashCMDExecutor]  -       &    'accumulated dust dry deposition and gravitational settling',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_LOAD, 'dust_load', NF_REAL,
[(408213) BashCMDExecutor]  -       &    DUST_LOAD_ID, 3, DIMID_2, 'kg m-2', 'dust loading',
[(408213) BashCMDExecutor]  -       &    'dust loading', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_EMI, 'dust_emi', NF_REAL,
[(408213) BashCMDExecutor]  -       &    DUST_EMI_ID, 3, DIMID_2, 'kg m-2',
[(408213) BashCMDExecutor]  -       &    'accumulated dust emission', 'accumulated dust emission',
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        call declare_variable( NCID, CFG_DUST_EXT_550,
[(408213) BashCMDExecutor]  -       &     'dust_ext_550', NF_REAL, DUST_EXT_550_ID, 4, DIMID_1, 'm-1',
[(408213) BashCMDExecutor]  -       &    'dust extinction coeff at 550',
[(408213) BashCMDExecutor]  -       &    'dust extinction coeff at 550', 'lon lat', fill_value)
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -  ! Dust bin outputs
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        do bin=1,kps
[(408213) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408213) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_LOAD_BIN,
[(408213) BashCMDExecutor]  -       &    'dust_load_b'//varname, NF_REAL, dust_load_bin_ids(bin),
[(408213) BashCMDExecutor]  -       &    3, DIMID_2, 'kg m-3', 'dust loading bin '//varname,
[(408213) BashCMDExecutor]  -       &    'dust loading bin '//varname,
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -        enddo
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        do bin=1,kps
[(408213) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408213) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_WETDEP_ACPREC_BIN,
[(408213) BashCMDExecutor]  -       &    'dust_wetdep_b'//varname,
[(408213) BashCMDExecutor]  -       &    NF_REAL, dust_wetdep_acprec_bin_ids(bin), 3, DIMID_2,
[(408213) BashCMDExecutor]  -       &    'kg m-3', 'dust wetdep acprec bin '//varname,
[(408213) BashCMDExecutor]  -       &    'dust wetdep acprec bin '//varname,
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -        enddo
[(408213) BashCMDExecutor]  -        
[(408213) BashCMDExecutor]  -        do bin=1,kps
[(408213) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408213) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_WETDEP_CUPREC_BIN,
[(408213) BashCMDExecutor]  -       &    'dust_wetdep_cuprec_b'//varname,
[(408213) BashCMDExecutor]  -       &    NF_REAL, dust_wetdep_cuprec_bin_ids(bin), 3, DIMID_2,
[(408213) BashCMDExecutor]  -       &    'kg m-3', 'dust wetdep cuprec bin '//varname ,
[(408213) BashCMDExecutor]  -       &    'dust wetdep cuprec bin '//varname,
[(408213) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408213) BashCMDExecutor]  -        enddo
[(408213) BashCMDExecutor]  -  
[(408213) BashCMDExecutor]  -        do bin=1,kps
[(408213) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408213) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_DRYDEP_BIN,
[(408213) BashCMDExecutor]  -       &    'dust_drydep_b'//varname,
[(408213) BashCMDExecutor]  -       &    NF_REAL, dust_drydep_bin_ids(bin), 3, DIMID_2, 'kg m-3',
[(408214) BashCMDExecutor]  -       &    'dust drydep bin '//varname , 'dust drydep bin '//varname,
[(408214) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -        do bin=1,kps
[(408214) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408214) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_AOD_550_BIN,
[(408214) BashCMDExecutor]  -       &    'dust_aod_550_b'//varname,
[(408214) BashCMDExecutor]  -       &    NF_REAL, dust_aod550_bin_ids(bin), 3, DIMID_2, ' ',
[(408214) BashCMDExecutor]  -       &    'dust aod 550 bin '//varname , 'dust aod 550 bin '//varname,
[(408214) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -        do bin=1,kps
[(408214) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408214) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_EMI_BIN,
[(408214) BashCMDExecutor]  -       &    'dust_emi_b'//varname, NF_REAL, dust_emi_bin_ids(bin),
[(408214) BashCMDExecutor]  -       &     3, DIMID_2, 'kg m-2',
[(408214) BashCMDExecutor]  -       &    'dust emission bin '//varname , 'dust emission bin '//varname,
[(408214) BashCMDExecutor]  -       &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -        do bin=1,kps
[(408214) BashCMDExecutor]  -          write (varname, '(i1)') bin
[(408214) BashCMDExecutor]  -          call declare_variable( NCID, CFG_DUST_SCONC_BIN,
[(408214) BashCMDExecutor]  -       &    'dust_sconc_b'//varname, NF_REAL, dust_sconc_bin_ids(bin),
[(408214) BashCMDExecutor]  -       &    3, DIMID_2, 'kg m-3', 'dust sconc bin '//varname ,
[(408214) BashCMDExecutor]  -       &    'dust sconc bin '//varname, 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  ! Aero outputs:
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_AERO_ACPREC, 'aero_acprec',
[(408214) BashCMDExecutor]  -  !     &    NF_REAL, AERO_ACPREC_ID, 4, DIMID_10, 'kg m-2',
[(408214) BashCMDExecutor]  -  !     &    'aerosol wet scanv', 'aerosol wet scanv',
[(408214) BashCMDExecutor]  -  !     &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  !
[(408214) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_AERO_CUPREC, 'aero_cuprec',
[(408214) BashCMDExecutor]  -  !     &    NF_REAL, AERO_CUPREC_ID, 4, DIMID_10, 'kg m-2',
[(408214) BashCMDExecutor]  -  !     &    'aero conv wet scanv', 'aero conv wet scanv',
[(408214) BashCMDExecutor]  -  !     &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  !
[(408214) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_AERO_DEPDRY, 'aero_depdry',
[(408214) BashCMDExecutor]  -  !     &    NF_REAL, AERO_DEPDRY_ID, 4, DIMID_10, 'kg m-2',
[(408214) BashCMDExecutor]  -  !     &    'aero dust dry deposition', 'aero dust dry deposition',
[(408214) BashCMDExecutor]  -  !     &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  !
[(408214) BashCMDExecutor]  -  !      call declare_variable( NCID, CFG_AERO_DLOAD, 'aero_dload',
[(408214) BashCMDExecutor]  -  !     &    NF_REAL, AERO_DEPDRY_ID, 4, DIMID_10, 'kg m-2',
[(408214) BashCMDExecutor]  -  !     &    'aero dust load', 'aero dust load',
[(408214) BashCMDExecutor]  -  !     &    'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  ! Land outputs:
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SM, 'sm', NF_REAL,
[(408214) BashCMDExecutor]  -       &    SM_ID, 3, DIMID_2, ' ', 'sea_mask',
[(408214) BashCMDExecutor]  -       &    'land_sea_mask, 1 = "Sea" 0 = "Land"', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SICE, 'sice', NF_REAL,
[(408214) BashCMDExecutor]  -       &    SICE_ID, 3, DIMID_2, ' ', 'sea_ice_fraction',
[(408214) BashCMDExecutor]  -       &    'sea_ice_fraction', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_SST, 'sst', NF_REAL,
[(408214) BashCMDExecutor]  -       &    SST_ID, 3, DIMID_2, 'K', 'sea_surface_temperature',
[(408214) BashCMDExecutor]  -       &    'sea_surface_temperature', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_INSOIL, 'insoil', NF_REAL,
[(408214) BashCMDExecutor]  -       &    INSOIL_ID, 3, DIMID_2, 'dumy', 'insoil-UMO',
[(408214) BashCMDExecutor]  -       &    'insoil-UMO', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_INVEG, 'inveg', NF_REAL,
[(408214) BashCMDExecutor]  -       &    INVEG_ID, 3, DIMID_2, 'dummy', 'inveg-UMO',
[(408214) BashCMDExecutor]  -       &    'inveg-UMO', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_VEGFRC, 'vegfrc', NF_REAL,
[(408214) BashCMDExecutor]  -       &    VEGFRC_ID, 3, DIMID_2, ' ', 'vegetation area fraction',
[(408214) BashCMDExecutor]  -       &    'vegetation area fraction', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        call declare_variable( NCID, CFG_ALBEDO, 'albedo', NF_REAL,
[(408214) BashCMDExecutor]  -       &    ALBEDO_ID, 3, DIMID_2, ' ', 'albedo',
[(408214) BashCMDExecutor]  -       &    'dynamic_albedo', 'lon lat', fill_value)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        print*,'All variables declared.'
[(408214) BashCMDExecutor]  -  !---------------Define Global Attributes-------------------------------
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS=NF_PUT_ATT_TEXT(NCID,NF_GLOBAL,'title',31,
[(408214) BashCMDExecutor]  -       &'Regional Forecast NMMB/BSC-Dust' )
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, NF_GLOBAL, 'History', 33, 
[(408214) BashCMDExecutor]  -       & 'Carlos Perez Garcia-Pando 2010-06')
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, NF_GLOBAL, 'Conventions', 6, 
[(408214) BashCMDExecutor]  -       & 'CF-1.2')
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, NF_GLOBAL, 'Source', 22, 
[(408214) BashCMDExecutor]  -       & 'NMMB/BSC-Dust Regional')
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, NF_GLOBAL, 'Grid_type', 48, 
[(408214) BashCMDExecutor]  -       & 'B-grid: vectors interpolated to scalar positions')
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS = nf_put_att_text(ncid, NF_GLOBAL, 'Map_Proj', 26,      ! **** If regional domain, then ammend to rotated lat-lon giving additional info such as new origin, pole etc ******** !
[(408214) BashCMDExecutor]  -       & 'Rotated latitude longitude')
[(408214) BashCMDExecutor]  -        IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        STATUS=NF_ENDDEF(NCID)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        print*,'DEFINING DIMENSIONS AND VARIABLES COMPLETE'
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  ! Now begin writing the variables...there is a different count/start and do loop depending on the dimension of the variables.
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  !! *** V IMP ** south_north (LAT), west_east(LON) ARE WRITTEN FOR 1:JM-2, 1:IM-2 respectively..
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  ! ** This is because, if the boundary index 770,771(for IM) & 542,543(for JM) are included, the graphics (in Grads & other programs) are misplaced as Lat and long extend beyond 90 & 180 (Long should be from -180 to 180 and Lat -90 to 90). 
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        count(1) = jm-2
[(408214) BashCMDExecutor]  -        count(2) = 1
[(408214) BashCMDExecutor]  -        start(1) = 1
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        do i = 1, time_step
[(408214) BashCMDExecutor]  -          start(2) = i
[(408214) BashCMDExecutor]  -          STATUS=NF_PUT_VARA_REAL( NCID, LATVAR_ID, start, count,
[(408214) BashCMDExecutor]  -       &      south_north(1:JM-2) )
[(408214) BashCMDExecutor]  -          IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -          print*,'VALUES PUT IN south_north'
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        count(1) = im-2
[(408214) BashCMDExecutor]  -        count(2) = 1
[(408214) BashCMDExecutor]  -        start(1) = 1
[(408214) BashCMDExecutor]  -        do i = 1, time_step
[(408214) BashCMDExecutor]  -          start(2) = i
[(408214) BashCMDExecutor]  -          STATUS=NF_PUT_VARA_REAL( NCID, LONGVAR_ID, start, count,
[(408214) BashCMDExecutor]  -       &      west_east(1:IM-2) ) 
[(408214) BashCMDExecutor]  -          IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -          print*,'VALUES PUT IN west_east'
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        count(1) = lsm-2
[(408214) BashCMDExecutor]  -        count(2) = 1
[(408214) BashCMDExecutor]  -        start(1) = 1
[(408214) BashCMDExecutor]  -        do i = 1, lsm-2
[(408214) BashCMDExecutor]  -          rev_pres(lsm - 1 - i) = pres( i )
[(408214) BashCMDExecutor]  -        enddo 
[(408214) BashCMDExecutor]  -        do i = 1, time_step
[(408214) BashCMDExecutor]  -          start(2) = i
[(408214) BashCMDExecutor]  -          if ( reverse_presure.eq.1 ) then
[(408214) BashCMDExecutor]  -          STATUS=NF_PUT_VARA_INT( NCID, LEVVAR_ID, start, count,
[(408214) BashCMDExecutor]  -       &      rev_pres(1:LSM-2) )
[(408214) BashCMDExecutor]  -          else 
[(408214) BashCMDExecutor]  -          STATUS=NF_PUT_VARA_INT( NCID, LEVVAR_ID, start, count,
[(408214) BashCMDExecutor]  -       &      pres(1:LSM-2) )
[(408214) BashCMDExecutor]  -          endif
[(408214) BashCMDExecutor]  -          IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -          print*,'VALUES PUT IN lev'
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -        count(1) = 1
[(408214) BashCMDExecutor]  -        do i = 1, time_step
[(408214) BashCMDExecutor]  -          start(1) = i
[(408214) BashCMDExecutor]  -          STATUS=NF_PUT_VARA_INT( NCID, TIMVAR_ID, start, count,
[(408214) BashCMDExecutor]  -       &      time_value(i) )
[(408214) BashCMDExecutor]  -          IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -          print*,'Values written to time '
[(408214) BashCMDExecutor]  -        enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  ! Write to variables GLAT/GLON...!! *** V IMP ** ONLY GLAT, GLON ARE WRITTEN FOR 1:JM-2, 1:IM-2 respectively
[(408214) BashCMDExecutor]  -  !*** Other variables are written from 2:JM-1 , 2:IM-1 (to remove the western and eastern boundaries) ****!!!
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  !      count(1) = jm-2
[(408214) BashCMDExecutor]  -  !      count(2) = 1
[(408214) BashCMDExecutor]  -  !      start(1) = 1
[(408214) BashCMDExecutor]  -  !      do i = 1, time_step
[(408214) BashCMDExecutor]  -  !        start(2) = i
[(408214) BashCMDExecutor]  -  !      STATUS=NF_PUT_VARA_REAL(NCID,GLATVAR_ID,start,count,
[(408214) BashCMDExecutor]  -  !     & GLAT(1:JM-2))
[(408214) BashCMDExecutor]  -  !      IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  !      print*,'VALUES PUT IN Glat'
[(408214) BashCMDExecutor]  -  !       enddo
[(408214) BashCMDExecutor]  -  !
[(408214) BashCMDExecutor]  -  !       count(1) = im-2
[(408214) BashCMDExecutor]  -  !       count(2) = 1
[(408214) BashCMDExecutor]  -  !       start(1) = 1
[(408214) BashCMDExecutor]  -  !       do i = 1, time_step
[(408214) BashCMDExecutor]  -  !         start(2) = i
[(408214) BashCMDExecutor]  -  !         STATUS=NF_PUT_VARA_REAL(NCID,GLONVAR_ID,start,count,
[(408214) BashCMDExecutor]  -  !     &                           GLON(1:IM-2)) 
[(408214) BashCMDExecutor]  -  !         IF(STATUS.NE.NF_NOERR) PRINT*, NF_STRERROR(STATUS)
[(408214) BashCMDExecutor]  -  !         print*,'VALUES PUT IN Glon'
[(408214) BashCMDExecutor]  -  !       enddo
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  !-------  Inicializamos los vectores start y count  -------------------------
[(408214) BashCMDExecutor]  -      
[(408214) BashCMDExecutor]  -         count_sl(1) = im-2
[(408214) BashCMDExecutor]  -         count_sl(2) = jm-2
[(408214) BashCMDExecutor]  -         count_sl(3) = lsm-2
[(408214) BashCMDExecutor]  -         count_sl(4) = 1
[(408214) BashCMDExecutor]  -         start_sl(1) = 1
[(408214) BashCMDExecutor]  -         start_sl(2) = 1
[(408214) BashCMDExecutor]  -         start_sl(3) = 1
[(408214) BashCMDExecutor]  -         start_sl(4) = time_step
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         count_3(1) = im-2
[(408214) BashCMDExecutor]  -         count_3(2) = jm-2
[(408214) BashCMDExecutor]  -         count_3(3) = 1
[(408214) BashCMDExecutor]  -         start_3(1) = 1
[(408214) BashCMDExecutor]  -         start_3(2) = 1
[(408214) BashCMDExecutor]  -         start_3(3) = time_step
[(408214) BashCMDExecutor]  -         
[(408214) BashCMDExecutor]  -         count_w(1) = nwets
[(408214) BashCMDExecutor]  -         count_w(2) = im-2
[(408214) BashCMDExecutor]  -         count_w(3) = jm-2
[(408214) BashCMDExecutor]  -         count_w(4) = 1
[(408214) BashCMDExecutor]  -         start_w(1) = 1          
[(408214) BashCMDExecutor]  -         start_w(2) = 1
[(408214) BashCMDExecutor]  -         start_w(3) = 1
[(408214) BashCMDExecutor]  -         start_w(4) = time_step
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         count_aero(1) = 8
[(408214) BashCMDExecutor]  -         count_aero(2) = im-2
[(408214) BashCMDExecutor]  -         count_aero(3) = jm-2
[(408214) BashCMDExecutor]  -         count_aero(4) = 1
[(408214) BashCMDExecutor]  -         start_aero(1) = 1
[(408214) BashCMDExecutor]  -         start_aero(2) = 1
[(408214) BashCMDExecutor]  -         start_aero(3) = 1
[(408214) BashCMDExecutor]  -         start_aero(4) = time_step
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var3_values( NCID, 'hrco', GLATVAR_ID, start_3, count_3,
[(408214) BashCMDExecutor]  -       &     lat(2:IM-1,2:JM-1) )
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var3_values( NCID, 'hrco', GLONVAR_ID, start_3, count_3,
[(408214) BashCMDExecutor]  -       &     lon(2:IM-1,2:JM-1) )
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -  !-------- Writing Meteo outputs-------------------------
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_T, TSL_ID, start_sl, count_sl,
[(408214) BashCMDExecutor]  -       &     tsl(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_Q, QSL_ID, start_sl, count_sl,
[(408214) BashCMDExecutor]  -       &     qsl(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_CLDFRA, CLDFRA_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, cldfra(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_RLWTT, RLWTT_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, rlwtt(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_RSWTT, RSWTT_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, rswtt(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -  
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_F_ICE, F_ICE_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, f_ice(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_F_RIMEF, F_RIMEF_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, f_rimef(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_F_RAIN, F_RAIN_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, f_rain(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_HSL, HSL_ID, start_sl, count_sl,
[(408214) BashCMDExecutor]  -       &     hsl(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_U, USL_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, usl_h(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_V, VSL_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, vsl_h(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_CWSL, CWSL_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, cw(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408214) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_Q2SL, Q2SL_ID, start_sl,
[(408214) BashCMDExecutor]  -       &     count_sl, q2(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408214) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_W, WSL_ID, start_sl, count_sl,
[(408215) BashCMDExecutor]  -       &     w(2:IM-1,2:JM-1,1:LSM-2), reverse_presure)
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SLP, SLP_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     slp(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_PD, PD_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     pd(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_FIS, FIS_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     fis(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_PINT, PINTS_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, pints(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_THS, THS_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     ths(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_QS, QS_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     qs(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SNO, SNO_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     sno(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ROF, ROF_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     rof(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_USTAR, USTAR_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, ustar(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_AKHS, AKHS_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     akhs(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_AKMS, AKMS_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     akms(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ACPREC, ACPREC_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, acprec(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CUPREC, CUPREC_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cuprec(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_U10, U10_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     u10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_V10, V10_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     v10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_TH10, TH10_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     th10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_Q10, Q10_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     q10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_TH02, TH02_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     th02(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_Q02, Q02_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     q02(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SLWD, SLWD_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     slwd(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SSW, SSW_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     ssw(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_THZ0, THZ0_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     thz0(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_QZ0, QZ0_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     qz0(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_Z0, Z0_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     z0(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_PS, Ps_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     ps(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_PSHLTR, PSHLTR_ID, start_3,
[(408215) BashCMDExecutor]  -       &      count_3, pshltr(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_T2, T2_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     t2(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_MAXT2, MAXT2_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, maxt2(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_MINT2, MINT2_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, mint2(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  !-------- Writing Radiative outputs-------------------------
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ACFRCV, ACFRCV_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, acfrcv(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ACFRST, ACFRST_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, acfrst(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ALBASE, ALBASE_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, albase(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ALWIN, ALWIN_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, alwin(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ALWOUT, ALWOUT_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, alwout(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ALWTOA, ALWTOA_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, alwtoa(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ASWIN, ASWIN_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, aswin(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ASWOUT, ASWOUT_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, aswout(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ASWTOA, ASWTOA_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, aswtoa(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_BGROFF, BGROFF_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, bgroff(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CFRACH, CFRACH_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cfrach(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CFRACL, CFRACL_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cfracl(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CFRACM, CFRACM_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cfracm(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CLDEFI, CLDEFI_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cldefi(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CMC, CMC_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     cmc(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CNVBOT, CNVBOT_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cnvbot(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CNVTOP, CNVTOP_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cnvtop(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CPRATE, CPRATE_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, cprate(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CUPPT, CUPPT_ID, start_3,
[(408215) BashCMDExecutor]  -       &      count_3, cuppt(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CZEN, CZEN_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     czen(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_CZMEAN, CZMEAN_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, czmean(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_MXSNAL, MXSNAL_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, mxsnal(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RADOT, RADOT_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, radot(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RLWIN, RLWIN_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, rlwin(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RLWTOA, RLWTOA_ID, start_3, 
[(408215) BashCMDExecutor]  -       &     count_3, rlwtoa(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RSWIN, RSWIN_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, rswin(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RSWINC, RSWINC_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, rswinc(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_RSWOUT, RSWOUT_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, rswout(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SFCLHX, SFCLHX_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, sfclhx(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SFCSHX, SFCSHX_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, sfcshx(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SIGT4, SIGT4_ID, start_3,
[(408215) BashCMDExecutor]  -       &     count_3, sigt4(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_EPSR, EPSR_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     epsr(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_TGT, TG_ID, start_w, count_w,
[(408215) BashCMDExecutor]  -  !     &     tg(1:NWETS,2:IM-1,2:JM-1), NWETS, IM-2, JM-2 )
[(408215) BashCMDExecutor]  -  !      
[(408215) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_WGT, WG_ID, start_w, count_w,
[(408215) BashCMDExecutor]  -  !     &     wg(1:NWETS,2:IM-1,2:JM-1), NWETS, IM-2, JM-2 )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  !-------- Writing Dust outputs-------------------------
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_DUST_CONC, DUST_CONC_ID,
[(408215) BashCMDExecutor]  -       &     start_sl, count_sl, dustsl(2:IM-1,2:JM-1,1:LSM-2),
[(408215) BashCMDExecutor]  -       &     reverse_presure)
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_350, DUST_AOD_350_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod350(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_450, DUST_AOD_450_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod450(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_500, DUST_AOD_500_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod500(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_550, DUST_AOD_550_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod550(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_650, DUST_AOD_650_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod650(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_800, DUST_AOD_800_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod800(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_AOD_900, DUST_AOD_900_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_aod900(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_EXT_550_SFC,
[(408215) BashCMDExecutor]  -       &     DUST_EXT_550_SFC_ID, start_3, count_3, 
[(408215) BashCMDExecutor]  -       &     dust_ext550_sfc(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_SCONC, DUST_SCONC_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_sconc(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_SCONC02, DUST_SCONC02_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_sconc02(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_SCONC10, DUST_SCONC10_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_sconc10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_PM10_SCONC10,
[(408215) BashCMDExecutor]  -       &     DUST_PM10_SCONC10_ID, start_3, count_3, 
[(408215) BashCMDExecutor]  -       &     dust_pm10_sconc10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_PM25_SCONC10,
[(408215) BashCMDExecutor]  -       &     DUST_PM25_SCONC10_ID, start_3, count_3, 
[(408215) BashCMDExecutor]  -       &     dust_pm25_sconc10(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_WETDEP_ACPREC,
[(408215) BashCMDExecutor]  -       &     DUST_WETDEP_ACPREC_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     dust_wetdep(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_WETDEP_CUPREC,
[(408215) BashCMDExecutor]  -       &     DUST_WETDEP_CUPREC_ID, start_3, count_3,
[(408215) BashCMDExecutor]  -       &     dust_wetdep(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_DRYDEP, DUST_DRYDEP_ID,
[(408215) BashCMDExecutor]  -       &     start_3, count_3, dust_drydep(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_LOAD, DUST_LOAD_ID, start_3,
[(408215) BashCMDExecutor]  -       &      count_3, dust_load(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_DUST_EMI, DUST_EMI_ID, start_3,
[(408215) BashCMDExecutor]  -       &      count_3, dust_emi(2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -         call put_var4_values( NCID, CFG_DUST_EXT_550, DUST_EXT_550_ID,
[(408215) BashCMDExecutor]  -       &     start_sl, count_sl, dust_ext(2:IM-1,2:JM-1,1:LSM-2),
[(408215) BashCMDExecutor]  -       &     reverse_presure)
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -  !-------- Writing Dust bin outputs-------------------------
[(408215) BashCMDExecutor]  -  
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_LOAD_BIN,
[(408215) BashCMDExecutor]  -       &        dust_load_bin_ids(bin),
[(408215) BashCMDExecutor]  -       &        start_3, count_3, dload(bin, 2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_DRYDEP_BIN,
[(408215) BashCMDExecutor]  -       &        dust_drydep_bin_ids(bin),
[(408215) BashCMDExecutor]  -       &        start_3, count_3, aero_depdry(bin, 2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_WETDEP_ACPREC_BIN,
[(408215) BashCMDExecutor]  -       &        dust_wetdep_acprec_bin_ids(bin),
[(408215) BashCMDExecutor]  -       &        start_3, count_3, aero_acprec(bin, 2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_WETDEP_CUPREC_BIN,
[(408215) BashCMDExecutor]  -       &        dust_wetdep_cuprec_bin_ids(bin),
[(408215) BashCMDExecutor]  -       &        start_3, count_3, aero_cuprec(bin, 2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_EMI_BIN,
[(408215) BashCMDExecutor]  -       &        dust_emi_bin_ids(bin), start_3, count_3,
[(408215) BashCMDExecutor]  -       &        emiss_dust(bin, 2:IM-1,2:JM-1) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_AOD_550_BIN,
[(408215) BashCMDExecutor]  -       &        dust_aod550_bin_ids(bin),
[(408215) BashCMDExecutor]  -       &        start_3, count_3, dust_aod550_bin(2:IM-1,2:JM-1,bin) )
[(408215) BashCMDExecutor]  -        enddo
[(408215) BashCMDExecutor]  -        
[(408215) BashCMDExecutor]  -        do bin=1,kps
[(408215) BashCMDExecutor]  -           call put_var3_values( NCID, CFG_DUST_SCONC_BIN,
[(408215) BashCMDExecutor]  -       &        dust_sconc_bin_ids(bin), start_3, count_3,
[(408215) BashCMDExecutor]  -       &        dust_bins(2:IM-1,2:JM-1,bin) )
[(408216) BashCMDExecutor]  -        enddo
[(408216) BashCMDExecutor]  -        
[(408216) BashCMDExecutor]  -  !-------- Writing Land Use outputs-------------------------
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SM, SM_ID, start_3, count_3,
[(408216) BashCMDExecutor]  -       &     sm(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -        
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SICE, SICE_ID, start_3, count_3,
[(408216) BashCMDExecutor]  -       &     sice(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -        
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_SST, SST_ID, start_3, count_3,
[(408216) BashCMDExecutor]  -       &     sst(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_INSOIL, INSOIL_ID, start_3,
[(408216) BashCMDExecutor]  -       &     count_3, insoil(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_INVEG, INVEG_ID, start_3,
[(408216) BashCMDExecutor]  -       &     count_3, inveg(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_VEGFRC, VEGFRC_ID, start_3,
[(408216) BashCMDExecutor]  -       &     count_3, vegfrc(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -         call put_var3_values( NCID, CFG_ALBEDO, ALBEDO_ID, start_3,
[(408216) BashCMDExecutor]  -       &     count_3, albedo(2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  !-------- Writing aero outputs-------------------------
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_AERO_ACPREC, AERO_ACPREC_ID,
[(408216) BashCMDExecutor]  -  !     &     start_aero, count_aero, aero_acprec(1:8,2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_AERO_CUPREC, AERO_CUPREC_ID,
[(408216) BashCMDExecutor]  -  !     &     start_aero, count_aero, aero_cuprec(1:8,2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_AERO_DEPDRY, AERO_DEPDRY_ID,
[(408216) BashCMDExecutor]  -  !     &     start_aero, count_aero, aero_depdry(1:8,2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  !       call put_var4_values( NCID, CFG_AERO_DLOAD, AERO_DLOAD_ID,
[(408216) BashCMDExecutor]  -  !     &     start_aero, count_aero, dload(1:8,2:IM-1,2:JM-1) )
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  ! Cerramos el archivo...
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -        STATUS=NF_CLOSE(NCID)
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -        PRINT*,'NETCDF FILE No: ',k,' SUCCESSFULLY CREATED '     
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -        enddo ! K loop
[(408216) BashCMDExecutor]  -        stop
[(408216) BashCMDExecutor]  -        end
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -  !&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
[(408216) BashCMDExecutor]  -        subroutine spline(nold,xold,yold,y2,nnew,xnew,ynew,p,q)           
[(408216) BashCMDExecutor]  -  !     ******************************************************************
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *  this is a one-dimensional cubic spline fitting routine        *
[(408216) BashCMDExecutor]  -  !     *  programed for a small scalar machine.                         *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *  programer: z. janjic, yugoslav fed. hydromet. inst., beograd  *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *  nold - number of given values of the function.  must be ge 3. *
[(408216) BashCMDExecutor]  -  !     *  xold - locations of the points at which the values of the     *
[(408216) BashCMDExecutor]  -  !     *         function are given.  must be in ascending order.       *
[(408216) BashCMDExecutor]  -  !     *  yold - the given values of the function at the points xold.   *
[(408216) BashCMDExecutor]  -  !     *  y2   - the second derivatives at the points xold.  if natural *
[(408216) BashCMDExecutor]  -  !     *         spline is fitted y2(1)=0. and y2(nold)=0. must be      *
[(408216) BashCMDExecutor]  -  !     *         specified.                                             *
[(408216) BashCMDExecutor]  -  !     *  nnew - number of values of the function to be calculated.     *
[(408216) BashCMDExecutor]  -  !     *  xnew - locations of the points at which the values of the     *
[(408216) BashCMDExecutor]  -  !     *         function are calculated.  xnew(k) must be ge xold(1)   *
[(408216) BashCMDExecutor]  -  !     *         and le xold(nold).                                     *
[(408216) BashCMDExecutor]  -  !     *  ynew - the values of the function to be calculated.           *
[(408216) BashCMDExecutor]  -  !     *  p, q - auxiliary vectors of the length nold-2.                *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     ******************************************************************                                                                       
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        dimension                          
[(408216) BashCMDExecutor]  -       2 xold(nold),yold(nold),y2(nold),p(nold),q(nold)
[(408216) BashCMDExecutor]  -       3,xnew(nnew),ynew(nnew)
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        noldm1=nold-1                                                     
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        dxl=xold(2)-xold(1)                                               
[(408216) BashCMDExecutor]  -        dxr=xold(3)-xold(2)                                               
[(408216) BashCMDExecutor]  -        dydxl=(yold(2)-yold(1))/dxl                                       
[(408216) BashCMDExecutor]  -        dydxr=(yold(3)-yold(2))/dxr                                       
[(408216) BashCMDExecutor]  -        rtdxc=.5/(dxl+dxr)                                                
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        p(1)= rtdxc*(6.*(dydxr-dydxl)-dxl*y2(1))                          
[(408216) BashCMDExecutor]  -        q(1)=-rtdxc*dxr                                                   
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        if(nold.eq.3) go to 700                                           
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        k=3                                                               
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   100  dxl=dxr                                                           
[(408216) BashCMDExecutor]  -        dydxl=dydxr                                                       
[(408216) BashCMDExecutor]  -        dxr=xold(k+1)-xold(k)                                             
[(408216) BashCMDExecutor]  -        dydxr=(yold(k+1)-yold(k))/dxr                                     
[(408216) BashCMDExecutor]  -        dxc=dxl+dxr                                                       
[(408216) BashCMDExecutor]  -        den=1./(dxl*q(k-2)+dxc+dxc)                                       
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        p(k-1)= den*(6.*(dydxr-dydxl)-dxl*p(k-2))                         
[(408216) BashCMDExecutor]  -        q(k-1)=-den*dxr                                                   
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        k=k+1                                                             
[(408216) BashCMDExecutor]  -        if(k.lt.nold) go to 100                                           
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -   700  k=noldm1                                                          
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   200  y2(k)=p(k-1)+q(k-1)*y2(k+1)                                       
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        k=k-1                                                             
[(408216) BashCMDExecutor]  -        if(k.gt.1) go to 200                                              
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        k1=1                                                              
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   300  xk=xnew(k1)                                                       
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        do 400 k2=2,nold                                                  
[(408216) BashCMDExecutor]  -        if(xold(k2).le.xk) go to 400                                      
[(408216) BashCMDExecutor]  -        kold=k2-1                                                         
[(408216) BashCMDExecutor]  -        go to 450                                                         
[(408216) BashCMDExecutor]  -   400  continue                                                          
[(408216) BashCMDExecutor]  -        ynew(k1)=yold(nold)                                               
[(408216) BashCMDExecutor]  -        go to 600                                                         
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   450  if(k1.eq.1)   go to 500                                           
[(408216) BashCMDExecutor]  -        if(k.eq.kold) go to 550                                           
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   500  k=kold                                                            
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        y2k=y2(k)                                                         
[(408216) BashCMDExecutor]  -        y2kp1=y2(k+1)                                                     
[(408216) BashCMDExecutor]  -        dx=xold(k+1)-xold(k)                                              
[(408216) BashCMDExecutor]  -        rdx=1./dx                                                         
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        ak=.1666667*rdx*(y2kp1-y2k)                                       
[(408216) BashCMDExecutor]  -        bk=.5*y2k                                                         
[(408216) BashCMDExecutor]  -        ck=rdx*(yold(k+1)-yold(k))-.1666667*dx*(y2kp1+y2k+y2k)            
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   550  x=xk-xold(k)                                                      
[(408216) BashCMDExecutor]  -        xsq=x*x                                                           
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -        ynew(k1)=ak*xsq*x+bk*xsq+ck*x+yold(k)                             
[(408216) BashCMDExecutor]  -  !                                                                       
[(408216) BashCMDExecutor]  -   600  k1=k1+1                                                           
[(408216) BashCMDExecutor]  -        if(k1.le.nnew) go to 300                                          
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        return                                                            
[(408216) BashCMDExecutor]  -        end                                                               
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        subroutine tllwin(almd,aphd,tpus,tpvs,tlm0d,tph0d,pus,pvs)
[(408216) BashCMDExecutor]  -  !     ******************************************************************
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *  tll to ll transformation of velocity                          *
[(408216) BashCMDExecutor]  -  !     *                                                                *
[(408216) BashCMDExecutor]  -  !     *  programer: z.janjic, yugoslav fed. hydromet. inst.,           *
[(408216) BashCMDExecutor]  -  !     *                 beograd, 1982 (ltlwin)                         *
[(408216) BashCMDExecutor]  -  !     *             cperez, modified for tll to ll transformation      *
[(408216) BashCMDExecutor]  -  !     ******************************************************************
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        parameter(dtr=3.1415926535897932384626433832795/180.)
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        tph0=tph0d*dtr
[(408216) BashCMDExecutor]  -        ctph0=cos(tph0)
[(408216) BashCMDExecutor]  -        stph0=sin(tph0)
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        relm=(almd-tlm0d)*dtr
[(408216) BashCMDExecutor]  -        srlm=sin(relm)
[(408216) BashCMDExecutor]  -        crlm=cos(relm)
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        ph=aphd*dtr
[(408216) BashCMDExecutor]  -        sph=sin(ph)
[(408216) BashCMDExecutor]  -        cph=cos(ph)
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        cc=cph*crlm
[(408216) BashCMDExecutor]  -        tph=asin(ctph0*sph-stph0*cc)
[(408216) BashCMDExecutor]  -        rctph=1./cos(tph)
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        cray=stph0*srlm*rctph
[(408216) BashCMDExecutor]  -        dray=(ctph0*cph+stph0*sph*crlm)*rctph
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -  !      tpus=dray*pus-cray*pvs
[(408216) BashCMDExecutor]  -  !      tpvs=cray*pus+dray*pvs
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        pvs=dray*tpvs-cray*tpus
[(408216) BashCMDExecutor]  -        pvs=pvs/(cray**2+dray**2)
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        pus=(tpus+cray*pvs)/dray
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -  !-----------------------------------------------------------------------
[(408216) BashCMDExecutor]  -        return
[(408216) BashCMDExecutor]  -        end
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -        subroutine declare_variable(ncdf_id, v_check, var_name, var_type,
[(408216) BashCMDExecutor]  -       &     var_id, var_n_dims, dimensions, units, title, lname, coord,
[(408216) BashCMDExecutor]  -       &     fmiss)
[(408216) BashCMDExecutor]  -          INCLUDE 'netcdf.inc'
[(408216) BashCMDExecutor]  -          character(4) v_check
[(408216) BashCMDExecutor]  -          integer ncdf_id, var_id, var_n_dims, status
[(408216) BashCMDExecutor]  -          character(*) var_name, units, title, lname, coord
[(408216) BashCMDExecutor]  -          real fmiss
[(408216) BashCMDExecutor]  -          if(v_check(4:4).EQ.'o') then
[(408216) BashCMDExecutor]  -            STATUS=NF_DEF_VAR(ncdf_id, var_name, var_type, var_n_dims, 
[(408216) BashCMDExecutor]  -       &        dimensions, var_id)
[(408216) BashCMDExecutor]  -            print*,'Variable '//var_name//' created with id ',var_id
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS=NF_PUT_ATT_TEXT(ncdf_id, var_id, 'units', LEN(units), 
[(408216) BashCMDExecutor]  -       &        units)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS=NF_PUT_ATT_TEXT(ncdf_id, var_id,'title',LEN(title),
[(408216) BashCMDExecutor]  -       &        title)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS=NF_PUT_ATT_TEXT(ncdf_id, var_id,'long_name',LEN(lname),
[(408216) BashCMDExecutor]  -       &        lname)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS=NF_PUT_ATT_TEXT(ncdf_id, var_id, 'coordinates', 
[(408216) BashCMDExecutor]  -       &        LEN(coord), coord)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS = nf_put_att_real(ncdf_id, var_id, '_FillValue',
[(408216) BashCMDExecutor]  -       &         nf_real, 1, fmiss)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            STATUS = nf_put_att_real(ncdf_id, var_id, 'missing_value',
[(408216) BashCMDExecutor]  -       &         nf_real, 1, fmiss)
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*,STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -            print*,var_id
[(408216) BashCMDExecutor]  -          endif
[(408216) BashCMDExecutor]  -          return
[(408216) BashCMDExecutor]  -        end
[(408216) BashCMDExecutor]  -  !
[(408216) BashCMDExecutor]  -        subroutine put_var4_values( ncdf_id, v_check, var_id,
[(408216) BashCMDExecutor]  -       &      start, count, values, reverse_presure)
[(408216) BashCMDExecutor]  -  !     &      start, count, values, x, y, z)
[(408216) BashCMDExecutor]  -          INCLUDE 'netcdf.inc'
[(408216) BashCMDExecutor]  -  !        integer x, y, z
[(408216) BashCMDExecutor]  -          character(4) v_check
[(408216) BashCMDExecutor]  -          integer z, reverse_presure
[(408216) BashCMDExecutor]  -          integer count(4), start(4),acount(4),astart(4)
[(408216) BashCMDExecutor]  -  !        real values(x,y,z)
[(408216) BashCMDExecutor]  -          real values(count(1),count(2),count(3))
[(408216) BashCMDExecutor]  -          integer ncdf_id, var_id
[(408216) BashCMDExecutor]  -          z=count(3)
[(408216) BashCMDExecutor]  -          astart = start
[(408216) BashCMDExecutor]  -          acount = count
[(408216) BashCMDExecutor]  -          if(v_check(4:4).EQ.'o') then
[(408216) BashCMDExecutor]  -            print*,'Going to write variable ',var_id
[(408216) BashCMDExecutor]  -            if(reverse_presure.eq.1) then
[(408216) BashCMDExecutor]  -              acount(3)=1
[(408216) BashCMDExecutor]  -              do k=1,z
[(408216) BashCMDExecutor]  -  !              print*,k,z,count(3)
[(408216) BashCMDExecutor]  -                astart(3)=z+1-k
[(408216) BashCMDExecutor]  -                STATUS = nf_put_vara_real( ncdf_id, var_id, astart,
[(408216) BashCMDExecutor]  -       &            acount, values(:,:,k))
[(408216) BashCMDExecutor]  -              enddo
[(408216) BashCMDExecutor]  -            else
[(408216) BashCMDExecutor]  -              STATUS = nf_put_vara_real( ncdf_id, var_id, astart, acount,
[(408216) BashCMDExecutor]  -       &          values)
[(408216) BashCMDExecutor]  -            endif
[(408216) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*, STATUS,NF_STRERROR(STATUS)
[(408216) BashCMDExecutor]  -          endif
[(408216) BashCMDExecutor]  -          return
[(408216) BashCMDExecutor]  -        end
[(408216) BashCMDExecutor]  -  
[(408216) BashCMDExecutor]  -        subroutine put_var3_values( ncdf_id, v_check, var_id,
[(408216) BashCMDExecutor]  -       &      start, count, values)
[(408216) BashCMDExecutor]  -          INCLUDE 'netcdf.inc'
[(408216) BashCMDExecutor]  -          integer status
[(408216) BashCMDExecutor]  -          integer count(3), start(3)
[(408216) BashCMDExecutor]  -          real values(count(1),count(2))
[(408216) BashCMDExecutor]  -          integer ncdf_id, var_id
[(408216) BashCMDExecutor]  -          character(4) v_check
[(408216) BashCMDExecutor]  -          if(v_check(4:4).EQ.'o') then
[(408217) BashCMDExecutor]  -            print*,'Going to write variable ',var_id
[(408217) BashCMDExecutor]  -            STATUS = nf_put_vara_real( ncdf_id, var_id, start, count,
[(408217) BashCMDExecutor]  -       &        values)
[(408217) BashCMDExecutor]  -            IF(STATUS.NE.NF_NOERR) PRINT*, STATUS,NF_STRERROR(STATUS)
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -          return
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine add_attribute_f(ncdf_id, var_id, attname, attvalue)
[(408217) BashCMDExecutor]  -          INCLUDE 'netcdf.inc'
[(408217) BashCMDExecutor]  -          integer ncdf_id, var_id, status
[(408217) BashCMDExecutor]  -          character(*) attname
[(408217) BashCMDExecutor]  -          real attvalue
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -          status = nf_put_att_real(ncdf_id, var_id, attname, NF_REAL, 1,
[(408217) BashCMDExecutor]  -       &                         attvalue)
[(408217) BashCMDExecutor]  -          IF(status.NE.NF_NOERR) PRINT*, NF_STRERROR(iret)
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -          return
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine get_out_name(fn, k, fnout)
[(408217) BashCMDExecutor]  -          character*1 fno1
[(408217) BashCMDExecutor]  -          character*2 fno2
[(408217) BashCMDExecutor]  -          character*3 fno3
[(408217) BashCMDExecutor]  -          character(*) fn
[(408217) BashCMDExecutor]  -          character(*) fnout
[(408217) BashCMDExecutor]  -          integer k
[(408217) BashCMDExecutor]  -          if(k.le.10) then            ! if k is less than 2 digits...just to format the string 
[(408217) BashCMDExecutor]  -            write(fno1,'(i1)')(k-1)
[(408217) BashCMDExecutor]  -            fnout=fn//'00'//fno1//'.nc' ! convert to string
[(408217) BashCMDExecutor]  -          elseif(k.le.100) then
[(408217) BashCMDExecutor]  -            write(fno2,'(i2)')(k-1)
[(408217) BashCMDExecutor]  -            fnout=fn//'0'//fno2//'.nc'      ! convert to string
[(408217) BashCMDExecutor]  -          else
[(408217) BashCMDExecutor]  -            write(fno3,'(i3)')(k-1)
[(408217) BashCMDExecutor]  -            fnout=fn//fno3//'.nc'      ! convert to string
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -          return
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        ! Funciones para hacer el read de matrices de numeros reales de 2 y 3 dimensiones
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine reverse_read3r( file_desc, config_value, data_matrix,
[(408217) BashCMDExecutor]  -       &     dims)
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer file_desc, bin
[(408217) BashCMDExecutor]  -          integer dims(3)
[(408217) BashCMDExecutor]  -          real data_matrix(dims(1), dims(2), dims(3))
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -          !print*,'  pong'
[(408217) BashCMDExecutor]  -            do bin=1,dims(1)
[(408217) BashCMDExecutor]  -              read(file_desc) data_matrix(bin,:,:)
[(408217) BashCMDExecutor]  -            enddo
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine verified_read3r( file_desc, config_value, data_matrix,
[(408217) BashCMDExecutor]  -       &     dims)
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer file_desc, l
[(408217) BashCMDExecutor]  -          integer dims(3)
[(408217) BashCMDExecutor]  -          real data_matrix(dims(1), dims(2), dims(3))
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -            !print*,'  pong'
[(408217) BashCMDExecutor]  -            do l=1,dims(3)
[(408217) BashCMDExecutor]  -              read(file_desc) data_matrix(:,:,l)
[(408217) BashCMDExecutor]  -            enddo
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine verified_read2r( file_desc, config_value, data_matrix,
[(408217) BashCMDExecutor]  -       &     dims)
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer file_desc
[(408217) BashCMDExecutor]  -          integer dims(3)
[(408217) BashCMDExecutor]  -          real data_matrix(dims(1), dims(2))
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -          !print*,'  pong'
[(408217) BashCMDExecutor]  -            read(file_desc)data_matrix
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -        subroutine verified_read1i( file_desc, config_value, data_matrix,
[(408217) BashCMDExecutor]  -       &     dims)
[(408217) BashCMDExecutor]  -          integer file_desc
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer dims
[(408217) BashCMDExecutor]  -          integer data_matrix(dims)
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -          !print*,'  pong'
[(408217) BashCMDExecutor]  -            read(file_desc) data_matrix
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine verified_read1r( file_desc, config_value, data_matrix,
[(408217) BashCMDExecutor]  -       &     dims)
[(408217) BashCMDExecutor]  -          integer file_desc
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer dims
[(408217) BashCMDExecutor]  -          real data_matrix(dims)
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -          !print*,'  pong'
[(408217) BashCMDExecutor]  -            read(file_desc) data_matrix
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine verified_read0r( file_desc, config_value, valor)
[(408217) BashCMDExecutor]  -          integer file_desc
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          real valor
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -            read(file_desc) valor
[(408217) BashCMDExecutor]  -            !print*,valor
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  
[(408217) BashCMDExecutor]  -        subroutine verified_read0i( file_desc, config_value, valor)
[(408217) BashCMDExecutor]  -          integer file_desc
[(408217) BashCMDExecutor]  -          character(4) config_value
[(408217) BashCMDExecutor]  -          integer valor
[(408217) BashCMDExecutor]  -          !print*,'ping'
[(408217) BashCMDExecutor]  -          if(config_value(1:1).eq.'h') then
[(408217) BashCMDExecutor]  -            read(file_desc) valor
[(408217) BashCMDExecutor]  -            !print*,valor
[(408217) BashCMDExecutor]  -          endif
[(408217) BashCMDExecutor]  -        end
[(408217) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408217) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(408217) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(408217) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Executing command: sed -e s/DATE/2014090100/ -e s/III/257/ -e s/WBDN/-180.0/ -e s/DLMN/1.40625/ -e s/JJJ/181/ -e s/SBDN/-90.0/ -e s/DPHN/1.0/ -e s/KKK/15/ -e s/HH/06/ -e s/INITCTL/0Z01Sep2014/ -e s/XHR/3hr/ /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/POSTPROC/pout_global_pressure.ctl.tmp > /gpfs/projects/bsc19/bsc19533/NMMB-BSC/nmmb-bsc-ctm-v2.0/OUTPUT/GLOB/2014090100/pout_global_pressure_2014090100.ctl
[(408220) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] Waiting for CMD completion
[(408227) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408227) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD EXIT VALUE: 0
[(408227) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408227) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD OUTPUT:
[(408228) BashCMDExecutor]  -  ** !! Open this ctl file in "gradsnc" (Grads ver 1.9) or "grads" (Grads ver 2.0).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! If the netcdf file is CF compliant, then it can be opened directly
[(408228) BashCMDExecutor]  -  ** !! (without ctl file) by "sdfopen netcdf_filename" (except for netcdf files with Native projection).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! This ctl is for a global domain with a regular lat-lon proj. IF proj is native,
[(408228) BashCMDExecutor]  -  ** !! then additional syntax line "PDEF" is required.
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! Change DSET path  as required
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  DSET NMMB-BSC-CTM_2014090100_glob.nc
[(408228) BashCMDExecutor]  -  DTYPE netcdf
[(408228) BashCMDExecutor]  -  UNDEF -99.90
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  TITLE output of postall_global_pressure.f
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  XDEF 257 LINEAR -180.0 1.40625
[(408228) BashCMDExecutor]  -  YDEF 181 LINEAR -90.0 1.0
[(408228) BashCMDExecutor]  -  ZDEF 15 LINEAR 100 200 250 300 400 500 600 700 800 850 900 925 950 975 1000
[(408228) BashCMDExecutor]  -  TDEF 06 LINEAR 0Z01Sep2014 3hr
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  VARS  49
[(408228) BashCMDExecutor]  -  lat 0  t,y,x    grid latitude
[(408228) BashCMDExecutor]  -  lon 0  t,y,x    grid longitude
[(408228) BashCMDExecutor]  -  tsl 15 t,z,y,x T-UMO
[(408228) BashCMDExecutor]  -  hsl 15 t,z,y,x H-UMO
[(408228) BashCMDExecutor]  -  cldfra 15 t,z,y,x CLOUDFRA-UMO
[(408228) BashCMDExecutor]  -  usl_h 15 t,z,y,x U-UMO
[(408228) BashCMDExecutor]  -  vsl_h 15 t,z,y,x V-UMO
[(408228) BashCMDExecutor]  -  slp 0 t,y,x   SLP-UMO
[(408228) BashCMDExecutor]  -  fis 0 t,y,x   FIS
[(408228) BashCMDExecutor]  -  acprec 0 t,y,x   ACPREC-UMO
[(408228) BashCMDExecutor]  -  u10 0 t,y,x   U10-UMO
[(408228) BashCMDExecutor]  -  v10 0 t,y,x   V10-UMO
[(408228) BashCMDExecutor]  -  ps 0 t,y,x   PS-UMO
[(408228) BashCMDExecutor]  -  alwtoa 0 t,y,x   ALWTOA
[(408228) BashCMDExecutor]  -  dust_conc 15 t,z,y,x DUST_CONC
[(408228) BashCMDExecutor]  -  dust_aod_550 0 t,y,x  dust_aod_550
[(408228) BashCMDExecutor]  -  dust_sconc 0 t,y,x  dust_sconc
[(408228) BashCMDExecutor]  -  dust_sconc02 0 t,y,x  dust_sconc02
[(408228) BashCMDExecutor]  -  dust_sconc10 0 t,y,x  dust_sconc10
[(408228) BashCMDExecutor]  -  dust_pm10_sconc10 0 t,y,x  dust_pm10_sconc10
[(408228) BashCMDExecutor]  -  dust_pm25_sconc10 0 t,y,x  dust_pm25_sconc10
[(408228) BashCMDExecutor]  -  dust_wetdep 0 t,y,x  dust_wetdep
[(408228) BashCMDExecutor]  -  dust_wetdep_cuprec 0 t,y,x  dust_wetdep_cuprec
[(408228) BashCMDExecutor]  -  dust_drydep 0 t,y,x  dust_drydep
[(408228) BashCMDExecutor]  -  dust_load 0 t,y,x  dust_load
[(408228) BashCMDExecutor]  -  dust_load_b1 0 t,y,x  dust_load_b1
[(408228) BashCMDExecutor]  -  dust_load_b2 0 t,y,x  dust_load_b2
[(408228) BashCMDExecutor]  -  dust_load_b3 0 t,y,x  dust_load_b3
[(408228) BashCMDExecutor]  -  dust_load_b4 0 t,y,x  dust_load_b4
[(408228) BashCMDExecutor]  -  dust_load_b5 0 t,y,x  dust_load_b5
[(408228) BashCMDExecutor]  -  dust_load_b6 0 t,y,x  dust_load_b6
[(408228) BashCMDExecutor]  -  dust_load_b7 0 t,y,x  dust_load_b7
[(408228) BashCMDExecutor]  -  dust_load_b8 0 t,y,x  dust_load_b8
[(408228) BashCMDExecutor]  -  dust_aod_550_b1 0 t,y,x  dust_aod_550_b1
[(408228) BashCMDExecutor]  -  dust_aod_550_b2 0 t,y,x  dust_aod_550_b2
[(408228) BashCMDExecutor]  -  dust_aod_550_b3 0 t,y,x  dust_aod_550_b3
[(408228) BashCMDExecutor]  -  dust_aod_550_b4 0 t,y,x  dust_aod_550_b4
[(408228) BashCMDExecutor]  -  dust_aod_550_b5 0 t,y,x  dust_aod_550_b5
[(408228) BashCMDExecutor]  -  dust_aod_550_b6 0 t,y,x  dust_aod_550_b6
[(408228) BashCMDExecutor]  -  dust_aod_550_b7 0 t,y,x  dust_aod_550_b7
[(408228) BashCMDExecutor]  -  dust_aod_550_b8 0 t,y,x  dust_aod_550_b8
[(408228) BashCMDExecutor]  -  dust_sconc_b1 0 t,y,x  dust_sconc_b1
[(408228) BashCMDExecutor]  -  dust_sconc_b2 0 t,y,x  dust_sconc_b2
[(408228) BashCMDExecutor]  -  dust_sconc_b3 0 t,y,x  dust_sconc_b3
[(408228) BashCMDExecutor]  -  dust_sconc_b4 0 t,y,x  dust_sconc_b4
[(408228) BashCMDExecutor]  -  dust_sconc_b5 0 t,y,x  dust_sconc_b5
[(408228) BashCMDExecutor]  -  dust_sconc_b6 0 t,y,x  dust_sconc_b6
[(408228) BashCMDExecutor]  -  dust_sconc_b7 0 t,y,x  dust_sconc_b7
[(408228) BashCMDExecutor]  -  dust_sconc_b8 0 t,y,x  dust_sconc_b8
[(408228) BashCMDExecutor]  -  endvars
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  ** !! Open this ctl file in "gradsnc" (Grads ver 1.9) or "grads" (Grads ver 2.0).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! If the netcdf file is CF compliant, then it can be opened directly
[(408228) BashCMDExecutor]  -  ** !! (without ctl file) by "sdfopen netcdf_filename" (except for netcdf files with Native projection).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! This ctl is for a global domain with a regular lat-lon proj. IF proj is native,
[(408228) BashCMDExecutor]  -  ** !! then additional syntax line "PDEF" is required.
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! Change DSET path  as required
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  DSET NMMB-BSC-CTM_2014090100_glob.nc
[(408228) BashCMDExecutor]  -  DTYPE netcdf
[(408228) BashCMDExecutor]  -  UNDEF -99.90
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  TITLE output of postall_global_pressure.f
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  XDEF 257 LINEAR -180.0 1.40625
[(408228) BashCMDExecutor]  -  YDEF 181 LINEAR -90.0 1.0
[(408228) BashCMDExecutor]  -  ZDEF 15 LINEAR 100 200 250 300 400 500 600 700 800 850 900 925 950 975 1000
[(408228) BashCMDExecutor]  -  TDEF 06 LINEAR 0Z01Sep2014 3hr
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  VARS  49
[(408228) BashCMDExecutor]  -  lat 0  t,y,x    grid latitude
[(408228) BashCMDExecutor]  -  lon 0  t,y,x    grid longitude
[(408228) BashCMDExecutor]  -  tsl 15 t,z,y,x T-UMO
[(408228) BashCMDExecutor]  -  hsl 15 t,z,y,x H-UMO
[(408228) BashCMDExecutor]  -  cldfra 15 t,z,y,x CLOUDFRA-UMO
[(408228) BashCMDExecutor]  -  usl_h 15 t,z,y,x U-UMO
[(408228) BashCMDExecutor]  -  vsl_h 15 t,z,y,x V-UMO
[(408228) BashCMDExecutor]  -  slp 0 t,y,x   SLP-UMO
[(408228) BashCMDExecutor]  -  fis 0 t,y,x   FIS
[(408228) BashCMDExecutor]  -  acprec 0 t,y,x   ACPREC-UMO
[(408228) BashCMDExecutor]  -  u10 0 t,y,x   U10-UMO
[(408228) BashCMDExecutor]  -  v10 0 t,y,x   V10-UMO
[(408228) BashCMDExecutor]  -  ps 0 t,y,x   PS-UMO
[(408228) BashCMDExecutor]  -  alwtoa 0 t,y,x   ALWTOA
[(408228) BashCMDExecutor]  -  dust_conc 15 t,z,y,x DUST_CONC
[(408228) BashCMDExecutor]  -  dust_aod_550 0 t,y,x  dust_aod_550
[(408228) BashCMDExecutor]  -  dust_sconc 0 t,y,x  dust_sconc
[(408228) BashCMDExecutor]  -  dust_sconc02 0 t,y,x  dust_sconc02
[(408228) BashCMDExecutor]  -  dust_sconc10 0 t,y,x  dust_sconc10
[(408228) BashCMDExecutor]  -  dust_pm10_sconc10 0 t,y,x  dust_pm10_sconc10
[(408228) BashCMDExecutor]  -  dust_pm25_sconc10 0 t,y,x  dust_pm25_sconc10
[(408228) BashCMDExecutor]  -  dust_wetdep 0 t,y,x  dust_wetdep
[(408228) BashCMDExecutor]  -  dust_wetdep_cuprec 0 t,y,x  dust_wetdep_cuprec
[(408228) BashCMDExecutor]  -  dust_drydep 0 t,y,x  dust_drydep
[(408228) BashCMDExecutor]  -  dust_load 0 t,y,x  dust_load
[(408228) BashCMDExecutor]  -  dust_load_b1 0 t,y,x  dust_load_b1
[(408228) BashCMDExecutor]  -  dust_load_b2 0 t,y,x  dust_load_b2
[(408228) BashCMDExecutor]  -  dust_load_b3 0 t,y,x  dust_load_b3
[(408228) BashCMDExecutor]  -  dust_load_b4 0 t,y,x  dust_load_b4
[(408228) BashCMDExecutor]  -  dust_load_b5 0 t,y,x  dust_load_b5
[(408228) BashCMDExecutor]  -  dust_load_b6 0 t,y,x  dust_load_b6
[(408228) BashCMDExecutor]  -  dust_load_b7 0 t,y,x  dust_load_b7
[(408228) BashCMDExecutor]  -  dust_load_b8 0 t,y,x  dust_load_b8
[(408228) BashCMDExecutor]  -  dust_aod_550_b1 0 t,y,x  dust_aod_550_b1
[(408228) BashCMDExecutor]  -  dust_aod_550_b2 0 t,y,x  dust_aod_550_b2
[(408228) BashCMDExecutor]  -  dust_aod_550_b3 0 t,y,x  dust_aod_550_b3
[(408228) BashCMDExecutor]  -  dust_aod_550_b4 0 t,y,x  dust_aod_550_b4
[(408228) BashCMDExecutor]  -  dust_aod_550_b5 0 t,y,x  dust_aod_550_b5
[(408228) BashCMDExecutor]  -  dust_aod_550_b6 0 t,y,x  dust_aod_550_b6
[(408228) BashCMDExecutor]  -  dust_aod_550_b7 0 t,y,x  dust_aod_550_b7
[(408228) BashCMDExecutor]  -  dust_aod_550_b8 0 t,y,x  dust_aod_550_b8
[(408228) BashCMDExecutor]  -  dust_sconc_b1 0 t,y,x  dust_sconc_b1
[(408228) BashCMDExecutor]  -  dust_sconc_b2 0 t,y,x  dust_sconc_b2
[(408228) BashCMDExecutor]  -  dust_sconc_b3 0 t,y,x  dust_sconc_b3
[(408228) BashCMDExecutor]  -  dust_sconc_b4 0 t,y,x  dust_sconc_b4
[(408228) BashCMDExecutor]  -  dust_sconc_b5 0 t,y,x  dust_sconc_b5
[(408228) BashCMDExecutor]  -  dust_sconc_b6 0 t,y,x  dust_sconc_b6
[(408228) BashCMDExecutor]  -  dust_sconc_b7 0 t,y,x  dust_sconc_b7
[(408228) BashCMDExecutor]  -  dust_sconc_b8 0 t,y,x  dust_sconc_b8
[(408228) BashCMDExecutor]  -  endvars
[(408228) BashCMDExecutor]  -  
[(408228) BashCMDExecutor]  -  ** !! Open this ctl file in "gradsnc" (Grads ver 1.9) or "grads" (Grads ver 2.0).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! If the netcdf file is CF compliant, then it can be opened directly
[(408228) BashCMDExecutor]  -  ** !! (without ctl file) by "sdfopen netcdf_filename" (except for netcdf files with Native projection).
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! This ctl is for a global domain with a regular lat-lon proj. IF proj is native,
[(408228) BashCMDExecutor]  -  ** !! then additional syntax line "PDEF" is required.
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  ** !! Change DSET path  as required
[(408228) BashCMDExecutor]  -  ** !! ------------------------------------------------------------------
[(408228) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  DSET NMMB-BSC-CTM_2014090100_glob.nc
[(408229) BashCMDExecutor]  -  DTYPE netcdf
[(408229) BashCMDExecutor]  -  UNDEF -99.90
[(408229) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  TITLE output of postall_global_pressure.f
[(408229) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  XDEF 257 LINEAR -180.0 1.40625
[(408229) BashCMDExecutor]  -  YDEF 181 LINEAR -90.0 1.0
[(408229) BashCMDExecutor]  -  ZDEF 15 LINEAR 100 200 250 300 400 500 600 700 800 850 900 925 950 975 1000
[(408229) BashCMDExecutor]  -  TDEF 06 LINEAR 0Z01Sep2014 3hr
[(408229) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  VARS  49
[(408229) BashCMDExecutor]  -  lat 0  t,y,x    grid latitude
[(408229) BashCMDExecutor]  -  lon 0  t,y,x    grid longitude
[(408229) BashCMDExecutor]  -  tsl 15 t,z,y,x T-UMO
[(408229) BashCMDExecutor]  -  hsl 15 t,z,y,x H-UMO
[(408229) BashCMDExecutor]  -  cldfra 15 t,z,y,x CLOUDFRA-UMO
[(408229) BashCMDExecutor]  -  usl_h 15 t,z,y,x U-UMO
[(408229) BashCMDExecutor]  -  vsl_h 15 t,z,y,x V-UMO
[(408229) BashCMDExecutor]  -  slp 0 t,y,x   SLP-UMO
[(408229) BashCMDExecutor]  -  fis 0 t,y,x   FIS
[(408229) BashCMDExecutor]  -  acprec 0 t,y,x   ACPREC-UMO
[(408229) BashCMDExecutor]  -  u10 0 t,y,x   U10-UMO
[(408229) BashCMDExecutor]  -  v10 0 t,y,x   V10-UMO
[(408229) BashCMDExecutor]  -  ps 0 t,y,x   PS-UMO
[(408229) BashCMDExecutor]  -  alwtoa 0 t,y,x   ALWTOA
[(408229) BashCMDExecutor]  -  dust_conc 15 t,z,y,x DUST_CONC
[(408229) BashCMDExecutor]  -  dust_aod_550 0 t,y,x  dust_aod_550
[(408229) BashCMDExecutor]  -  dust_sconc 0 t,y,x  dust_sconc
[(408229) BashCMDExecutor]  -  dust_sconc02 0 t,y,x  dust_sconc02
[(408229) BashCMDExecutor]  -  dust_sconc10 0 t,y,x  dust_sconc10
[(408229) BashCMDExecutor]  -  dust_pm10_sconc10 0 t,y,x  dust_pm10_sconc10
[(408229) BashCMDExecutor]  -  dust_pm25_sconc10 0 t,y,x  dust_pm25_sconc10
[(408229) BashCMDExecutor]  -  dust_wetdep 0 t,y,x  dust_wetdep
[(408229) BashCMDExecutor]  -  dust_wetdep_cuprec 0 t,y,x  dust_wetdep_cuprec
[(408229) BashCMDExecutor]  -  dust_drydep 0 t,y,x  dust_drydep
[(408229) BashCMDExecutor]  -  dust_load 0 t,y,x  dust_load
[(408229) BashCMDExecutor]  -  dust_load_b1 0 t,y,x  dust_load_b1
[(408229) BashCMDExecutor]  -  dust_load_b2 0 t,y,x  dust_load_b2
[(408229) BashCMDExecutor]  -  dust_load_b3 0 t,y,x  dust_load_b3
[(408229) BashCMDExecutor]  -  dust_load_b4 0 t,y,x  dust_load_b4
[(408229) BashCMDExecutor]  -  dust_load_b5 0 t,y,x  dust_load_b5
[(408229) BashCMDExecutor]  -  dust_load_b6 0 t,y,x  dust_load_b6
[(408229) BashCMDExecutor]  -  dust_load_b7 0 t,y,x  dust_load_b7
[(408229) BashCMDExecutor]  -  dust_load_b8 0 t,y,x  dust_load_b8
[(408229) BashCMDExecutor]  -  dust_aod_550_b1 0 t,y,x  dust_aod_550_b1
[(408229) BashCMDExecutor]  -  dust_aod_550_b2 0 t,y,x  dust_aod_550_b2
[(408229) BashCMDExecutor]  -  dust_aod_550_b3 0 t,y,x  dust_aod_550_b3
[(408229) BashCMDExecutor]  -  dust_aod_550_b4 0 t,y,x  dust_aod_550_b4
[(408229) BashCMDExecutor]  -  dust_aod_550_b5 0 t,y,x  dust_aod_550_b5
[(408229) BashCMDExecutor]  -  dust_aod_550_b6 0 t,y,x  dust_aod_550_b6
[(408229) BashCMDExecutor]  -  dust_aod_550_b7 0 t,y,x  dust_aod_550_b7
[(408229) BashCMDExecutor]  -  dust_aod_550_b8 0 t,y,x  dust_aod_550_b8
[(408229) BashCMDExecutor]  -  dust_sconc_b1 0 t,y,x  dust_sconc_b1
[(408229) BashCMDExecutor]  -  dust_sconc_b2 0 t,y,x  dust_sconc_b2
[(408229) BashCMDExecutor]  -  dust_sconc_b3 0 t,y,x  dust_sconc_b3
[(408229) BashCMDExecutor]  -  dust_sconc_b4 0 t,y,x  dust_sconc_b4
[(408229) BashCMDExecutor]  -  dust_sconc_b5 0 t,y,x  dust_sconc_b5
[(408229) BashCMDExecutor]  -  dust_sconc_b6 0 t,y,x  dust_sconc_b6
[(408229) BashCMDExecutor]  -  dust_sconc_b7 0 t,y,x  dust_sconc_b7
[(408229) BashCMDExecutor]  -  dust_sconc_b8 0 t,y,x  dust_sconc_b8
[(408229) BashCMDExecutor]  -  endvars
[(408229) BashCMDExecutor]  -  
[(408229) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] ------------------------------------
[(408229) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] CMD ERROR:
[(408229) BashCMDExecutor]  -  [CMD EXECUTION WRAPPER] End command execution
[(408229)   Post]  -  
[(408229)   Post]  -  ========= BEGIN ============================================
[(408229)    API]  -  Creating task from method runPostprocAuth in binary.BINARY
[(408229)    API]  -  There are 4 parameters
[(408229)    API]  -    Parameter 1 has type STRING_T
[(408229)    API]  -    Parameter 2 has type STRING_T
[(408229)    API]  -    Parameter 3 has type STRING_T
[(408229)    API]  -    Parameter 4 has type OBJECT_T
[(408229)    API]  -  Getting object with hash code -2147483593
[(423908)    API]  -  Object obtained 0
[(423908)   Post]  -  Execution of POSTProcess ended with status 0
[(423908)    API]  -  Getting object with hash code -2147483593
[(423908)   Post]  -  
[(423908)   Post]  -  ========= END ==============================================
[(423908)   Post]  -  Post process finished
[(423908)   Main]  -  20140901 simulation finished
[(423912)    API]  -  No more tasks for app 1
[(423916)    API]  -  Getting Result Files 1
[(430886)    API]  -  ------- COMPSs Task Execution Summary per Worker ------
[(430886)    API]  -  --- Summary for COMPSs Worker s10r1b81-ib0
[(430886)    API]  -  15 fortranCompiler(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 fortranCompileObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 fortranCompileWithObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 fortranCompilerWithW3(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 gfortranCompiler(STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 smmount(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 landuse(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 landusenew(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 topo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 stdh(FILE_T,FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 envelope(FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 topsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 botsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 toposeamask(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 stdhtopo(FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 deeptemperature(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 snowalbedo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 vcgenerator(FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 roughness(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 gfdlco2(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 run_aerosol(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 degribgfs_generic_05(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 gfs2model_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 inc_rrtm(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 cnv_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 degribsst(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 albedo(FILE_T,FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 albedorrtm(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 vegfrac(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 z0vegfrac(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 allprep(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 readpaulsource(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  1 dust_start(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 nems(FILE_T,FILE_T)mpi.MPI tasks have been executed
[(430886)    API]  -  1 runPostprocAuth(STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  --- Total executed tasks in COMPSs Worker s10r1b81-ib0: 48
[(430886)    API]  -  --- Summary for COMPSs Worker s06r1b51-ib0
[(430886)    API]  -  7 fortranCompiler(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompileObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompileWithObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompilerWithW3(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfortranCompiler(STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 smmount(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 landuse(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 landusenew(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 topo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 stdh(FILE_T,FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 envelope(FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 topsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 botsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 toposeamask(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 stdhtopo(FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 deeptemperature(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 snowalbedo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 vcgenerator(FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 roughness(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfdlco2(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 run_aerosol(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 degribgfs_generic_05(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfs2model_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 inc_rrtm(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 cnv_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 degribsst(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 albedo(FILE_T,FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 albedorrtm(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 vegfrac(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 z0vegfrac(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 allprep(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 readpaulsource(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 dust_start(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 nems(FILE_T,FILE_T)mpi.MPI tasks have been executed
[(430886)    API]  -  0 runPostprocAuth(STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  --- Total executed tasks in COMPSs Worker s06r1b51-ib0: 7
[(430886)    API]  -  --- Summary for COMPSs Worker s06r2b76-ib0
[(430886)    API]  -  0 fortranCompiler(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompileObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompileWithObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 fortranCompilerWithW3(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfortranCompiler(STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 smmount(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 landuse(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 landusenew(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 topo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 stdh(FILE_T,FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 envelope(FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 topsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 botsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 toposeamask(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 stdhtopo(FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 deeptemperature(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 snowalbedo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 vcgenerator(FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 roughness(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfdlco2(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 run_aerosol(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 degribgfs_generic_05(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 gfs2model_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 inc_rrtm(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430886)    API]  -  0 cnv_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 degribsst(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 albedo(FILE_T,FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 albedorrtm(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 vegfrac(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 z0vegfrac(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 allprep(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 readpaulsource(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 dust_start(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 nems(FILE_T,FILE_T)mpi.MPI tasks have been executed
[(430887)    API]  -  0 runPostprocAuth(STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  --- Total executed tasks in COMPSs Worker s06r2b76-ib0: 0
[(430887)    API]  -  --- Summary for COMPSs Worker s07r1b56-ib0
[(430887)    API]  -  0 fortranCompiler(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 fortranCompileObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 fortranCompileWithObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 fortranCompilerWithW3(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 gfortranCompiler(STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 smmount(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 landuse(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 landusenew(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 topo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 stdh(FILE_T,FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 envelope(FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 topsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 botsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 toposeamask(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 stdhtopo(FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 deeptemperature(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 snowalbedo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 vcgenerator(FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 roughness(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 gfdlco2(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 run_aerosol(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 degribgfs_generic_05(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 gfs2model_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 inc_rrtm(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 cnv_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 degribsst(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 albedo(FILE_T,FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 albedorrtm(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 vegfrac(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 z0vegfrac(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 allprep(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 readpaulsource(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  0 dust_start(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 nems(FILE_T,FILE_T)mpi.MPI tasks have been executed
[(430887)    API]  -  0 runPostprocAuth(STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  --- Total executed tasks in COMPSs Worker s07r1b56-ib0: 1
[(430887)    API]  -  -------------------------------------------------------
[(430887)    API]  -  
[(430887)    API]  -  ------------ COMPSs Task Execution Summary ------------
[(430887)    API]  -  22 fortranCompiler(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 fortranCompileObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 fortranCompileWithObject(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 fortranCompilerWithW3(STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,STRING_T,FILE_T,STRING_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 gfortranCompiler(STRING_T,FILE_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 smmount(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 landuse(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 landusenew(STRING_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 topo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 stdh(FILE_T,FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 envelope(FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 topsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 botsoiltype(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 toposeamask(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 stdhtopo(FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 deeptemperature(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 snowalbedo(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 vcgenerator(FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 roughness(STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 gfdlco2(FILE_T,STRING_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 run_aerosol(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 degribgfs_generic_05(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 gfs2model_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 inc_rrtm(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 cnv_rrtm(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 degribsst(FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 albedo(FILE_T,FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 albedorrtm(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 vegfrac(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 z0vegfrac(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 allprep(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 readpaulsource(FILE_T,FILE_T,FILE_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 dust_start(FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T,FILE_T)binary.BINARY tasks have been executed
[(430887)    API]  -  1 nems(FILE_T,FILE_T)mpi.MPI tasks have been executed
[(430887)    API]  -  1 runPostprocAuth(STRING_T,STRING_T,STRING_T)binary.BINARY tasks have been executed
[(430887)    API]  -  Total executed tasks: 56
[(430887)    API]  -  -------------------------------------------------------
[(430887)    API]  -  Stop IT reached
[(430887)    API]  -  Stopping Graph generation...
[(430887)    API]  -  Stopping AP...
[(430891)    API]  -  Stopping TD...
Exit NIOWorker
[persistent_worker.sh] Clean WD /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s07r1b56-ib0
[(431409)    API]  -  Stopping Comm...
Exit NIOWorker
[persistent_worker.sh] Clean WD /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r1b51-ib0
Exit NIOWorker
[persistent_worker.sh] Clean WD /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s06r2b76-ib0
[(431426)    API]  -  Runtime stopped
[(431426)    API]  -  Execution Finished
Exit NIOWorker
[persistent_worker.sh] Clean WD /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72/s10r1b81-ib0

------------------------------------------------------------
---- Executing Epilog actions ----
Cleanup Worker TMP files
- Removing /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Removing /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Removing /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72
- Removing /scratch/tmp/b663fb84-ce0f-4725-8974-1ed5db6a4d72
Cleanup TMP files

------------------------------------------------------------
Sender: LSF System <perf@s03r2b62>
Subject: Job 2915951: <COMPSs> in cluster <mn3> Done

Job <COMPSs> was submitted from host <login1> by user <bsc19533> in cluster <mn3>.
Job was executed on host(s) <16*s03r2b62>, in queue <bsc_cs>, as user <bsc19533> in cluster <mn3>.
                            <16*s06r1b51>
                            <16*s06r2b76>
                            <16*s07r1b56>
                            <16*s10r1b81>
</home/bsc19/bsc19533> was used as the home directory.
</home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/.> was used as the working directory.
Started at Tue Mar 14 16:25:09 2017
Results reported on Tue Mar 14 16:32:31 2017

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash -e
#
#BSUB -J COMPSs
#BSUB -x
#BSUB -W 00:15
#BSUB -cwd .
#BSUB -oo compss-%J.out
#BSUB -eo compss-%J.err
#BSUB -n  80
#BSUB -R "span[ptile=16]"
  
host_list=$(cat $LSB_DJOB_HOSTFILE | awk '!a[$0]++' | sed -e 's/\.[^\ ]*//g')
master_node=$(hostname)
worker_nodes=$(echo ${host_list} | sed -e "s/${master_node}//g")

/gpfs/apps/MN3/COMPSs/Trunk/Runtime/scripts/user/../queues/commons/../../user/launch_compss --master_node="${master_node}" --worker_nodes="${worker_nodes}" --node_memory=disabled  --sc_cfg=default.cfg --tasks_per_node=16 --master_working_dir=. --worker_working_dir=scratch --network=infiniband --log_level=debug --summary --graph=true --tracing=false --classpath=/home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./../nmmb.jar nmmb.Nmmb /home/bsc19/bsc19533/nmmb/nmmb-bsc-ctm-v2.0/JOB/./nmmb_compss.properties

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :               19449.00 sec.
    Max Memory :             8731 MB
    Average Memory :         5375.85 MB
    Total Requested Memory : 144960.00 MB
    Delta Memory :           136229.00 MB
    (Delta: the difference between Total Requested Memory and Max Memory.)
    Max Processes :          90
    Max Threads :            560
    Job Energy Consumption : 0.007009 kWh

The output (if any) is above this job summary.



PS:

Read file <compss-2915951.err> for stderr output of this job.

