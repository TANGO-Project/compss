#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  base_app_dir=$3
  COMPSs_log_folder=$4
  target_log_folder=$5
  retryNum=$6
  
  # Global exit variable
  exitValue=0
  
  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'${IT_HOME}'<\/InstallDir>' ${base_app_dir}/project.xml
  
  #----------------------------------------------------------------------------------
  # Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/
  
  #----------------------------------------------------------------------------------
  # Run application 1 - Blast
  echo
  echo "*** RUNNING JAVA APPLICATION BLAST"
  output_log="${target_log_folder}/blast_0${retryNum}.outputlog"
  error_log="${target_log_folder}/blast_0${retryNum}.errorlog"
  expectedTime=180s
 
  debug=true
  binary=${base_app_dir}/binary/blastall
  database=$HOME/svn/bar/datasets/Blast/databases/swissprot/swissprot
  sequences=$HOME/svn/bar/datasets/Blast/sequences/sargasso_test.fasta
  #database=/sharedDisk/Blast/databases/swissprot/swissprot
  #sequences=/sharedDisk/Blast/sequences/sargasso_test.fasta
  numFrags=8
  tmpDir=/tmp/
  outputFile=${target_log_folder}/blastOut.txt
 
  export BLAST_BINARY=$binary

  timeout --signal=2 $expectedTime ${COMPSs_exec} \
     --project=${base_app_dir}/project.xml \
     --resources=${base_app_dir}/resources.xml \
     --debug \
     --summary \
     -gt \
     --lang=java \
     --comm=$comm \
     --classpath=${base_app_dir}/blast.jar \
     blast.Blast $debug $database $sequences $numFrags $tmpDir $outputFile > >(tee ${output_log}) 2> >(tee ${error_log} >&2)
  
  # Check timeout
  if [[ "$?" = "124" ]]; then
     # Copy LOG files
     cp -rf ${COMPSs_log_folder}/blast.Blast_0${retryNum}/* ${target_log_folder}
     
     # Report time out
     echo "[WARNING] Java Application timed out" >> ${output_log}
     exitValue=124
  else
     # Copy LOG files
     cp -rf ${COMPSs_log_folder}/blast.Blast_0${retryNum}/* ${target_log_folder}
  
     # Check result
     ${base_app_dir}/result ${output_log} ${target_log_folder} 
     exitValue=$?
  fi
  
  
  #----------------------------------------------------------------------------------
  # Return execution status
  exit $exitValue

